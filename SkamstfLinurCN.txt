Other bestselling titles by Andrew S. Tanenbaum
A Simple Transport Protocol
The Internet Transport Protocols: UDP
The Internet Transport Protocols: TCP
Section 7.1. DNS—The Domain Name System
Section 8.8. E-Mail Security
International. It is not to be re-exported and it is not for sale in the U.S.A., Mexico, or Canada.
Cover design: Andrew S. Tanenbaum
Interior Design: Andrew S. Tanenbaum
Typesetting: Andrew S. Tanenbaum
Publishing as Prentice Hall PTR
Pearson Education LTD.
Pearson Education Australia PTY, Limited
Pearson Educación de Mexico, S.A. de C.V.
Other bestselling titles by Andrew S.
detailed case studies are given: UNIX/Linux and Windows 2000.
This popular text on operating systems, co-authored with Albert S. Woodhull, is the only book
carefully illustrated with MINIX, a free POSIX-based UNIX-like operating system for personal
computers. Each book contains a free CD-ROM containing the complete MINIX system,
Andrew S. Tanenbaum has an S.B. degree from M.I.T. and a Ph.D. from the University of
as well as of MINIX, a small UNIX clone intended for use in student programming labs. This
Ph.D. students and programmers, he helped design the Amoeba distributed operating system,
a high-performance microkernel-based distributed operating system. The MINIX and Amoeba
His Ph.D. students have gone on to greater glory after getting their degrees. He is very proud
Prof. Tanenbaum is a Fellow of the ACM, a Fellow of the the IEEE, and a member of the Royal
Netherlands Academy of Arts and Sciences. He is also winner of the 1994 ACM Karl V.
Karlstrom Outstanding Educator Award, winner of the 1997 ACM/SIGCSE Award for
on the World Wide Web can be found at URL http://www.cs.vu.nl/~ast/ .
only wired LAN in widespread use was Ethernet, and virtually all WANs were on the Internet.
Bluetooth, WAP, i-mode, and others. Accordingly, a large amount of material has been added
this chapter are ADSL, broadband wireless, wireless MANs, and Internet access over cable and
DOCSIS.
In contrast, the MAC sublayer has been an area of great activity in recent years, so many
and data link layer switching, including MPLS.
Chapter 5 has also been updated, with the removal of all the ATM material and the addition of
present here, with a discussion of routing in ad hoc networks. Other new topics include NAT
these is an example of socket programming. A one-page client and a one-page server are
given in C and discussed. These programs, available on the book's Web site, can be compiled
experimentation. Other new topics include remote procedure call, RTP, and transaction/TCP.
DNS, the rest of the chapter deals with just three topics: e-mail, the Web, and multimedia. But
pages, covering a vast array of topics, including static and dynamic Web pages, HTTP, CGI
modern Web pages are written, including brief introductions to XML, XSL, XHTML, PHP, and
more, all with examples that can be tested. The wireless Web is also discussed, focusing on imode and WAP. The multimedia material now includes MP3, streaming audio, Internet radio,
and voice over IP.
algorithms, digital signatures, and X.509 certificates) and the applications of these principles
quantum cryptography to government censorship) and deep (e.g., how SHA-1 works in detail).
reading this one, the following should ring a bell: ADSL, AES, AMPS, AODV, ARP, ATM, BGP,
CDMA, CDN, CGI, CIDR, DCF, DES, DHCP, DMCA, FDM, FHSS, GPRS, GSM, HDLC, HFC, HTML,
HTTP, ICMP, IMAP, ISP, ITU, LAN, LMDS, MAC, MACA, MIME, MPEG, MPLS, MTU, NAP, NAT,
NSA, NTSC, OFDM, OSPF, PCF, PCM, PGP, PHP, PKI, POTS, PPP, PSTN, QAM, QPSK, RED, RFC,
RPC, RSA, RSVP, RTP, SSL, TCP, TDM, UDP, URL, UTP, VLAN, VPN, VSAT, WAN, WAP, WDMA,
WEP, WWW, and XML But don't worry. Each will be carefully defined before it is used.
A problem solutions manual.
A simulator (written in C) for the example protocols of Chap. 3.
A Web page with links to many tutorials, organizations, FAQs, etc.
Many people helped me during the course of the fourth edition. I would especially like to thank
hardware at a critical moment. Dr. F. de Nies did an expert cut-and-paste job right when it
than I had consumed in the previous 7 years and was helpful in numerous other ways as well.
ANDREW S. TANENBAUM
room had glass walls, through which visitors could gawk at the great electronic wonder inside. A medium-sized
software on top of the operating system, called middleware, is responsible for implementing this model. A wellknown example of a distributed system is the World Wide Web, in which everything looks like a document (Web
However, probably even more important than sharing physical resources such as printers, scanners, and CD
could not last more than five minutes. A modern manufacturing plant, with a computer-controlled assembly line,
Figure 1-1. A network with two clients and one server.
A second goal of setting up a computer network has to do with people rather than information or even
computers. A computer network can provide a powerful communication medium among employees. Virtually
A third goal for increasingly many companies is doing business electronically with other companies, especially
A fourth goal that is starting to become more important is doing business with consumers over the Internet.
in the world (after IBM). When asked why Digital was not going after the personal computer market in a big way,
professional organizations, such as the ACM (www.acm.org) and the IEEE Computer Society
answer to the 19th century's telephone. E-mail is already used on a daily basis by millions of people all over the
Any teenager worth his or her salt is addicted to instant messaging. This facility, derived from the UNIX talk
program in use since around 1970, allows two people to type messages at each other in real time. A multiperson
system. A new user can then go to any existing member to see what he has and get a list of other members to
Internet radio, three rapidly growing areas. Another application is telelearning, meaning attending 8 A.M. classes
that may drive all the rest) is video on demand. A decade or so hence, it may be possible to select any movie or
Why would anyone want one? A common reason is the portable office. People on the road often want to use
walking around a store with a PDA doing inventory. At many busy airports, car rental return clerks work in the
the police. It has been estimated that city governments in the U.S. alone could collect an additional $10 billion
A whole different application area for wireless networks is the expected merger of cell phones and PDAs into tiny
wireless computers. A first attempt was tiny wireless PDAs that could display stripped-down Web pages on their
even tinier screens. This system, called WAP 1.0 (Wireless Application Protocol) failed, mostly due to the
microscopic screens, low bandwidth, and poor service. But newer devices and services will be better with WAP
force behind this phenomenon consists of an amalgam of wireless PDA manufacturers and network operators
A little further out in time are personal area networks and wearable computers. IBM has developed a watch that
the same way magnetic stripe cards do now (possibly in combination with a PIN code or biometric
briefly mention a few of them; a thorough study would require a full book, at least. A popular feature of many
Another key topic is government versus citizen. The FBI has installed a system at many Internet service
finding information about illegal activities. Unfortunately, the Fourth Amendment to the U.S. Constitution prohibits
because people have collected millions of e-mail addresses and sell them on CD-ROMs to would-be marketeers.
E-mail messages containing active content (basically programs or macros that execute on the receiver's
A lot of these problems could be solved if the computer industry took computer security seriously. If all
more and more features to their programs, which inevitably means more code and thus more bugs. A tax on new
features might help, but that is probably a tough sell in some quarters. A refund for defective software might be
come here. I want you.'' Although the packet may actually be received (heard) by many people, only Watson
network. Also, a PDA that controls the user's hearing aid or pacemaker fits in this category. Beyond the personal
machines want to transmit simultaneously. The arbitration mechanism may be centralized or distributed. IEEE
A second type of broadcast system is the ring. In a ring, each bit propagates around on its own, not waiting for
having the machines take turns, are in use. IEEE 802.5 (the IBM token ring), is a ring-based LAN operating at 4
and 16 Mbps. FDDI is another example of a ring network.
Broadcast networks can be further divided into static and dynamic, depending on how the channel is allocated. A
A metropolitan area network, or MAN, covers a city. The best-known example of a MAN is the cable television
Starting when the Internet attracted a mass audience, the cable TV network operators began to realize that with
that point, the cable TV system began to morph from a way to distribute television to a metropolitan area
network. To a first approximation, a MAN might look something like the system shown in Fig. 1-8. In this figure
Figure 1-8. A metropolitan area network based on cable TV.
Cable television is not the only MAN. Recent developments in high-speed wireless Internet access resulted in
another MAN, which has been standardized as IEEE 802.16. We will look at this area in Chap. 2.
A wide area network, or WAN, spans a large geographical area, often a country or continent. It contains a
In this model, shown in Fig. 1-9, each host is frequently connected to a LAN on which a router is present,
A short comment about the term ''subnet'' is in order here. Originally, its only meaning was the collection of
each intermediate router in its entirety, stored there until the required output line is free, and then forwarded. A
The principle of a packet-switched WAN is so important that it is worth devoting a few more words to it.
delivered to the receiving process. A stream of packets resulting from some initial message is illustrated in Fig.
Figure 1-10. A stream of packets from sender to receiver.
In this figure, all the packets follow the route ACE, rather than ABDE or ACDE. In some networks all packets
from a given message must follow the same route; in others each packet is routed separately. Of course, if ACE
Routing decisions are made locally. When a packet arrives at router A,itis up to A to decide if this packet should
be sent on the line to B or the line to C. How A makes that decision is called the routing algorithm. Many of them
Not all WANs are packet switched. A second possibility for a WAN is a satellite system. Each router has an
Figure 1-11. (a) Bluetooth configuration. (b) Wireless LAN.
called IEEE 802.11, which most systems implement and which is becoming very widespread. We will discuss it
system. This service is often called local multipoint distribution service. We will study it later in the book. A
standard for it, called IEEE 802.16, has also been developed. We will examine the standard in Chap. 4.
telephones to call the office. Each call is independent of the other ones. A much more efficient option, however,
is the flying LAN of Fig. 1-12(b). Here each seat comes equipped with an Ethernet connector into which
passengers can plug their computers. A single router on the aircraft maintains a radio link with some router on
the ground, changing routers as it flies along. This configuration is just a traditional LAN, except that its
Figure 1-12. (a) Individual mobile computers. (b) A flying LAN.
History may record this remark in the same category as IBM's chairman T.J. Watson's 1945 explanation of why
IBM was not getting into the computer business: ''Four or five computers should be enough for the entire world
will be accessible over the Internet. This is one of those visionary concepts that nobody asked for (like TV
Computers (desktop PC, notebook PC, PDA, shared peripherals).
Entertainment (TV, DVD, VCR, camcorder, camera, stereo, MP3).
various computers over the years, with mixed results. A series of phone calls to the vendor's helpdesk typically
the hard disk and then reinstall Windows from the CD-ROM. Telling the purchaser of an Internet refrigerator to
four settings: OFF, LOW, MEDIUM, and HIGH. Now they have 30-page manuals. Once they are networked,
means no format wars. Telling consumers to buy peripherals with IEEE 1394 (FireWire) interfaces and a few
years later retracting that and saying USB 2.0 is the interface-of-the-month is going to make consumers skittish.
burglar disarm your security system from his PDA and then plunder your house is something quite different.
software. A collection of interconnected networks is called an internetwork or internet. These terms will be used
A common form of internet is a collection of LANs connected by a WAN. In fact, if we were to replace the label
''subnet'' in Fig. 1-9 by ''WAN,'' nothing else in the figure would have to change. The only real technical
distinction between a subnet and a WAN in this case is whether hosts are present. If the system within the gray
area contains only routers, it is a subnet; if it contains both routers and hosts, it is a WAN. The real differences
the case of a LAN, the cable and the hosts form the network. There really is no subnet.
An internetwork is formed when distinct networks are interconnected. In our view, connecting a LAN and a WAN
A five-layer network is illustrated in Fig. 1-13. The entities comprising the corresponding layers on different
A set of layers and protocols is called a network architecture. The specification of an architecture must contain
each machine can correctly use all the protocols. A list of protocols used by a certain system, one protocol per
his peer. To do so, he passes a message (in English) across the 2/3 interface to his translator, saying ''I like
in Fig. 1-15. A message, M, is produced by an application process running in layer 5 and given to layer 4 for
smaller units, packets, prepending a layer 3 header to each packet. In this example, M is split into two parts, M1
messages. A related issue is the problem of what to do when processes insist on transmitting data in units that
A typical situation in which a reliable connection-oriented service is appropriate is file transfer. The owner of the
A service is formally specified by a set of primitives (operations) available to a user process to access the
These primitives might be used as follows. First, the server executes LISTEN to indicate that it is prepared to
accept incoming connections. A common way to implement LISTEN is to make it a blocking system call. After
Next, the client process executes CONNECT to establish a connection with the server. The CONNECT call
LISTEN.
The next step is for the server to execute RECEIVE to prepare to accept the first request. Normally, the server
does this immediately upon being released from the LISTEN, before the acknowledgement can get back to the
client. The RECEIVE call blocks the server.
Then the client executes SEND to transmit its request (3) followed by the execution of RECEIVE to get the reply.
request. After it has done the work, it uses SEND to return the answer to the client (4). The arrival of this packet
now. If it is done, it can use DISCONNECT to terminate the connection. Usually, an initial DISCONNECT is a
needed (5). When the server gets the packet, it also issues a DISCONNECT of its own, acknowledging the client
Of course, life is not so simple. Many things can go wrong here. The timing can be wrong (e.g., the CONNECT is
done before the LISTEN), packets can get lost, and much more. We will look at these issues in great detail later,
important, however, that we emphasize it again here. A service is a set of primitives (operations) that a layer
its users, but it says nothing at all about how these operations are implemented. A service relates to an interface
A protocol, in contrast, is a set of rules governing the format and meaning of the packets, or messages that are
An analogy with programming languages is worth making. A service is like an abstract data type or an object in
these operations are implemented. A protocol relates to the implementation of the service and as such is not
service primitive SEND PACKET with the user providing a pointer to a fully assembled packet. This arrangement
two sections we will discuss two important network architectures, the OSI reference model and the TCP/IP
reference model. Although the protocols associated with the OSI model are rarely used any more, the model
TCP/IP model has the opposite properties: the model itself is not of much use but the protocols are widely used.
1.4.1 The OSI Reference Model
The OSI model (minus the physical medium) is shown in Fig. 1-20. This model is based on a proposal developed
by the International Standards Organization (ISO) as a first step toward international standardization of the
model is called the ISO OSI (Open Systems Interconnection) Reference Model because it deals with connecting
open systems—that is, systems that are open for communication with other systems. We will just call it the OSI
Figure 1-20. The OSI reference model.
The OSI model has seven layers. The principles that were applied to arrive at the seven layers can be briefly
1. A layer should be created where a different abstraction is needed.
Below we will discuss each layer of the model in turn, starting at the bottom layer. Note that the OSI model itself
layer. It just tells what each layer should do. However, ISO has also produced standards for all the layers,
A special sublayer of the data link layer, the medium access control sublayer, deals with this problem.
The network layer controls the operation of the subnet. A key design issue is determining how packets are
application protocol is HTTP (HyperText Transfer Protocol), which is the basis for the World Wide Web. When a
browser wants a Web page, it sends the name of the page it wants to the server using HTTP. The server then
1.4.2 The TCP/IP Reference Model
Let us now turn from the OSI reference model to the reference model used in the grandparent of all wide area
computer networks, the ARPANET, and its successor, the worldwide Internet. Although we will give a brief
history of the ARPANET later, it is useful to mention a few key aspects of it now. The ARPANET was a research
network sponsored by the DoD (U.S. Department of Defense). It eventually connected hundreds of universities
beginning. This architecture later became known as the TCP/IP Reference Model, after its two primary protocols.
It was first defined in (Cerf and Kahn, 1974). A later perspective is given in (Leiner et al., 1985). The design
The analogy here is with the (snail) mail system. A person can drop a sequence of international letters into a
The internet layer defines an official packet format and protocol called IP (Internet Protocol). The job of the
internet layer is to deliver IP packets where they are supposed to go. Packet routing is clearly the major issue
here, as is avoiding congestion. For these reasons, it is reasonable to say that the TCP/IP internet layer is
similar in functionality to the OSI network layer. Figure 1-21 shows this correspondence.
Figure 1-21. The TCP/IP reference model.
The layer above the internet layer in the TCP/IP model is now usually called the transport layer. It is designed to
allow peer entities on the source and destination hosts to carry on a conversation, just as in the OSI transport
layer. Two end-to-end transport protocols have been defined here. The first one, TCP (Transmission Control
messages and passes each one on to the internet layer. At the destination, the receiving TCP process
reassembles the received messages into the output stream. TCP also handles flow control to make sure a fast
The second protocol in this layer, UDP (User Datagram Protocol), is an unreliable, connectionless protocol for
applications that do not want TCP's sequencing or flow control and wish to provide their own. It is also widely
important than accurate delivery, such as transmitting speech or video. The relation of IP, TCP, and UDP is
shown in Fig. 1-22. Since the model was developed, IP has been implemented on many other networks.
Figure 1-22. Protocols and networks in the TCP/IP model initially.
The TCP/IP model does not have session or presentation layers. No need for them was perceived, so they were
not included. Experience with the OSI model has proven this view correct: they are of little use to most
included virtual terminal (TELNET), file transfer (FTP), and electronic mail (SMTP), as shown in Fig. 1-22. The
originally just a kind of file transfer, but later a specialized protocol (SMTP) was developed for it. Many other
protocols have been added to these over the years: the Domain Name System (DNS) for mapping host names
onto their network addresses, NNTP, the protocol for moving USENET news articles around, and HTTP, the
Below the internet layer is a great void. The TCP/IP reference model does not really say much about what
IP packets to it. This protocol is not defined and varies from host to host and network to network. Books and
papers about the TCP/IP model rarely discuss it.
1.4.3 A Comparison of the OSI and TCP/IP Reference Models
The OSI and TCP/IP reference models have much in common. Both are based on the concept of a stack of
For an entire book comparing and contrasting TCP/IP and OSI, see (Piscitello and Chapin, 1993).
Three concepts are central to the OSI model:
Probably the biggest contribution of the OSI model is to make the distinction between these three concepts
A layer's interface tells the processes above it how to access it. It specifies what the parameters are and what
The TCP/IP model did not originally clearly distinguish between service, interface, and protocol, although people
have tried to retrofit it after the fact to make it more OSI-like. For example, the only real services offered by the
internet layer are SEND IP PACKET and RECEIVE IP PACKET.
As a consequence, the protocols in the OSI model are better hidden than in the TCP/IP model and can be
The OSI reference model was devised before the corresponding protocols were invented. This ordering means
the OSI model and existing protocols, it was discovered that these networks did not match the required service
one network, run by the government and using the OSI protocols, so no thought was given to internetworking.
With TCP/IP the reverse was true: the protocols came first, and the model was really just a description of the
other, non-TCP/IP networks.
number of layers: the OSI model has seven layers and the TCP/IP has four layers. Both have (inter)network,
Another difference is in the area of connectionless versus connection-oriented communication. The OSI model
users). The TCP/IP model has only one mode in the network layer (connectionless) but supports both modes in
1.4.4 A Critique of the OSI Model and Protocols
Neither the OSI model and its protocols nor the TCP/IP model and its protocols are perfect. Quite a bit of
these criticisms. We will begin with OSI and examine TCP/IP afterward.
OSI model and its protocols were going to take over the world and push everything else out of their way. This did
not happen. Why? A look back at some of the lessons may be useful. These lessons can be summarized as:
success. David Clark of M.I.T. has a theory of standards that he calls the apocalypse of the two elephants, which
It now appears that the standard OSI protocols got crushed. The competing TCP/IP protocols were already in
widespread use by research universities by the time the OSI protocols appeared. While the billion-dollar wave of
offering TCP/IP products. When OSI came around, they did not want to support a second protocol stack until
first, no company went first and OSI never happened.
The second reason that OSI never caught on is that both the model and the protocols are flawed. The choice of
The OSI model, along with the associated service definitions and protocols, is extraordinarily complex. When
In addition to being incomprehensible, another problem with OSI is that some functions, such as addressing,
people to associate ''OSI'' with ''poor quality.'' Although the products improved in the course of time, the image
In contrast, one of the first implementations of TCP/IP was part of Berkeley UNIX and was quite good (not to
On account of the initial implementation, many people, especially in academia, thought of TCP/IP as part of
UNIX, and UNIX in the 1980s in academia was not unlike parenthood (then incorrectly called motherhood) and
OSI, on the other hand, was widely thought to be the creature of the European telecommunication ministries, the
European Community, and later the U.S. Government. This belief was only partly true, but the very idea of a
Some people viewed this development in the same light as IBM announcing in the 1960s that PL/I was the
1.4.5 A Critique of the TCP/IP Reference Model
The TCP/IP model and protocols have their problems too. First, the model does not clearly distinguish the
the specification and the implementation, something that OSI does very carefully, and TCP/IP does not.
Consequently, the TCP/IP model is not much of a guide for designing new networks using new technologies.
Second, the TCP/IP model is not at all general and is poorly suited to describing any protocol stack other than
TCP/IP. Trying to use the TCP/IP model to describe Bluetooth, for example, is completely impossible.
Fourth, the TCP/IP model does not distinguish (or even mention) the physical and data link layers. These are
them from one side to the other with the desired degree of reliability. A proper model should include both as
separate layers. The TCP/IP model does not do this.
Finally, although the IP and TCP protocols were carefully thought out and well implemented, many of the other
protocol, TELNET, for example, was designed for a ten-character per second mechanical Teletype terminal. It
In summary, despite its problems, the OSI model (minus the session and presentation layers) has proven to be
exceptionally useful for discussing computer networks. In contrast, the OSI protocols have not become popular.
The reverse is true of TCP/IP: the model is practically nonexistent, but the protocols are widely used. Since
computer scientists like to have their cake and eat it, too, in this book we will use a modified OSI model but
concentrate primarily on the TCP/IP and related protocols, as well as newer ones such as 802, SONET, and
technology. Then we will consider ATM, which is often used within the core of large (telephone) networks.
dominant local area network. Finally, we will look at IEEE 802.11, the standard for wireless LANs.
The ARPANET
Around 1960, the DoD awarded a contract to the RAND Corporation to find a solution. One of its employees,
for the DoD describing his ideas in detail. Officials at the Pentagon liked the concept and asked AT&T, then the
U.S. national telephone monopoly, to build a prototype. AT&T dismissed Baran's ideas out of hand. The biggest
happened next, we have to go back to October 1957, when the Soviet Union beat the U.S. into space with the
His immediate response was to create a single defense research organization, ARPA, the Advanced Research
Projects Agency. ARPA had no scientists or laboratories; in fact, it had nothing more than an office and a small
For the first few years, ARPA tried to figure out what its mission should be, but in 1967, the attention of ARPA's
ACM SIGOPS Symposium on Operating System Principles held in Gatlinburg, Tennessee in late 1967 (Roberts,
Laboratory in England. The NPL system was not a national system (it just connected several computers on the
NPL campus), but it demonstrated that packet switching could be made to work. Furthermore, it cited Baran's
as the ARPANET.
transmission lines. For high reliability, each IMP would be connected to at least two other IMPs. The subnet was
Each node of the network was to consist of an IMP and a host, in the same room, connected by a short wire. A
host could send messages of up to 8063 bits to its IMP, which would then break these up into packets of at most
ARPA then put out a tender for building the subnet. Twelve companies bid for it. After evaluating all the
proposals, ARPA selected BBN, a consulting firm in Cambridge, Massachusetts, and in December 1968,
awarded it a contract to build the subnet and write the subnet software. BBN chose to use specially modified
Honeywell DDP-316 minicomputers with 12K 16-bit words of core memory as the IMPs. The IMPs did not have
from telephone companies. Although 56 kbps is now the choice of teenagers who cannot afford ADSL or cable,
The software was split into two parts: subnet and host. The subnet software consisted of the IMP end of the
host-IMP connection, the IMP-IMP protocol, and a source IMP to destination IMP protocol designed to improve
reliability. The original ARPANET design is shown in Fig. 1-26.
Figure 1-26. The original ARPANET design.
Outside the subnet, software was also needed, namely, the host end of the host-IMP connection, the host-host
protocol, and the application software. It soon became clear that BBN felt that when it had accepted a message
on a host-IMP wire and placed it on the host-IMP wire at the destination, its job was done.
Nevertheless, somehow an experimental network went on the air in December 1969 with four nodes: at UCLA,
UCSB, SRI, and the University of Utah. These four were chosen because all had a large number of ARPA
shows how rapidly the ARPANET grew in the first 3 years.
Figure 1-27. Growth of the ARPANET. (a) December 1969. (b) July 1970. (c) March 1971. (d) April 1972. (e)
In addition to helping the fledgling ARPANET grow, ARPA also funded research on the use of satellite networks
the packet radio network to send messages to SRI, which were then forwarded over the ARPANET to the East
This experiment also demonstrated that the existing ARPANET protocols were not suitable for running over
TCP/IP model and protocols (Cerf and Kahn, 1974). TCP/IP was specifically designed to handle communication
up to the ARPANET.
To encourage adoption of these new protocols, ARPA awarded several contracts to BBN and the University of
California at Berkeley to integrate them into Berkeley UNIX. Researchers at Berkeley developed a convenient
The timing was perfect. Many universities had just acquired a second or third VAX computer and a LAN to
connect them, but they had no networking software. When 4.2BSD came along, with TCP/IP, sockets, and many
network utilities, the complete package was adopted immediately. Furthermore, with TCP/IP, it was easy for the
LANs to connect to the ARPANET, and many did.
During the 1980s, additional networks, especially LANs, were connected to the ARPANET. As the scale
increased, finding hosts became increasingly expensive, so DNS (Domain Name System) was created to
organize machines into domains and map host names onto IP addresses. Since then, DNS has become a
NSFNET
By the late 1970s, NSF (the U.S. National Science Foundation) saw the enormous impact the ARPANET was
projects. However, to get on the ARPANET, a university had to have a research contract with the DoD, which
many did not have. NSF's response was to design a successor to the ARPANET that would be open to all
university research groups. To have something concrete to start with, NSF decided to build a backbone network
Each supercomputer was given a little brother, consisting of an LSI-11 microcomputer called a fuzzball. The
the ARPANET used. The software technology was different however: the fuzzballs spoke TCP/IP right from the
start, making it the first TCP/IP WAN.
NSF also funded some (eventually about 20) regional networks that connected to the backbone to allow users at
called NSFNET. It connected to the ARPANET through a link between an IMP and a fuzzball in the CarnegieMellon machine room. The first NSFNET backbone is illustrated in Fig. 1-28.
Figure 1-28. The NSFNET backbone in 1988.
NSFNET was an instantaneous success and was overloaded from the word go. NSF immediately began
planning its successor and awarded a contract to the Michigan-based MERIT consortium to run it. Fiber optic
channels at 448 kbps were leased from MCI (since merged with WorldCom) to provide the version 2 backbone.
IBM PC-RTs were used as routers. This, too, was soon overwhelmed, and by 1990, the second backbone was
As growth continued, NSF realized that the government could not continue financing networking forever.
Furthermore, commercial organizations wanted to join but were forbidden by NSF's charter from using networks
NSF paid for. Consequently, NSF encouraged MERIT, MCI, and IBM to form a nonprofit corporation, ANS
(Advanced Networks and Services), as the first step along the road to commercialization. In 1990, ANS took
over NSFNET and upgraded the 1.5-Mbps links to 45 Mbps to form ANSNET. This network operated for 5 years
and was then sold to America Online. But by then, various companies were offering commercial IP service and it
network, NSF awarded contracts to four different network operators to establish a NAP (Network Access Point).
These operators were PacBell (San Francisco), Ameritech (Chicago), MFS (Washington, D.C.), and Sprint (New
York City, where for NAP purposes, Pennsauken, New Jersey counts as New York City). Every network operator
that wanted to provide backbone service to the NSF regional networks had to connect to all the NAPs.
get from its NAP to the destination's NAP. Consequently, the backbone carriers were forced to compete for the
and NSF that created the infrastructure that formed the basis for the Internet and then handed it over to industry
ARPANET and NSFNET. These included EuropaNET and EBONE in Europe, which started out with 2-Mbps
The number of networks, machines, and users connected to the ARPANET grew rapidly after TCP/IP became
the only official protocol on January 1, 1983. When NSFNET and the ARPANET were interconnected, the growth
The glue that holds the Internet together is the TCP/IP reference model and TCP/IP protocol stack. TCP/IP
TCP/IP protocol stack, has an IP address, and can send IP packets to all the other machines on the Internet.
call up an Internet service provider using a modem, be assigned a temporary IP address, and send IP packets to
1. E-mail. The ability to compose, send, and receive electronic mail has been around since the early days
of the ARPANET and is enormously popular. Many people get dozens of messages a day and consider
E-mail programs are available on virtually every kind of computer these days.
4. File transfer. Using the FTP program, users can copy files from one machine on the Internet to another.
researchers. One new application, the WWW (World Wide Web) changed all that and brought millions of new,
nonacademic users to the net. This application, invented by CERN physicist Tim Berners-Lee, did not change
Andreessen at the National Center for Supercomputer Applications in Urbana, Illinois, the WWW made it
Internet, thus gaining access to e-mail, the WWW, and other Internet services. These companies signed up tens
A good place to start is with a client at home. Let us assume our client calls his or her ISP over a dial-up
telephone line, as shown in Fig. 1-29. The modem is a card within the PC that converts the digital signals the
transferred to the ISP's POP (Point of Presence), where they are removed from the telephone system and
injected into the ISP's regional network. From this point on, the system is fully digital and packet switched. If the
ISP is the local telco, the POP will probably be located in the telephone switching office where the telephone
wire from the client terminates. If the ISP is not the local telco, the POP may be a few switching offices down the
The ISP's regional network consists of interconnected routers in the various cities the ISP serves. If the packet is
destined for a host served directly by the ISP, the packet is delivered to the host. Otherwise, it is handed over to
the ISP's backbone operator.
At the top of the food chain are the major backbone operators, companies like AT&T and Sprint. They operate
If a packet given to the backbone is destined for an ISP or company served by the backbone, it is sent to the
connect at the NAPs discussed earlier. Basically, a NAP is a room full of routers, at least one per backbone. A
LAN in the room connects all the routers, so packets can be forwarded from any backbone to any other
1.5.2 Connection-Oriented Networks: X.25, Frame Relay, and ATM
connectionless subnets come from the ARPANET/Internet community. Remember that DoD's original desire in
funding and building the ARPANET was to have a network that would continue functioning even after multiple
By setting up a connection in advance, the subnet can reserve resources such as buffer space and router CPU
however. Interestingly enough, flat rate service exists in other sectors. For example, cable TV is billed at a flat
X.25 and Frame Relay
Our first example of a connection-oriented network is X.25, which was the first public data network. It was
company in each country expected there to be one data network per country—theirs. To use X.25, a computer
a few miscellaneous bits. X.25 networks operated for about a decade with mixed success.
In the 1980s, the X.25 networks were largely replaced by a new kind of network called frame relay. The essence
delivery, no error control, and no flow control make frame relay akin to a wide area LAN. Its most important
Yet another, and far more important, connection-oriented network is ATM (Asynchronous Transfer Mode). The
(closely tied to a clock), and ATM is not.
ATM was designed in the early 1990s and launched amid truly incredible hype (Ginsburg, 1996; Goralski, 1995;
Ibe, 1997; Kim et al., 1994; and Stallings, 2000). ATM was going to solve all the world's networking and
concerning OSI, that is, bad timing, technology, implementation, and politics. Having just beaten back the
telephone companies in round 1, many in the Internet community saw ATM as Internet versus the Telcos: the
quality of service left a lot to be desired. To make a long story short, ATM was much more successful than OSI,
and it is now widely used deep within the telephone system, often for moving IP packets. Because it is now
ATM Virtual Circuits
Since ATM networks are connection-oriented, sending data requires first sending a packet to set up the
system. Most ATM networks also support permanent virtual circuits, which are permanent connections between
permanent, has a unique connection identifier. A virtual circuit is illustrated in Fig. 1-30.
Figure 1-30. A virtual circuit.
Once a connection has been established, either side can begin transmitting data. The basic idea behind ATM is
handle short, fixed-length cells. Variable-length IP packets have to be routed by software, which is a slower
process. Another plus of ATM is that the hardware can be set up to copy one incoming cell to multiple output
Figure 1-31. An ATM cell.
delivered out of order as well. ATM, in contrast, guarantees never to deliver cells out of order.
ATM networks are organized like traditional WANs, with lines and switches (routers). The most common speeds
for ATM networks are 155 Mbps and 622 Mbps, although higher speeds are also supported. The 155-Mbps
of 155.52 Mbps was made for compatibility with AT&T's SONET transmission system, something we will study in
The ATM Reference Model
ATM has its own reference model, different from the OSI model and also different from the TCP/IP model. This
model is shown in Fig. 1-32. It consists of three layers, the physical, ATM, and ATM adaptation layers, plus
Figure 1-32. The ATM reference model.
The physical layer deals with the physical medium: voltages, bit timing, and various other issues. ATM does not
prescribe a particular set of rules but instead says that ATM cells can be sent on a wire or fiber by themselves,
but they can also be packaged inside the payload of other carrier systems. In other words, ATM has been
The ATM layer deals with cells and cell transport. It defines the layout of a cell and tells what the header fields
Because most applications do not want to work directly with cells (although some may), a layer above the ATM
layer has been defined to allow users to send packets larger than a cell. The ATM interface segments these
packets, transmits the cells individually, and reassembles them at the other end. This layer is the AAL (ATM
Unlike the earlier two-dimensional reference models, the ATM model is defined as being three-dimensional, as
The physical and AAL layers are each divided into two sublayers, one at the bottom that does the work and a
Figure 1-33. The ATM layers and sublayers, and their functions.
The PMD (Physical Medium Dependent) sublayer interfaces to the actual cable. It moves the bits on and off and
The other sublayer of the physical layer is the TC (Transmission Convergence) sublayer. When cells are
transmitted, the TC layer sends them as a string of bits to the PMD layer. Doing this is easy. At the other end,
the TC sublayer gets a pure incoming bit stream from the PMD sublayer. Its job is to convert this bit stream into
a cell stream for the ATM layer. It handles all the issues related to telling where cells begin and end in the bit
stream. In the ATM model, this functionality is in the physical layer. In the OSI model and in pretty much all other
As we mentioned earlier, the ATM layer manages cells, including their generation and transport. Most of the
interesting aspects of ATM are located here. It is a mixture of the OSI data link and network layers; it is not split
The AAL layer is split into a SAR (Segmentation And Reassembly) sublayer and a CS (Convergence Sublayer).
the destination. The upper sublayer makes it possible to have ATM systems offer different kinds of services to
As it is probably mostly downhill for ATM from now on, we will not discuss it further in this book. Nevertheless,
information about ATM, see (Dobrowski and Grise, 2001; and Gadecki and Heckart, 1997).
Both the Internet and ATM were designed for wide area networking. However, many companies, universities,
local area network. In this section we will say a little bit about the most popular LAN, Ethernet.
computer), there were never collisions there. This system, called ALOHANET, worked fairly well under
About the same time, a student named Bob Metcalfe got his bachelor's degree at M.I.T. and then moved up the
river to get his Ph.D. at Harvard. During his studies, he was exposed to Abramson's work. He became so
Abramson before starting work at Xerox PARC (Palo Alto Research Center). When he got to PARC, he saw that
the cable. A cable with multiple machines attached to it in parallel is called a multidrop cable. The system ran at
2.94 Mbps. A sketch of its architecture is given in Fig. 1-34. Ethernet had a major improvement over
ALOHANET: before transmitting, a computer first listened to the cable to see if someone else was already
with existing transmissions, giving a much higher efficiency. ALOHANET did not work like this because it was
The Xerox Ethernet was so successful that DEC, Intel, and Xerox drew up a standard in 1978 for a 10-Mbps
Ethernet, called the DIX standard. With two minor changes, the DIX standard became the IEEE 802.3 standard
In passing, it is worth mentioning that Ethernet (IEEE 802.3) is not the only LAN standard. The committee also
General Motors was pushing a LAN in which the topology was the same as Ethernet (a linear cable) but
computers took turns in transmitting by passing a short packet called a token from computer to computer. A
Similarly, IBM had its own favorite: its proprietary token ring. The token was passed around the ring and
802.4, this scheme, standardized as 802.5, is still in use at some IBM sites, but virtually nowhere outside of IBM
equipped with a brand X radio would not work in a room equipped with a brand Y base station. Finally, the
industry decided that a wireless LAN standard might be a good idea, so the IEEE committee that standardized
the wired LANs was given the task of drawing up a wireless LAN standard. The standard it came up with was
named 802.11. A common slang name for it is WiFi. It is an important standard and deserves respect, so we will
sometimes called ad hoc networking. A typical example is two or more people sitting down together in a room
not equipped with a wireless LAN and having their computers just communicate directly. The two modes are
The first decision was the easiest: what to call it. All the other LAN standards had numbers like 802.1, 802.2,
802.3, up to 802.10, so the wireless LAN standard was dubbed 802.11. The rest was harder.
particular, it should be possible to send an IP packet over the wireless LAN the same way a wired computer sent
an IP packet over Ethernet. Nevertheless, in the physical and data link layers, several inherent differences with
computer begin transmitting. With wireless LANs, that idea does not work so well. To see why, examine Fig. 136. Suppose that computer A is transmitting to computer B, but the radio range of A's transmitter is too short to
reach computer C. If C wants to transmit to B it can listen to the ether before starting, but the fact that it does not
Figure 1-37. A multicell 802.11 network.
wireless LAN it described ran at either 1 Mbps or 2 Mbps. Almost immediately, people complained that it was too
slow, so work began on faster standards. A split developed within the committee, resulting in two new standards
adhering to the standard. A larger market leads to mass production, economies of scale in manufacturing, VLSI
that have just happened, without any formal plan. The IBM PC and its successors are de facto standards for
small-office and home computers because dozens of manufacturers chose to copy IBM's machines very closely.
Similarly, UNIX is the de facto standard for operating systems in university computer science departments.
1984, AT&T, at that time the world's largest corporation, completely dominated the scene. It provided telephone
other companies combined servicing the remaining (mostly rural) customers. Since the breakup, AT&T continues
Operating Companies that were split off from AT&T and numerous independents provide local and cellular
simply a branch of the government, usually known as the PTT (Post, Telegraph & Telephone administration).
predecessor to today's ITU (International Telecommunication Union). Its job was standardizing international
was put into international service, ITU took over the job of standardizing telephony (pronounced te-LEF-ony) as
well. In 1947, ITU became an agency of the United Nations.
ITU has three main sectors:
1. Radiocommunications Sector (ITU-R).
2. Telecommunications Standardization Sector (ITU-T).
3. Development Sector (ITU-D).
ITU-R is concerned with allocating radio frequencies worldwide to the competing interest groups. We will focus
primarily on ITU-T, which is concerned with telephone and data communication systems. From 1956 to 1993,
ITU-T was known as CCITT, an acronym for its French name: Comité Consultatif International Télégraphique et
Téléphonique. On March 1, 1993, CCITT was reorganized to make it less bureaucratic and renamed to reflect its
new role. Both ITU-T and CCITT issued recommendations in the area of telephone and data communications.
One still frequently runs into CCITT recommendations, such as CCITT X.25, although since 1993
recommendations bear the ITU-T label.
ITU-T has four classes of members:
ITU-T has about 200 governmental members, including almost every member of the United Nations. Since the
United States does not have a PTT, somebody else had to represent it in ITU-T. This task fell to the State
Department, probably on the grounds that ITU-T had to do with foreign countries, the State Department's
specialty. There are approximately 500 sector members, including telephone companies (e.g., AT&T, Vodafone,
Sun, Toshiba), chip manufacturers (e.g., Intel, Motorola, TI), media companies (e.g., AOL Time Warner, CBS,
organizations and industry consortia are also sector members (e.g., IFIP and IATA). Associate members are
watch over the telecom business, such as the U.S. Federal Communications Commission.
ITU-T's task is to make technical recommendations about telephone, telegraph, and data communication
interfaces. These often become internationally recognized standards, for example, V.24 (also known as EIA RS232 in the United States), which specifies the placement and meaning of the various pins on the connector used
It should be noted that ITU-T recommendations are technically only suggestions that governments can adopt or
but elsewhere it would be a real problem. The fiction of calling ITU-T standards ''recommendations'' was and is
The real work of ITU-T is done in its 14 Study Groups, often as large as 400 people. There are currently 14
Despite all this, ITU-T actually gets things done. Since its inception, it has produced close to 3000
example, the popular V.90 56-kbps modem standard is an ITU recommendation.
involved in setting them. For more information about ITU, see (Irmer, 1994).
International standards are produced and published by ISO (International Standards Organization [ ]), a
89 member countries. These members include ANSI (U.S.), BSI (Great Britain), AFNOR (France), DIN
For the purist, ISO's true name is the International Organization for Standardization.
ISO issues standards on a truly vast number of subjects, ranging from nuts and bolts (literally) to telephone pole
coatings [not to mention cocoa beans (ISO 2451), fishing nets (ISO 1530), women's underwear (ISO 4416) and
been issued, including the OSI standards. ISO has almost 200 Technical Committees, numbered in the order of
pitches). TC97 deals with computers and information processing. Each TC has subcommittees (SCs) divided
assigned to work on ISO matters by their employers, whose products are being standardized. Others are
On issues of telecommunication standards, ISO and ITU-T often cooperate (ISO is a member of ITU-T) to avoid
The U.S. representative in ISO is ANSI (American National Standards Institute), which despite its name, is a
interested parties. ANSI standards are frequently adopted by ISO as international standards.
The procedure used by ISO for adopting standards has been designed to achieve as broad a consensus as
international standard in some area. A working group is then formed to come up with a CD (Committee Draft).
The CD is then circulated to all the member bodies, which get 6 months to criticize it. If a substantial majority
approves, a revised document, called a DIS (Draft International Standard) is produced and circulated for
comments and voting. Based on the results of this round, the final text of the IS (International Standard) is
prepared, approved, and published. In areas of great controversy, a CD or DIS may have to go through several
NIST (National Institute of Standards and Technology) is part of the U.S. Department of Commerce. It used to be
the National Bureau of Standards. It issues standards that are mandatory for purchases made by the U.S.
Another major player in the standards world is IEEE (Institute of Electrical and Electronics Engineers), the
of conferences each year, IEEE has a standardization group that develops standards in the area of electrical
engineering and computing. IEEE's 802 committee has standardized many kinds of LANs. We will study some of
The worldwide Internet has its own standardization mechanisms, very different from those of ITU-T and ISO. The
difference can be crudely summed up by saying that the people who come to ITU or ISO standardization
meet in San Diego, when they wear shorts and T-shirts).
ITU-T and ISO meetings are populated by corporate officials and government civil servants for whom
When the ARPANET was set up, DoD created an informal committee to oversee it. In 1983, the committee was
renamed the IAB (Internet Activities Board) and was given a slighter broader mission, namely, to keep the
researchers involved with the ARPANET and the Internet pointed more-or-less in the same direction, an activity
not unlike herding cats. The meaning of the acronym ''IAB'' was later changed to Internet Architecture Board.
Each of the approximately ten members of the IAB headed a task force on some issue of importance. The IAB
met several times a year to discuss results and to give feedback to the DoD and NSF, which were providing
most of the funding at this time. When a standard was needed (e.g., a new routing algorithm), the IAB members
offered TCP/IP products and did not want to change them just because ten researchers had thought of a better
idea. In the summer of 1989, the IAB was reorganized again. The researchers were moved to the IRTF (Internet
Research Task Force), which was made subsidiary to IAB, along with the IETF (Internet Engineering Task
Force). The IAB was repopulated with people representing a broader range of organizations than just the
interested in the Internet. The Internet Society is thus in a sense comparable to ACM or IEEE. It is governed by
elected trustees who appoint the IAB members.
The idea of this split was to have the IRTF concentrate on long-term research while the IETF dealt with shortterm engineering issues. The IETF was divided up into working groups, each with a specific problem to solve.
working group topics include new applications, user information, OSI integration, routing and addressing,
Standard, the basic idea must be completely explained in an RFC and have sufficient interest in the community
rigorously tested by at least two independent sites for at least 4 months. If the IAB is convinced that the idea is
sound and the software works, it can declare the RFC to be an Internet Standard. Some Internet Standards have
become DoD standards (MIL-STD), making them mandatory for DoD suppliers. David Clark once made a nowfamous remark about Internet standardization consisting of ''rough consensus and running code.''
than 1 capitalized (KB, MB, etc.). One exception (for historical reasons) is kbps for kilobits/sec. Thus, a 1-Mbps
memories are always a power of two. Thus, a 1-KB memory contains 1024 bytes, not 1000 bytes. Similarly, a 1MB memory contains 220 (1,048,576) bytes, a 1-GB memory contains 230 (1,073,741,824) bytes, and a 1-TB
second and a 10-Mbps LAN runs at 10,000,000 bits/sec because these speeds are not powers of two.
this book, we will use the symbols KB, MB, and GB for 210, 220, and 230 bytes, respectively, and the symbols
discussed, including HDLC (used in low- and medium-speed networks) and PPP (used in the Internet).
UDP and TCP, are covered in detail, as are their performance issues. Issues concerning wireless networks are
Chapter 7 deals with the application layer, its protocols and applications. The first topic is DNS, which is the
resources. Individuals often access the Internet by calling up an ISP using a modem, although increasingly many
Protocol stacks are typically based either on the OSI model or on the TCP/IP model. Both have network,
Well-known networks include the Internet, ATM networks, Ethernet, and the IEEE 802.11 wireless LAN. The
Internet evolved from the ARPANET, to which other networks were added to form an internetwork. The present
it is the use of the TCP/IP protocol stack throughout. ATM is widely used inside the telephone system for longhaul data traffic. Ethernet is the most popular LAN and is present in most large companies and universities.
and software. Organizations such as the ITU-T, ISO, IEEE, and IAB manage different parts of the
2. An alternative to a LAN is simply a big timesharing system with terminals for all users. Give two
advantages of a client-server system using a LAN.
5. A factor in the delay of a store-and-forward packet-switching system is how long it takes to store and
6. A client-server system uses a satellite network, with the satellite at a height of 40,000 km. What is the
A collection of five routers is to be connected in a point-to-point subnet. Between each pair of routers,
A group of 2n - 1 routers are interconnected in a centralized binary tree, with a router at each tree node.
A disadvantage of a broadcast subnet is the capacity wasted when multiple hosts attempt to access the
in the sense of the OSI model?
Which of the OSI layers handles each of the following:
A system has an n-layer protocol hierarchy. Applications generate messages of length M bytes. At each
List two ways in which the OSI reference model and the TCP/IP reference model are the same. Now list
What is the main difference between TCP and UDP?
Why does ATM use small, fixed-length cells?
32. When a system has a permanent part and a removable part (such as a CD-ROM drive and the CDROM), it is important that the system be standardized, so that different companies can make both the
36. Go to IETF's Web site, www.ietf.org, to see what they are doing. Pick a project you like and write a halfpage report on the problem and the proposed solution.
37. Standardization is very important in the network world. ITU and ISO are the main official standardization
the Internet. A considerable amount of information about the Internet topology is available on line. Use a
periodic function, g(t) with period T can be constructed as the sum of a (possibly infinite) number of sines and
where f = 1/T is the fundamental frequency, an and bn are the sine and cosine amplitudes of the nth harmonics
function can be reconstructed; that is, if the period, T, is known and the amplitudes are given, the original
A data signal that has a finite duration (which all of them do) can be handled by just imagining that it repeats the
entire pattern over and over forever (i.e., the interval from T to 2T is the same as from 0 to T, etc.).
then integrating from 0 to T. Since
Eq. (2-1) by cos(2pkft) and integrating between 0 and T, we can derive bn. By just integrating both sides of the
the ASCII character ''b'' encoded in an 8-bit byte. The bit pattern that is to be transmitted is 01100010. The lefthand part of Fig. 2-1(a) shows the voltage output by the transmitting computer. The Fourier analysis of this
Figure 2-1. (a) A binary signal and its root-mean-square Fourier amplitudes. (b)-(e) Successive
As early as 1924, an AT&T engineer, Henry Nyquist, realized that even a perfect channel has a finite
Nyquist proved that if an arbitrary signal has been run through a low-pass filter of bandwidth H, the filtered signal
have already been filtered out. If the signal consists of V discrete levels, Nyquist's theorem states:
signal-to-noise ratio. If we denote the signal power by S and the noise power by N, the signal-to-noise ratio is
S/N. Usually, the ratio itself is not quoted; instead, the quantity 10 log10 S/N is given. These units are called
decibels (dB). An S/N ratio of 10 is 10 dB, a ratio of 100 is 20 dB, a ratio of 1000 is 30 dB, and so on. The
Shannon's major result is that the maximum data rate of a noisy channel whose bandwidth is H Hz, and whose
signal-to-noise ratio is S/N, is given by
A simple calculation will make this point clear. An industry standard Ultrium tape can hold 200 gigabytes. A box
petabits). A box of tapes can be delivered anywhere in the United States in 24 hours by Federal Express and
If we now look at cost, we get a similar picture. The cost of an Ultrium tape is around $40 when bought in bulk. A
$1000 for shipping (probably much less), and we have a cost of roughly $5000 to ship 200 TB. This amounts to
connection is needed. One of the oldest and still most common transmission media is twisted pair. A twisted pair
form, just like a DNA molecule. Twisting is done because two parallel wires constitute a fine antenna. When the
All of these wiring types are often referred to as UTP (Unshielded Twisted Pair), to contrast them with the bulky,
expensive, shielded twisted pair cables IBM introduced in the early 1980s, but which have not proven popular
outside of IBM installations. Twisted pair cabling is illustrated in Fig. 2-3.
Figure 2-3. (a) Category 3 UTP. (b) Category 5 UTP.
A coaxial cable consists of a stiff copper wire as the core, surrounded by an insulating material. The insulator is
protective plastic sheath. A cutaway view of a coaxial cable is shown in Fig. 2-4.
Figure 2-4. A coaxial cable.
original (1981) IBM PC ran at a clock speed of 4.77 MHz. Twenty years later, PCs could run at 2 GHz, a gain of
In the same period, wide area data communication went from 56 kbps (the ARPANET) to 1 Gbps (modern
kilometers without appreciable shape distortion. These pulses are called solitons. A considerable amount of
Third, two pieces of fiber can be fused (melted) to form a solid connection. A fusion splice is almost as good as a
Figure 2-8. A comparison of semiconductor diodes and LEDs as light sources.
stream through to the next link and also serves as a T junction to allow the computer to send and accept
Figure 2-9. A fiber optic ring with active repeaters.
Two types of interfaces are used. A passive interface consists of two taps fused onto the main fiber. One tap has
an LED or laser diode at the end of it (for transmitting), and the other has a photodiode (for receiving). The tap
itself is completely passive and is thus extremely reliable because a broken LED or photodiode does not break
A ring topology is not the only way to build a LAN using fiber optics. It is also possible to have hardware
Figure 2-10. A passive star connection in a fiber optics network.
usually called the speed of light, c, is approximately 3 x 108 m/sec, or about 1 foot (30 cm) per nanosecond. (A
the waves. Ultraviolet light, X-rays, and gamma rays would be even better, due to their higher frequencies, but
things. The bands listed at the bottom of Fig. 2-11 are the official ITU names and are based on the wavelengths,
so the LF band goes from 1 km to 10 km (approximately 30 kHz to 300 kHz). The terms LF, MF, and HF refer to
frequency (IHF, AHF, and PHF) would sound nice.
the piano. For their invention, she and her friend, the musical composer George Antheil, received U.S. patent
2,292,387. However, they were unable to convince the U.S. Navy that their invention had any practical use and
In the VLF, LF, and MF bands, radio waves follow the ground, as illustrated in Fig. 2-12(a). These waves can be
detected for perhaps 1000 km at the lower frequencies, less at the higher ones. AM radio broadcasting uses the
MF band, which is why the ground waves from Boston AM radio stations cannot be heard easily in New York.
Figure 2-12. (a) In the VLF, LF, and MF bands, radio waves follow the curvature of the earth. (b) In the HF
In the HF and VHF bands, the ground waves tend to be absorbed by the earth. However, the waves that reach
communicate in the HF and VHF bands.
all the energy into a small beam by means of a parabolic antenna (like the familiar satellite TV dish) gives a
In fact, MCI, one of AT&T's first competitors after it was deregulated, built its entire system with microwave
(MCI stood for Microwave Communications, Inc.). MCI has since gone over to fiber and merged with WorldCom.
communicate directly. This is how MCI managed to get started as a new long-distance telephone company so
allocate spectrum for AM and FM radio, television, and mobile phones, as well as for telephone companies,
ITU-R (WARC) tries to coordinate this allocation so devices that work in multiple countries can be manufactured.
However, countries are not bound by ITU-R's recommendations, and the FCC (Federal Communication
Commission), which does the allocation for the United States, has occasionally rejected ITU-R's
A completely different approach to allocating frequencies is to not allocate them at all. Just let everyone transmit
Accordingly, most governments have set aside some frequency bands, called the ISM (Industrial, Scientific,
mice, and numerous other wireless household devices use the ISM bands. To minimize interference between
these uncoordinated devices, the FCC mandates that all devices in the ISM bands use spread spectrum
The location of the ISM bands varies somewhat from country to country. In the United States, for example,
devices whose power is under 1 watt can use the bands shown in Fig. 2-13 without requiring a FCC license. The
Figure 2-13. The ISM bands in the United States.
licensed outside the ISM bands. Infrared communication has a limited use on the desktop, for example,
North Church just prior to his famous ride. A more modern application is to connect the LANs in two buildings via
cost. It is also relatively easy to install and, unlike microwave, does not require an FCC license.
A disadvantage is that laser beams cannot penetrate rain or thick fog, but they normally work well on sunny
presentations. Since the local PTT was unwilling to install a large number of telephone lines for just 3 days, the
Figure 2-14. Convection currents can interfere with laser communication systems. A bidirectional
weather balloons. Unfortunately, the received signals were too weak to be of any practical use. Then the U.S.
A satellite's period is important, but it is not the only issue in determining where to place it. Another issue is the
In 1945, the science fiction writer Arthur C. Clarke calculated that a satellite at an altitude of 35,800 km in a
only aspect of outer space that has become highly profitable. These high-flying satellites are often called GEO
To prevent total chaos in the sky, orbit slot allocation is done by ITU. This process is highly political, with
interfere with existing microwave users. Consequently, ITU has allocated certain frequency bands to satellite
users. The main ones are listed in Fig. 2-16. The C band was the first to be designated for commercial satellite
common carriers for terrestrial microwave links. The L and S bands were added by international agreement in
The next highest band available to commercial telecommunication carriers is the Ku (K under) band. This band
between stations. Bandwidth has also been allocated in the Ka (K above) band for commercial satellite traffic,
A modern satellite has around 40 transponders, each with an 80-MHz bandwidth. Usually, each transponder
beams are elliptically shaped, and can be as small as a few hundred km in diameter. A communication satellite
A new development in the communication satellite world is the development of low-cost microstations,
or smaller antennas (versus 10 m for a standard GEO antenna) and can put out about 1 watt of power. The
In many VSAT systems, the microstations do not have enough power to communicate directly with one another
beyond the budgets of most Third World governments, but installing 1-meter VSAT dishes powered by solar
the long round-trip distance introduces a substantial delay for GEO satellites. Depending on the distance
transit time is between 250 and 300 msec. A typical value is 270 msec (540 msec for a VSAT system with a
traversed. A call across the ocean costs no more to service than a call across the street. Satellites also have
At much lower altitudes, between the two Van Allen belts, we find the MEO (Medium-Earth Orbit) satellites. As
not used for telecommunications, so we will not examine them further here. The 24 GPS (Global Positioning
System) satellites orbiting at about 18,000 km are examples of MEO satellites.
Moving down in altitude, we come to the LEO (Low-Earth Orbit) satellites. Due to their rapid motion, large
zip into and out of view so quickly. In 1990, Motorola broke new ground by filing an application with the FCC
An alternative design to Iridium is Globalstar. It is based on 48 LEO satellites but uses a different switching
using a small, fixed, VSAT-type antenna, completely bypassing the telephone system. To telephone companies,
A comparison between satellite communication and terrestrial communication is instructive. As recently as 20
radically. Telephone companies began replacing their long-haul networks with fiber and introduced highbandwidth services like ADSL (Asymmetric Digital Subscriber Line). They also stopped their long-time practice of
A second niche is for mobile communication. Many people nowadays want to communicate while jogging,
A third niche is for situations in which broadcasting is essential. A message sent by satellite can be received by
A fourth niche is for communication in places with hostile terrain or a poorly developed terrestrial infrastructure.
A fifth niche market for satellites is to cover areas where obtaining the right of way for laying fiber is difficult or
These facilities, especially the PSTN (Public Switched Telephone Network), were usually designed many years
of a typical computer-computer connection via a local cable and via a dial-up telephone line. A cable running
leisurely through the grass and a rocket to the moon. If the dial-up line is replaced by an ADSL connection, there
Prior to the 1984 breakup of AT&T, the telephone system was organized as a highly-redundant, multilevel
At one time, 80 percent of AT&T's capital value was the copper in the local loops. AT&T was then, in effect, the
been known, some corporate raider might have bought AT&T, terminated all telephone service in the United
relatively close by), the connection may be established within the toll office. A telephone network consisting only
Figure 2-21. A typical circuit route for a medium-distance call.
A variety of transmission media are used for telecommunication. Local loops consist of category 3 twisted pairs
United States. In the 1970s, the U.S. Federal Government came to believe that this was an illegal monopoly and
sued to break it up. The government won, and on January 1, 1984, AT&T was broken up into AT&T Long Lines,
The exact details of the divestiture were described in the so-called MFJ (Modified Final Judgment, an oxymoron
Transport Areas). Very roughly, a LATA is about as big as the area covered by one area code. Within a LATA,
there was one LEC (Local Exchange Carrier) that had a monopoly on traditional telephone service within its
All inter-LATA traffic was handled by a different kind of company, an IXC (IntereXchange Carrier). Originally,
AT&T Long Lines was the only serious IXC, but now WorldCom and Sprint are well-established competitors in
the IXC business. One of the concerns at the breakup was to ensure that all the IXCs would be treated equally in
LATAs 2 and 3 also have a small hierarchy with tandem offices (intra-LATA toll offices).
Figure 2-22. The relationship of LATAs, LECs, and IXCs. All the circles are LEC switching offices. Each
hexagon belongs to the IXC whose number is in it.
Any IXC that wishes to handle calls originating in a LATA can build a switching office called a POP (Point of
Presence) there. The LEC is required to connect each IXC to every end office, either directly, as in LATAs 1 and
3, or indirectly, as in LATA 2. Furthermore, the terms of the connection, both technical and financial, must be
identical for all IXCs. In this way, a subscriber in, say, LATA 1, can choose which IXC to use for calling
subscribers in LATA 3.
As part of the MFJ, the IXCs were forbidden to offer local telephone service and the LECs were forbidden to
offer inter-LATA telephone service, although both were free to enter any other business, such as operating fried
longer tenable and drafted a bill to allow cable TV companies, local telephone companies, long-distance carriers,
customers a single integrated package containing cable TV, telephone, and information services and that
thus increasing competition. As a result, the U.S. telecommunications landscape is currently undergoing a
how this kind of experiment works out in the U.S. If it works well, they do the same thing; if it works badly, they
2.5.3 The Local Loop: Modems, ADSL, and Wireless
contain switching equipment that switches calls. An end office has up to 10,000 local loops (in the U.S. and other
the local loop at the destination. This arrangement is shown in Fig. 2-23 for ISP 1 (Internet Service Provider),
which has a bank of modems, each connected to a different local loop. This ISP can handle as many
and delay distortion. These effects make baseband (DC) signaling unsuitable except at slow speeds and over
To get around the problems associated with DC signaling, especially on telephone lines, AC signaling is used. A
spaced intervals. A better scheme is to use shifts of 45, 135, 225, or 315 degrees to transmit 2 bits of information
boundary. A device that accepts a serial stream of bits as input and produces a carrier modulated by one (or
Figure 2-24. (a) A binary signal. (b) Amplitude modulation. (c) Frequency modulation. (d) Phase
again here the bit rate is twice the baud rate. The latter technique is widely used and called QPSK (Quadrature
and symbol rate are thus the same. The modulation technique (e.g., QPSK) determines the number of
combinations and can be used to transmit 2 bits per symbol. It is QPSK.
Figure 2-25. (a) QPSK. (b) QAM-16. (c) QAM-64.
QAM-16 (Quadrature Amplitude Modulation). Sometimes the term 16-QAM is used instead. QAM-16 can be
combinations, so 6 bits can be transmitted per symbol. It is called QAM-64. Higher-order QAMs also are used.
speeds modems do error correction by adding extra bits to each sample. The schemes are known as TCM
(Trellis Coded Modulation). Thus, for example, the V.32 modem standard uses 32 constellation points to transmit
Figure 2-26. (a) V.32 for 9600 bps. (b) V32 bis for 14,400 bps.
The next step above 9600 bps is 14,400 bps. It is called V.32 bis. This speed is achieved by transmitting 6 data
bits and 1 parity bit per sample at 2400 baud. Its constellation pattern has 128 points when QAM-128 is used
maps. QAM-256 is not used in any standard telephone modems, but it is used on cable networks, as we shall
The next telephone modem after V.32 bis is V.34, which runs at 28,800 bps at 2400 baud with 12 data
bits/symbol. The final modem in this series is V.34 bis which uses 14 data bits/symbol at 2400 baud to achieve
directions). A connection that allows traffic in both directions simultaneously is called full duplex. A two-lane road
is full duplex. A connection that allows traffic either way, but only one way at a time is called half duplex. A single
railroad track is half duplex. A connection that allows traffic only one way is called simplex. A one-way street is
the computer on the left and terminating at ISP 1 goes over two local loops as an analog signal, once at the
ISP 2 does precisely that. It has a pure digital feed from the nearest end office. The digital signal used on the
trunks is fed directly to ISP 2, eliminating the codecs, modems, and analog transmission on its end. Thus, when
8000. The number of bits per sample in the U.S. is 8, one of which is used for control purposes, allowing 56,000
This modem standard is called V.90. It provides for a 33.6-kbps upstream channel (user to ISP), but a 56 kbps
downstream channel (ISP to user) because there is usually more data transport from the ISP to the user than the
The next step beyond V.90 is V.92. These modems are capable of 48 kbps on the upstream channel if the line
cable TV industry was offering speeds up to 10 Mbps on shared cables, and satellite companies were planning
of these services, ADSL (Asymmetric DSL). Since ADSL is still being developed and not all the standards are
more information about ADSL, see (Summers, 1999; and Vetter et al., 2000).
general quality. A plot of the potential bandwidth as a function of distance is given in Fig. 2-27. This figure
Figure 2-27. Bandwidth versus distance over category 3 UTP for DSL.
The initial ADSL offering was from AT&T and worked by dividing the spectrum available on the local loop, which
is about 1.1 MHz, into three frequency bands: POTS (Plain Old Telephone Service) upstream (user to end office)
The alternative approach, called DMT (Discrete MultiTone), is illustrated in Fig. 2-28. In effect, what it does is
Channel 0 is used for POTS. Channels 1–5 are not used, to keep the voice signal and data signals from
Figure 2-28. Operation of ADSL using discrete multitone modulation.
many channels are used for upstream and how many for downstream. A 50–50 mix of upstream and
downstream channel since most users download more data than they upload. This choice gives rise to the ''A'' in
ADSL. A common split is 32 channels for upstream and the rest downstream. It is also possible to have a few of
The ADSL standard (ANSI T1.413 and ITU G.992.1) allows speeds of as much as 8 Mbps downstream and 1
Within each channel, a modulation scheme similar to V.34 is used, although the sampling rate is 4000 baud
continuously as needed, so different channels may have different data rates. The actual data are sent with QAM
A typical ADSL arrangement is shown in Fig. 2-29. In this scheme, a telephone company technician must install
a NID (Network Interface Device) on the customer's premises. This small plastic box marks the end of the
telephone company's property and the start of the customer's property. Close to the NID (or sometimes
combined with it) is a splitter, an analog filter that separates the 0-4000 Hz band used by POTS from the data.
The POTS signal is routed to the existing telephone or fax machine, and the data signal is routed to an ADSL
modem. The ADSL modem is actually a digital signal processor that has been set up to act as 250 QAM
modems operating in parallel at different frequencies. Since most current ADSL modems are external, the
computer and operating a very short two-node Ethernet containing only the computer and ADSL modem.
Occasionally the USB port is used instead of Ethernet. In the future, internal ADSL modem cards will no doubt
Figure 2-29. A typical ADSL equipment configuration.
device called a DSLAM (Digital Subscriber Line Access Multiplexer), which contains the same kind of digital
signal processor as the ADSL modem. Once the digital signal has been recovered into a bit stream, packets are
formed and sent off to the ISP.
This complete separation between the voice system and ADSL makes it relatively easy for a telephone company
to deploy ADSL. All that is needed is buying a DSLAM and splitter and attaching the ADSL subscribers to the
splitter. Other high-bandwidth services (e.g., ISDN) require much greater changes to the existing switching
One disadvantage of the design of Fig. 2-29 is the presence of the NID and splitter on the customer premises.
been standardized. It is informally called G.lite but the ITU standard number is G.992.2. It is the same as Fig. 229 but without the splitter. The existing telephone line is used as is. The only difference is that a microfilter has to
be inserted into each telephone jack between the telephone or ADSL modem and the wire. The microfilter for the
telephone is a low-pass filter eliminating frequencies above 3400 Hz; the microfilter for the ADSL modem is a
so G.lite can be used only up to 1.5 Mbps (versus 8 Mbps for ADSL with a splitter). G.lite still requires a splitter
ADSL is just a physical layer standard. What runs on top of it depends on the carrier. Often the choice is ATM
due to ATM's ability to manage quality of service and the fact that many telephone companies run ATM in the
Since 1996 in the U.S. and a bit later in other countries, companies that wish to compete with the entrenched
local telephone company (the former monopolist), called an ILEC (Incumbent LEC), are free to do so. The most
likely candidates are long-distance telephone companies (IXCs). Any IXC wishing to get into the local phone
customers, typically by advertising better service or lower prices than those of the ILEC.
company, called a CLEC (Competitive LEC) going to connect customer telephones and computers to its shiny
CLECs have discovered a cheaper alternative to the traditional twisted-pair local loop: the WLL (Wireless Local
often at speeds at least equal to ADSL. Second, the new customer probably does not mind having a CLEC
technician install a large directional antenna on his roof pointed at the CLEC's end office. Third, the user does
the FCC allocated two television channels (at 6 MHz each) for instructional television at 2.1 GHz. In subsequent
Instructional television never took off and in 1998, the FCC took the frequencies back and allocated them to twoway radio. They were immediately seized upon for wireless local loops. At these frequencies, the microwaves
The 198 MHz of new spectrum was immediately put to use for wireless local loops as a service called MMDS
(Multichannel Multipoint Distribution Service). MMDS can be regarded as a MAN (Metropolitan Area Network),
as can its cousin LMDS (discussed below).
The low bandwidth of MMDS led to interest in millimeter waves as an alternative. At frequencies of 28–31 GHz in
the U.S. and 40 GHz in Europe, no frequencies were allocated because it is difficult to build silicon integrated
opening up millimeter bands for radio communication. The FCC responded to the demand by allocating 1.3 GHz
to a new wireless local loop service called LMDS (Local Multipoint Distribution Service). This allocation is the
single largest chunk of bandwidth ever allocated by the FCC for any one use. A similar chunk is being allocated
The operation of LMDS is shown in Fig. 2-30. Here a tower is shown with multiple antennas on it, each pointing
Figure 2-30. Architecture of an LMDS system.
Like ADSL, LMDS uses an asymmetric bandwidth allocation favoring the downstream channel. With current
that sector. If each active user downloads three 5-KB pages per minute, the user is occupying an average of
offer users data rates comparable to cable TV and at a lower price.
LMDS has a few problems, however. For one thing, millimeter waves propagate in straight lines, so there must
turning up the power when it is raining. Nevertheless, LMDS service is more likely to be rolled out first in dry
provide this standardization, IEEE set up a committee called 802.16 to draw up a standard for LMDS. The
802.16 standard was published in April 2002. IEEE calls 802.16 a wireless MAN.
IEEE 802.16 was designed for digital telephony, Internet access, connection of two remote LANs, television and
physical trunk. These multiplexing schemes can be divided into two basic categories: FDM (Frequency Division
Multiplexing) and TDM (Time Division Multiplexing). In FDM, the frequency spectrum is divided into frequency
bands, with each user having exclusive possession of some band. In TDM, the users take turns (in a round-robin
AM radio broadcasting provides illustrations of both kinds of multiplexing. The allocated spectrum is about 1
Below we will examine frequency division multiplexing. After that we will see how FDM can be applied to fiber
optics (wavelength division multiplexing). Then we will turn to TDM, and end with an advanced TDM system
used for fiber optics (SONET).
Figure 2-31 shows how three voice-grade telephone channels are multiplexed using FDM. Filters limit the usable
The FDM schemes used around the world are to some degree standardized. A widespread standard is twelve
next unit is the mastergroup, which is five supergroups (CCITT standard) or ten supergroups (Bell system).
For fiber optic channels, a variation of frequency division multiplexing is used. It is called WDM (Wavelength
Division Multiplexing). The basic principle of WDM on fibers is depicted in Fig. 2-32. Here four fibers come
multiplexed together on the long-haul fiber. The only difference with electrical FDM is that an optical system
WDM technology has been progressing at a rate that puts computer technology to shame. WDM was invented
total of 960 Gbps. This is enough bandwidth to transmit 30 full-length movies per second (in MPEG-2). Systems
wavelengths are spaced close together, for example, 0.1 nm, the system is often referred to as DWDM (Dense
WDM).
It should be noted that the reason WDM is popular is that the energy on a single fiber is typically only a few
from input fiber 2 go to output fiber 1, etc. However, it is also possible to build WDM systems that are switched.
information about WDM and its application to Internet packet switching, see (Elmirghani and Mouftah, 2000;
WDM technology is wonderful, but there is still a lot of copper wire in the telephone system, so let us turn back to
it for a while. Although FDM is still used over copper wires or microwave channels, it requires analog circuitry
and is not amenable to being done by a computer. In contrast, TDM can be handled entirely by digital
is called PCM (Pulse Code Modulation). PCM forms the heart of the modern telephone system. As a
When digital transmission began emerging as a feasible technology, CCITT was unable to reach agreement on
an international standard for PCM. Consequently, a variety of incompatible schemes are now in use in different
A frame consists of 24 x 8 = 192 bits plus one extra bit for framing, yielding 193 bits every 125 µsec. This gives a
When CCITT finally did reach agreement, they felt that 8000 bps of signaling information was far too much, so its
In the other variation, channel-associated signaling, each channel has its own private signaling subchannel. A
purposes, so five out of six samples are 8 bits wide, and the other one is only 7 bits wide. CCITT also
recommended a PCM carrier at 2.048 Mbps called E1. This carrier has 32 8-bit data samples packed into the
A variation of this compaction method requires each sampled value to differ from its predecessor by either +1 or
An improvement to differential PCM is to extrapolate the previous few values to predict the next value and then
equally little agreement on how it is to be multiplexed into higher-bandwidth carriers. The U.S. scheme of
stepping up by 4, 7, and 6 did not strike everyone else as the way to go, so the CCITT standard calls for
between the U.S. and CCITT standards. The CCITT hierarchy for 32, 128, 512, 2048, and 8192 channels runs at
SONET/SDH
In the early days of fiber optics, every telephone company had its own proprietary optical TDM system. After
AT&T was broken up in 1984, local telephone companies had to connect to multiple long-distance carriers, all
with different optical TDM systems, so the need for standardization became obvious. In 1985, Bellcore, the
RBOCs research arm, began working on a standard, called SONET (Synchronous Optical NETwork). Later,
CCITT joined the effort, which resulted in a SONET standard and a set of parallel CCITT recommendations
(G.707, G.708, and G.709) in 1989. The CCITT recommendations are called SDH (Synchronous Digital
Hierarchy) but differ from SONET only in minor ways. Virtually all the long-distance telephone traffic in the United
States, and much of it elsewhere, now uses trunks running SONET in the physical layer. For additional
information about SONET, see (Bellamy, 2000; Goralski, 2000; and Shepard, 2001).
The SONET design had four major goals. First and foremost, SONET had to make it possible for different
Second, some means was needed to unify the U.S., European, and Japanese digital systems, all of which were
based on 64-kbps PCM channels, but all of which combined them in different (and incompatible) ways.
Third, SONET had to provide a way to multiplex multiple digital channels. At the time SONET was devised, the
but not used much, and nothing was even defined above T4 speed. Part of SONET's mission was to continue
the hierarchy to gigabits/sec and beyond. A standard way to multiplex slower channels into one SONET channel
Fourth, SONET had to provide support for operations, administration, and maintenance (OAM). Previous
An early decision was to make SONET a traditional TDM system, with the entire bandwidth of the fiber devoted
to one channel containing time slots for the various subchannels. As such, SONET is a synchronous system. It is
controlled by a master clock with an accuracy of about 1 part in 109. Bits on a SONET line are sent out at
basis of ATM, the fact that it permitted irregular cell arrivals got it labeled as Asynchronous Transfer Mode to
contrast it to the synchronous operation of SONET. With SONET, the sender and receiver are tied to a common
clock; with ATM they are not.
The basic SONET frame is a block of 810 bytes put out every 125 µsec. Since SONET is synchronous, frames
sampling rate of the PCM channels used in all digital telephony systems.
The 810-byte SONET frames are best described as a rectangle of bytes, 90 columns wide by 9 rows high. Thus,
SONET channel, called STS-1 (Synchronous Transport Signal-1). All SONET trunks are a multiple of STS-1.
Figure 2-36. Two back-to-back SONET frames.
A SONET transmitter sends back-to-back 810-byte frames, without gaps between them, even when there are no
the SPE (Synchronous Payload Envelope), do not always begin in row 1, column 4. The SPE can begin
anywhere within the frame. A pointer to the first byte is contained in the first row of the line overhead. The first
column of the SPE is the path overhead (i.e., header for the end-to-end path sublayer protocol).
The ability to allow the SPE to begin anywhere within the SONET frame and even to span two frames, as shown
SONET frame is being constructed, it can be inserted into the current frame instead of being held until the start
The SONET multiplexing hierarchy is shown in Fig. 2-37. Rates from STS-1 to STS-192 have been defined. The
optical carrier corresponding to STS-n is called OC-n but is bit for bit the same except for a certain bit reordering
needed for synchronization. The SDH names are different, and they start at OC-3 because CCITT-based
systems do not have a rate near 51.84 Mbps. The OC-9 carrier is present because it closely matches the speed
of a major high-speed trunk used in Japan. OC-18 and OC-36 are used in Japan. The gross data rate includes
all the overhead. The SPE data rate excludes the line and section overhead. The user data rate excludes all
Figure 2-37. SONET and SDH multiplex rates.
As an aside, when a carrier, such as OC-3, is not multiplexed, but carries the data from only a single source, the
letter c (for concatenated) is appended to the designation, so OC-3 indicates a 155.52-Mbps carrier consisting of
three separate OC-1 carriers, but OC-3c indicates a data stream from a single source at 155.52 Mbps. The three
OC-1 streams within an OC-3c stream are interleaved by column, first column 1 from stream 1, then column 1
switching equipment. It was invented by a 19th century Missouri undertaker named Almon B. Strowger. Shortly
time. Each block is received in its entirety, inspected for errors, and then retransmitted. A network using this
traffic. A further advantage of packet switching over message switching is shown in Fig. 2-39(b) and (c): the first
Packet switching uses store-and-forward transmission. A packet is accumulated in a router's memory, then sent
carrier determines the basic parameters. A rough analogy is a road versus a railroad. In the former, the user
A final difference between circuit and packet switching is the charging algorithm. With circuit switching, charging
Figure 2-40. A comparison of circuit-switched and packet-switched networks.
political and tiny marketing decisions can have a huge impact. The first mobile system was devised in the U.S.
by AT&T and mandated for the whole country by the FCC. As a result, the entire U.S. had a single (analog)
standardized on a single system (GSM), so any European mobile phone will work anywhere in Europe. By then,
the U.S. had decided that government should not be in the standardization business, so it left digital to the
phones. As a consequence, the U.S. now has two major incompatible digital mobile phone systems in operation
Despite an initial lead by the U.S., mobile phone ownership and usage in Europe is now far greater than in the
U.S. Having a single system for all of Europe is part of the reason, but there is more. A second area where the
U.S. and Europe differed is in the humble matter of phone numbers. In the U.S. mobile phones are mixed in with
A third issue that has had a large impact on adoption is the widespread use of prepaid mobile phones in Europe
PIN code) when the balance drops to zero. As a consequence, practically every teenager and many small
1950s. CB-radio, taxis, and police cars on television programs often use this technology.
In the 1960s, IMTS (Improved Mobile Telephone System) was installed. It, too, used a high-powered (200-watt)
IMTS supported 23 channels spread out from 150 MHz to 450 MHz. Due to the small number of channels, users
All that changed with AMPS (Advanced Mobile Phone System), invented by Bell Labs and first installed in the
United States in 1982. It was also used in England, where it was called TACS, and in Japan, where it was called
MCS-L1. Although no longer state of the art, we will look at it in some detail because many of its fundamental
properties have been directly inherited by its digital successor, D-AMPS, in order to achieve backward
sometimes called cell phones. In AMPS, the cells are typically 10 to 20 km across; in digital systems, the cells
transmission frequencies in nearby (but not adjacent) cells. Whereas an IMTS system 100 km across can have
one call on each frequency, an AMPS system might have 100 10-km cells in the same area and be able to have
out 0.6 watts; transmitters in cars are 3 watts, the maximum allowed by the FCC.
are connected to a single device called an MTSO (Mobile Telephone Switching Office) or MSC (Mobile
MTSO, and so on. The MTSOs are essentially end offices as in the telephone system, and are, in fact,
other, and the PSTN using a packet-switching network.
about 300 msec. Channel assignment is done by the MTSO, the nerve center of the system. The base stations
The AMPS system uses 832 full-duplex channels, each consisting of a pair of simplex channels. There are 832
Each of these simplex channels is 30 kHz wide. Thus, AMPS uses FDM to separate the channels.
Twenty-one of the channels are reserved for control, and these are wired into a PROM in each telephone. Since
Each mobile telephone in AMPS has a 32-bit serial number and a 10-digit telephone number in its PROM. The
in AMPS, this packet is sent in digital form, multiple times, and with an error-correcting code, even though the
When the base station hears the announcement, it tells the MTSO, which records the existence of its new
customer and also informs the customer's home MTSO of his current location. During normal operation, the
SEND button. The phone then transmits the number to be called and its own identity on the access channel. If a
collision occurs there, it tries again later. When the base station gets the request, it informs the MTSO. If the
caller is a customer of the MTSO's company (or one of its partners), the MTSO looks for an idle channel for the
mobile phone), a packet is sent to the callee's home MTSO to find out where it is. A packet is then sent to the
either. Four systems are in use now: D-AMPS, GSM, CDMA, and PDC. Below we will discuss the first three.
PDC is used only in Japan and is basically D-AMPS modified for backward compatibility with the first-generation
Japanese analog system. The name PCS (Personal Communications Services) is sometimes used in the
D-AMPS—The Digital Advanced Mobile Phone System
The second generation of the AMPS systems is D-AMPS and is fully digital. It is described in International
Standard IS-54 and its successor IS-136. D-AMPS was carefully designed to co-exist with AMPS so that both
first- and second-generation mobile phones could operate simultaneously in the same cell. In particular, DAMPS uses the same 30 kHz channels as AMPS and at the same frequencies so that one channel can be
analog and the adjacent ones can be digital. Depending on the mix of phones in a cell, the cell's MTSO
When D-AMPS was introduced as a service, a new frequency band was made available to handle the expected
channels were in the 1930–1990 MHz range, again in pairs, as in AMPS. In this band, the waves are 16 cm
long, so a standard ¼-wave antenna is only 4 cm long, leading to smaller phones. However, many D-AMPS
On a D-AMPS mobile phone, the voice signal picked up by the microphone is digitized and compressed using a
standard 56-kbps PCM encoding to 8 kbps or less. The compression is done by a circuit called a vocoder
that in D-AMPS, three users can share a single frequency pair using time division multiplexing. Each frequency
Figure 2-42. (a) A D-AMPS channel with three users. (b) A D-AMPS channel with six users.
compressed speech is just under 8 kbps, 1/7 of the standard PCM bandwidth.
three to six times as many D-AMPS users into the same spectrum as one AMPS user is a huge win and explains
much of the popularity of PCS. Of course, the quality of speech at 4 kbps is not comparable to what can be
achieved at 56 kbps, but few PCS operators advertise their hi-fi sound quality. It should also be clear that for
The control structure of D-AMPS is fairly complicated. Briefly summarized, groups of 16 frames form a
and short messages. But conceptually, it works like AMPS. When a mobile is switched on, it makes contact with
new mobile, the MTSO informs the user's home base where he is, so calls can be routed correctly.
One difference between AMPS and D-AMPS is how handoff is handled. In AMPS, the MTSO manages it
completely without help from the mobile devices. As can be seen from Fig. 2-42, in D-AMPS, 1/3 of the time a
the signal is waning, it complains to the MTSO, which can then break the connection, at which time the mobile
can try to tune to a stronger signal from another base station. As in AMPS, it still takes about 300 msec to do the
handoff. This technique is called MAHO (Mobile Assisted HandOff).
GSM—The Global System for Mobile Communications
D-AMPS is widely used in the U.S. and (in modified form) in Japan. Virtually everywhere else in the world, a
system called GSM (Global System for Mobile communications) is used, and it is even starting to be used in the
U.S. on a limited scale. To a first approximation, GSM is similar to D-AMPS. Both are cellular systems. In both
on a higher frequency (80 MHz higher for D-AMPS, 55 MHz higher for GSM). Also in both systems, a single
frequency pair is split by time-division multiplexing into time slots shared by multiple mobiles. However, the GSM
channels are much wider than the AMPS channels (200 kHz versus 30 kHz) and hold relatively few additional
users (8 versus 3), giving GSM a much higher data rate per user than D-AMPS.
Below we will briefly discuss some of the main properties of GSM. However, the printed GSM standard is over
5000 [sic] pages long. A large fraction of this material relates to engineering aspects of the system, especially
Each frequency band is 200 kHz wide, as shown in Fig. 2-43. A GSM system has 124 pairs of simplex channels.
each direction. Transmitting and receiving does not happen in the same time slot because the GSM radios
Figure 2-43. GSM uses 124 frequency channels, each of which uses an eight-slot TDM system.
The TDM slots shown in Fig. 2-43 are part of a complex framing hierarchy. Each TDM slot has a specific
structure, and groups of TDM slots form multiframes, also with a specific structure. A simplified version of this
hierarchy is shown in Fig. 2-44. Here we can see that each TDM slot consists of a 148-bit data frame that
Figure 2-44. A portion of the GSM framing structure.
A data frame is transmitted in 547 µsec, but a transmitter is only allowed to send one data frame every 4.615
divided among eight users. This gives 33.854 kbps gross, more than double D-AMPS' 324 bits 50 times per
second for 16.2 kbps. However, as with AMPS, the overhead eats up a large fraction of the bandwidth, ultimately
speech, giving substantially better voice quality than D-AMPS (at the cost of using correspondingly more
As can be seen from Fig. 2-44, eight data frames make up a TDM frame and 26 TDM frames make up a 120msec multiframe. Of the 26 TDM frames in a multiframe, slot 12 is used for control and slot 25 is reserved for
CDMA—Code Division Multiple Access
D-AMPS and GSM are fairly conventional systems. They use both FDM and TDM to divide the spectrum into
channels and the channels into time slots. However, there is a third kid on the block, CDMA (Code Division
Multiple Access), which works completely differently. When CDMA was first proposed, the industry gave it
by sailing in the wrong direction. However, through the persistence of a single company, Qualcomm, CDMA has
the basis for the third-generation mobile systems. It is also widely used in the U.S. in second-generation mobile
systems, competing head-on with D-AMPS. For example, Sprint PCS uses CDMA, whereas AT&T Wireless
uses D-AMPS. CDMA is described in International Standard IS-95 and is sometimes referred to by that name.
CDMA is completely different from AMPS, D-AMPS, and GSM. Instead of dividing the allowed frequency range
into a few hundred narrow channels, CDMA allows each station to transmit over the entire frequency spectrum
all the time. Multiple simultaneous transmissions are separated using coding theory. CDMA also relaxes the
conversing. TDM is comparable to all the people being in the middle of the room but taking turns speaking. FDM
same time as, but still independent of, the others. CDMA is comparable to everybody being in the middle of the
French, rejecting everything that is not French as noise. Thus, the key to CDMA is to be able to extract the
desired signal while rejecting everything else as random noise. A somewhat simplified description of CDMA
In CDMA, each bit time is subdivided into m short intervals called chips. Typically, there are 64 or 128 chips per
permitted. Thus, for m = 8, if station A is assigned the chip sequence 00011011, it sends a 1 bit by sending
bandwidth available is increased by a factor of m, making CDMA a form of spread spectrum communication
stations, with FDM each one would have 10 kHz and could send at 10 kbps (assuming 1 bit per Hz). With
CDMA, each station uses the full 1 MHz, so the chip rate is 1 megachip per second. With fewer than 100 chips
per bit, the effective bandwidth per station is higher for CDMA than FDM, and the channel allocation problem is
being +1. We will show chip sequences in parentheses, so a 1 bit for station A now becomes (-1 -1 -1 +1 +1 -1
transmissions. (d) Recovery of station C's signal.
Each station has its own unique chip sequence. Let us use the symbol S to indicate the m-chip vector for station
S, and for its negation. All chip sequences are pairwise orthogonal, by which we mean that the normalized
inner product of any two distinct chip sequences, S and T (written as S•T), is 0. It is known how to generate such
on. Note that if S•T = 0, then
In Fig. 2-45(c) we see six examples of one or more stations transmitting at the same time. In the first example, C
transmits a 1 bit, so we just get C's chip sequence. In the second example, both B and C transmit 1 bits, so we
In the third example, station A sends a 1 and station B sends a 0. The others are silent. In the fourth example, A
and C send a 1 bit while B sends a 0 bit. In the fifth example, all four stations send a 1 bit. Finally, in the last
example, A, B, and D send a 1 bit, while C sends a 0 bit. Note that each of the six sequences S 1 through S 6
recover. If the received chip sequence is S and the receiver is trying to listen to a station whose chip sequence is
C, it just computes the normalized inner product, S•C.
To see why this works, just imagine that two stations, A and C, both transmit a 1 bit at the same time that B
and add the results. Due to the orthogonality property, all the inner products except C•C would be 0. Adding
illustrated in Fig. 2-45(d). Suppose that the receiver is interested in extracting the bit sent by station C from each
of the six sums S1 through S6. It calculates the bit by summing the pairwise products of the received S and the C
In an ideal, noiseless CDMA system, the capacity (i.e., number of stations) can be made arbitrarily large, just as
there are not too many of them, however, the basic decoding algorithm still works fairly well. A large body of
receiver. CDMA is typically used for wireless systems with a fixed base station and many mobile stations at
are. A good heuristic here is for each mobile station to transmit to the base station at the inverse of the power
parallel. In real life, suffice it to say that this is easier said than done. CDMA also has many other complicating
factors that have been glossed over in this brief introduction. Nevertheless, CDMA is a clever scheme that is
30 kHz for D-AMPS and 200 kHz for GSM), but it supports many more users in that band than either of the other
systems. In practice, the bandwidth available to each user is at least as good as GSM and often much better.
Engineers who want to gain a very deep understanding of CDMA should read (Lee and Miller, 1998). An
What is the future of mobile telephony? Let us take a quick look. A number of factors are driving the industry.
converging. Many people are drooling over a lightweight, portable device that acts as a telephone, CD player,
DVD player, e-mail terminal, Web interface, gaming machine, word processor, and more, all with worldwide
Back in 1992, ITU tried to get a bit more specific about this dream and issued a blueprint for getting there called
IMT-2000, where IMT stood for International Mobile Telecommunications. The number 2000 stood for three
It did not make it on any of the three counts. Nothing was implemented by 2000. ITU recommended that all
is 2 Mbps for stationary indoor users (which will compete head-on with ADSL), 384 kbps for people walking, and
The basic services that the IMT-2000 network is supposed to provide to its users are:
Messaging (replacing e-mail, fax, SMS, chat, etc.).
ITU envisioned a single worldwide technology for IMT-2000, so that manufacturers could build a single device
that could be sold and used anywhere in the world (like CD players and computers and unlike mobile phones
encourage more people to use the services. Format wars, such as the Betamax versus VHS battle when
Several proposals were made, and after some winnowing, it came down to two main ones. The first one, WCDMA (Wideband CDMA), was proposed by Ericsson. This system uses direct sequence spread spectrum of
the type we described above. It runs in a 5 MHz bandwidth and has been designed to interwork with GSM
networks although it is not backward compatible with GSM. It does, however, have the property that a caller can
leave a W-CDMA cell and enter a GSM cell without losing the call. This system was pushed hard by the
European Union, which called it UMTS (Universal Mobile Telecommunications System).
design, basically an extension of IS-95 and backward compatible with it. It also uses a 5-MHz bandwidth, but it
has not been designed to interwork with GSM and cannot hand off calls to a GSM cell (or a D-AMPS cell, for that
matter). Other technical differences with W-CDMA include a different chip rate, different frame time, different
probably could. After all, the basic principle behind both systems is CDMA in a 5 MHz channel and nobody is
usual). Europe wanted a system that interworked with GSM; the U.S. wanted a system that was compatible with
one already widely deployed in the U.S. (IS-95). Each side also supported its local company (Ericsson is based
over their respective CDMA patents.
system is EDGE (Enhanced Data rates for GSM Evolution), which is just GSM with more bits per baud. The
trouble is, more bits per baud also means more errors per baud, so EDGE has nine different schemes for
Another 2.5G scheme is GPRS (General Packet Radio Service), which is an overlay packet network on top of DAMPS or GSM. It allows mobile stations to send and receive IP packets in a cell running a voice system. When
GPRS is in operation, some time slots on some frequencies are reserved for packet traffic. The number and
an IP packet, a mobile station requests one or more time slots by sending a request to the base station. If the
connection. Since GPRS is just an overlay over the existing voice system, it is at best a stop-gap measure until
wired networks and especially IP, adaptive resource and spectrum management, software radios, and high
Then on the other hand, so many 802.11 wireless LAN access points are being set up all over the place, that
high-bandwidth fiber, similar to what was happening in the telephone system. A system with fiber for the longhaul runs and coaxial cable to the houses is called an HFC (Hybrid Fiber Coax) system. The electro-optical
modern HFC system is shown in Fig. 2-47(a).
However, there is another difference between the HFC system of Fig. 2-47(a) and the telephone system of Fig.
telephone system does not have this particular property: downloading a large file over an ADSL line does not
Throwing off all the TV channels and using the cable infrastructure strictly for Internet access would probably
Cable television channels in North America normally occupy the 54–550 MHz region (except for FM radio from
MHz and the channels are 6–8 MHz wide for the higher resolution required by PAL and SECAM but otherwise
Figure 2-48. Frequency allocation in a typical cable TV system used for Internet access.
asymmetric DSL service, even though they have no technical reason for doing so.
modulate it with QAM-64 or, if the cable quality is exceptionally good, QAM-256. With a 6 MHz channel and
QAM-64, we get about 36 Mbps. When the overhead is subtracted, the net payload is about 27 Mbps. With
QAM-256, the net payload is about 39 Mbps. The European values are 1/3 larger.
For upstream, even QAM-64 does not work well. There is too much noise from terrestrial microwaves, CB
radios, and other sources, so a more conservative scheme—QPSK—is used. This method (shown in Fig. 2-25)
yields 2 bits per baud instead of the 6 or 8 bits QAM provides on the downstream channels. Consequently, the
an intelligent digital computer system with a high-bandwidth fiber interface to an ISP. Often the name gets
upgraded as well, from ''headend'' to CMTS (Cable Modem Termination System). In the following text, we will
having the customers buy cable modems in stores and install them themselves (as they do with V.9x telephone
modem standard and to test products for compliance. This standard, called DOCSIS (Data Over Cable Service
The modem-to-computer interface is straightforward. It is normally 10-Mbps Ethernet (or occasionally USB) at
present. In the future, the entire modem might be a small card plugged into the computer, just as with V.9x
The other end is more complicated. A large part of the standard deals with radio engineering, a subject that is far
beyond the scope of this book. The only part worth mentioning here is that cable modems, like ADSL modems,
long ago the first minislot really started. Minislot length is network dependent. A typical payload is 8 bytes.
doubled. (For readers already somewhat familiar with networking, this algorithm is just slotted ALOHA with
television using MPEG-2, so the TV and downstream data channels are formatted the same way. Logically, the
one to the ISP requesting an IP address, which is dynamically assigned using a protocol called DHCP, which we
initialization is complete. The user can now log in to the ISP and get to work.
2.7.5 ADSL versus Cable
Which is better, ADSL or cable? That is like asking which operating system is better. Or which language is
better. Or which religion. Which answer you get depends on whom you ask. Let us compare ADSL and cable on
a few points. Both use fiber in the backbone, but they differ on the edge. Cable uses coax; ADSL uses twisted
In practice, it is hard to generalize about effective capacity. ADSL providers give specific statements about the
currently active on the user's cable segment. Sometimes it may be better than ADSL and sometimes it may be
As an ADSL system acquires more users, their increasing numbers have little effect on existing users, since
it is rigidly divided in fixed chunks among the active users by FDM and TDM because voice traffic is fairly
Availability is an issue on which ADSL and cable differ. Everyone has a telephone, but not all users are close
enough to their end office to get ADSL. On the other hand, not everyone has cable, but if you do have cable and
Being a point-to-point medium, ADSL is inherently more secure than cable. Any cable user can easily read all
Finally, most ADSL providers offer a choice of ISPs. Sometimes they are even required to do so by law. This is
The conclusion is that ADSL and cable are much more alike than they are different. They offer comparable
transmission system is satellite communication, especially LEO systems.
A key element in most wide area networks is the telephone system. Its main components are the local loops,
data. ADSL offers speeds up to 50 Mbps by dividing the local loop into many virtual channels and modulating
each one separately. Wireless local loops are another new development to watch, especially LMDS.
Trunks are digital, and can be multiplexed in several ways, including FDM, TDM, and WDM. Both circuit
use for voice and will soon be in widespread use for data. The first generation was analog, dominated by AMPS.
The second generation was digital, with D-AMPS, GSM, and CDMA the major options. The third generation will
be digital and based on broadband CDMA.
2. A noiseless 4-kHz channel is sampled every 1 msec. What is the maximum data rate?
13. A laser beam 1 mm wide is aimed at a detector 1 mm wide 100 m away on the roof of a building. How
17. Using only the data given in the text, what is the maximum number of telephones that the existing U.S.
18. A simple telephone system consists of two end offices and a single toll office to which each end office is
19. A regional telephone company has 10 million subscribers. Each of their telephones is connected to a
22. A modem constellation diagram similar to Fig. 2-25 has data points at the following coordinates: (1, 1),
23. A modem constellation diagram similar to Fig. 2-25 has data points at (0, 1) and (0, 2). Does the modem
25. How many frequencies does a full-duplex QAM-64 modem use?
26. An ADSL system using DMT allocates 3/4 of the available data channels to the downstream link. It uses
QAM-64 modulation on each channel. What is the capacity of the downstream link?
27. In the four-sector LMDS example of Fig. 2-30, each sector has its own 36-Mbps channel. According to
Under these conditions, how long does it take to download a 5-KB Web page? How long does it take to
download the page over a 1-Mbps ADSL line? Over a 56-kbps modem?
28. Ten signals, each requiring 4000 Hz, are multiplexed on to a single channel using FDM. How much
29. Why has the PCM sampling time been set at 125 µsec?
a. (a) Analog encoding (e.g., QPSK) with 2 bits per sample.
b. (b) The T1 PCM system.
A signal is transmitted digitally over a 4-kHz noiseless channel with one sample every 125 µsec. How
a. (a) CCITT 2.048 Mbps standard.
b. (b) DPCM with a 4-bit relative signal value.
A pure sine wave of amplitude A is encoded using delta modulation, with x samples/sec. An output of +1
corresponds to a signal change of +A/8, and an output signal of -1 corresponds to a signal change of A/8. What is the highest frequency that can be tracked without cumulative error?
SONET clocks have a drift rate of about 1 part in 109. How long does it take for the drift to equal the
In Fig. 2-37, the user data rate for OC-3 is stated to be 148.608 Mbps. Show how this number can be
derived from the SONET OC-3 parameters.
To accommodate lower data rates than STS-1, SONET has a system of virtual tributaries (VT). A VT is a
partial payload that can be inserted into an STS-1 frame and combined with other partial payloads to fill
columns of an STS-1 frame. Which VT can accommodate
a. (a) A DS-1 service (1.544 Mbps)?
b. (b) European CEPT-1 service (2.048 Mbps)?
c. (c) A DS-2 service (6.312 Mbps)?
What is the available user bandwidth in an OC-12c connection?
Make a rough estimate of the number of PCS microcells 100 m in diameter it would take to cover San
D-AMPS has appreciably worse speech quality than GSM. Is this due to the requirement that D-AMPS
be backward compatible with AMPS, whereas GSM had no such constraint? If not, what is the cause?
Calculate the maximum number of users that D-AMPS can support simultaneously within a single cell.
Do the same calculation for GSM. Explain the difference.
Suppose that A, B, and C are simultaneously transmitting 0 bits, using a CDMA system with the chip
51. In the discussion about orthogonality of CDMA chip sequences, it was stated that if S•T = 0 then
52. Consider a different way of looking at the orthogonality property of CDMA chip sequences. Each bit in a
53. A CDMA receiver gets the following chips: (-1 +1 -3 +1 -1 -3 +1 +1). Assuming the chip sequences
past all the houses in the same neighborhood. Suppose that a future TV cable were 10 Gbps fiber
55. A cable TV system has 100 commercial channels, all of them alternating programs with advertising. Is
this more like TDM or like FDM?
56. A cable company decides to provide Internet access over cable in a neighborhood consisting of 5000
59. Multiplexing STS-1 multiple data streams, called tributaries, plays an important role in SONET. A 3:1
multiplexer multiplexes three input STS-1 tributaries onto one output STS-3 stream. This multiplexing is
processes. The main process creates four processes, one each for the three STS-1 tributaries and one
for the multiplexer. Each tributary process reads in an STS-1 frame from an input file as a sequence of
receives these bytes and outputs an STS-3 frame (byte by byte) by writing it on standard output. Use
At first you might think this problem is so trivial that there is no software to study—machine A just puts the bits on
the wire, and machine B just takes them off. Unfortunately, communication circuits make errors occasionally.
Consider a typical example: a WAN subnet consisting of routers connected by point-to-point leased telephone
Figure 3-4. A character stream. (a) Without errors. (b) With one error.
in Fig. 3-5(a) as FLAG. In this way, if the receiver ever loses synchronization, it can just search for the flag byte
Figure 3-5. (a) A frame delimited by flag bytes. (b) Four examples of byte sequences before and after
A serious problem occurs with this method when binary data, such as object programs or floating-point numbers,
special escape byte (ESC) just before each ''accidental'' flag byte in the data. The data link layer on the receiving
The byte-stuffing scheme depicted in Fig. 3-5 is a slight simplification of the one used in the PPP protocol that
most home computers use to communicate with their Internet service provider. We will discuss PPP later in this
A major disadvantage of using this framing method is that it is closely tied to the use of 8-bit characters. Not all
character codes use 8-bit characters. For example. UNICODE uses 16-bit characters, As networks developed,
sent, do not send any more until I have told you to continue.'' We will examine the details shortly.
bits differ. In this case, 3 bits differ. To determine how many bits differ, just exclusive OR the two codewords and
10110101. A code with a single parity bit has a distance 2, since any single-bit error produces a codeword with
m data bits. Each check bit forces the parity of some collection of bits, including itself, to be even (or odd). A bit
rewrite k as a sum of powers of 2. For example, 11 = 1 + 2 + 8 and 29 = 1 + 4 + 8 + 16. A bit is checked by just
the inverted bit is 11, because it is the only one checked by bits 1, 2, and 8. Figure 3-7 shows some 7-bit ASCII
codes to correct burst errors. A sequence of k consecutive codewords are arranged as a matrix, one codeword
block to be sent is regarded as a rectangular matrix n bits wide and k bits high, as described above. A parity bit
This method can detect a single burst of length n, since only 1 bit per column will be changed. A burst of length n
correct. (A burst error does not imply that all the bits are wrong; it just implies that at least the first and last are
polynomial code, also known as a CRC (Cyclic Redundancy Check). Polynomial codes are based upon treating
bit strings as representations of polynomials with coefficients of 0 and 1 only. A k-bit frame is regarded as the
addition or borrows for subtraction. Both addition and subtraction are identical to exclusive OR. For example:
above. A divisor is said ''to go into'' a dividend if the dividend has as many bits as the divisor.
polynomial, G(x), in advance. Both the high- and low-order bits of the generator must be 1. To compute the
checksum for some frame with m bits, corresponding to the polynomial M(x), the frame must be longer than the
polynomial represented by the checksummed frame is divisible by G(x). When the receiver gets the
checksummed frame, it tries dividing it by G(x). If there is a remainder, there has been a transmission error.
1. Let r be the degree of G(x). Append r zero bits to the low-order end of the frame so it now contains m + r
2. Divide the bit string corresponding to G(x) into the bit string corresponding to xrM(x), using modulo 2
modulo 2 subtraction. The result is the checksummed frame to be transmitted. Call its polynomial T(x).
Figure 3-8 illustrates the calculation for a frame 1101011011 using the generator G(x) = x4 + x + 1.
It should be clear that T(x) is divisible (modulo 2) by G(x). In any division problem, if you diminish the dividend by
error occurs, so that instead of the bit string for T(x) arriving, T(x) + E(x) arrives. Each 1 bit in E(x) corresponds
to a bit that has been inverted. If there are k 1 bits in E(x), k single-bit errors have occurred. A single burst error
Upon receiving the checksummed frame, the receiver divides it by G(x); that is, it computes [T(x) + E(x)]/G(x).
T(x)/G(x) is 0, so the result of the computation is simply E(x)/G(x). Those errors that happen to correspond to
polynomials containing G(x) as a factor will slip by; all other errors will be caught.
If there has been a single-bit error, E(x) = xi, where i determines which bit is in error. If G(x) contains two or more
terms, it will never divide E(x), so all single-bit errors will be detected.
If there have been two isolated single-bit errors, E(x) = xi + xj, where i > j. Alternatively, this can be written as
E(x) = xj(xi - j + 1). If we assume that G(x) is not divisible by x, a sufficient condition for all double errors to be
detected is that G(x) does not divide xk + 1 for any k up to the maximum value of i - j (i.e., up to the maximum
If there are an odd number of bits in error, E(X) contains an odd number of terms (e.g., x5 + x2 + 1, but not x2 +
making x + 1a factor of G(x), we can catch all errors consisting of an odd number of inverted bits.
To see that no polynomial with an odd number of terms is divisible by x + 1, assume that E(x) has an odd
number of terms and is divisible by x + 1. Factor E(x) into (x + 1) Q(x). Now evaluate E(1) = (1 + 1)Q(1). Since 1
+ 1 = 0 (modulo 2), E(1) must be zero. If E(x) has an odd number of terms, substituting 1 for x everywhere will
r. A
end of the received frame the burst is located. If G(x) contains an x0 term, it will not have xi as a factor, so if the
degree of the parenthesized expression is less than the degree of G(x), the remainder can never be zero.
If the burst length is r + 1, the remainder of the division by G(x) will be zero if and only if the burst is identical to
G(x). By definition of a burst, the first and last bits must be 1, so whether it matches depends on the r - 1
Certain polynomials have become international standards. The one used in IEEE 802 is
data link layer processes will be running on a processor inside a special network I/O chip and the network layer
code will be running on the main CPU. However, other implementations are also possible (e.g., three processes
inside a single I/O chip; or the physical and data link layers as procedures called by the network layer process).
Another key assumption is that machine A wants to send a long stream of data to machine B, using a reliable,
connection-oriented service. Later, we will consider the case where B also wants to send data to A
simultaneously. A is assumed to have an infinite supply of data ready to send and never has to wait for data to
be produced. Instead, when A's data link layer asks for data, the network layer is always able to comply
Figure 3-9 shows some declarations (in C) common to many of the protocols to be discussed later. Five data
structures are defined there: boolean, seq_nr, packet, frame_kind, and frame. A boolean is an enumerated type
and can take on the values true and false. A seq_nr is a small integer used to number the frames so that we can
protocol needing it. A packet is the unit of information exchanged between the network layer and the data link
A frame is composed of four fields: kind, seq, ack, and info, the first three of which contain control information
field of a data frame contains a single packet; the info field of a control frame is not used. A more realistic
A number of procedures are also listed in Fig. 3-9. These are library routines whose details are implementation
with the protocols themselves. In C, this merging is done by putting the definitions in a special header file, in this
case protocol.h, and using the #include facility of the C preprocessor to include them in the protocol files.
3.3.2 A Simplex Stop-and-Wait Protocol
A more general solution to this dilemma is to have the receiver provide feedback to the sender. After having
Figure 3-11. A simplex stop-and-wait protocol.
another one, and so on. A half- duplex physical channel would suffice here.
3.3.3 A Simplex Protocol for a Noisy Channel
transparent communication between network layer processes. The network layer on machine A gives a series of
layer on machine B by its data link layer. In particular, the network layer on B has no way of knowing that a
1. The network layer on A gives packet 1 to its data link layer. The packet is correctly received at B and
passed to the network layer on B. B sends an acknowledgement frame back to A.
3. The data link layer on A eventually times out. Not having received an acknowledgement, it (incorrectly)
4. The duplicate frame also arrives at the data link layer on B perfectly and is unwittingly passed to the
network layer there. If A is sending a file to B, part of the file will be duplicated (i.e., the copy of the file
made by B will be incorrect and the error will not have been detected). In other words, the protocol will
A 1-bit sequence number (0 or 1) is therefore sufficient. At each instant of time, the receiver expects a particular
acknowledgement before advancing to the next data item are often called PAR (Positive Acknowledgement with
Retransmission) or ARQ (Automatic Repeat reQuest). Like protocol 2, this one also transmits data only in one
Figure 3-12. A positive acknowledgement with retransmission protocol.
A better idea is to use the same circuit for data in both directions. After all, in protocols 2 and 3 it was already
channel. In this model the data frames from A to B are intermixed with the acknowledgement frames from A to B.
Figure 3-13. A sliding window of size 1, with a 3-bit sequence number. (a) Initially. (b) After the first frame
3.4.1 A One-Bit Sliding Window Protocol
Figure 3-14. A 1-bit sliding window protocol.
Now let us examine protocol 4 to see how resilient it is to pathological scenarios. Assume that computer A is
trying to send its frame 0 to computer B and that B is trying to send its frame 0 to A. Suppose that A sends a
frame to B, but A's timeout interval is a little too short. Consequently, A may time out repeatedly, sending a
When the first valid frame arrives at computer B, it will be accepted and frame_expected will be set to 1. All the
subsequent frames will be rejected because B is now expecting frames with sequence number 1, not 0.
Furthermore, since all the duplicates have ack = 1 and B is still waiting for an acknowledgement of 0, B will not
After every rejected duplicate comes in, B sends A a frame containing seq = 0 and ack = 0. Eventually, one of
these arrives correctly at A, causing A to begin sending the next packet. No combination of lost frames or
is illustrated. If B waits for A's first frame before sending one of its own, the sequence is as shown in (a), and
every frame is accepted. However, if A and B simultaneously initiate communication, their first frames cross, and
3.4.2 A Protocol Using Go Back N
This technique is known as pipelining. If the channel capacity is b bits/sec, the frame size l bits, and the roundtrip propagation time R sec, the time required to transmit a single frame is l/b sec. After the last bit of a data
frame has been sent, there is a delay of R/2 before that bit arrives at the receiver and another delay of at least
R/2 for the acknowledgement to come back, for a total delay of R. In stop-and-wait the line is busy for l/band idle
for R, giving
having the receiver send a negative acknowledgement (NAK) when it detects an error, for example, when it
3 arrives at the receiver, the data link layer there notices that is has missed a frame, so it sends back a NAK for
passed to the network layer. Eventually, the NAK 2 gets back to the sender, which immediately resends frame 2.
correct order. It can also acknowledge all frames up to and including 5, as shown in the figure. If the NAK should
a quite a while later. In effect, the NAK speeds up the retransmission of one specific frame.
Figure 3-17. A sliding window protocol using go back n.
A piggybacked acknowledgement for frame 7 eventually comes back to the sender.
3.4.3 A Protocol Using Selective Repeat
already been delivered to the network layer in the correct order. A protocol using this algorithm is given in Fig. 319.
Figure 3-19. A sliding window protocol using selective repeat.
reason to suspect that an error has occurred, it sends a negative acknowledgement (NAK) frame back to the
sender. Such a frame is a request for retransmission of the frame specified in the NAK. There are two cases
receiver should keep track of whether a NAK has already been sent for a given frame. The variable no_nak in
protocol 6 is true if no NAK has been sent yet for frame_expected. If the NAK gets mangled or lost, no real harm
arrives after a NAK has been sent and lost, no_nak will be true and the auxiliary timer will be started. When it
expires, an ACK will be sent to resynchronize the sender to the receiver's current status.
A key concept used in many protocol models is the finite state machine. With this technique, each protocol
A word about the channel state is in order. The concept of a frame being ''on the channel'' is an abstraction, of
destination. A frame remains ''on the channel'' until the protocol machine executes FromPhysicalLayer and
Formally, a finite state machine model of a protocol can be regarded as a quadruple (S, M, I, T), where:
S is the set of states the processes and channel can be in.
M is the set of frames that can be exchanged over the channel.
I is the set of initial states of the processes.
T is the set of transitions between states.
have another error (deadlock). A less serious error is protocol specification that tells how to handle an event in a
described above: each protocol machine has two states and the channel has four states. A total of 16 states
Each state is labeled by three characters, SRC, where S is 0 or 1, corresponding to the frame the sender is
trying to send; R is also 0 or 1, corresponding to the frame the receiver expects, and C is 0, 1, A, or empty (–),
A similar requirement is that there not exist any paths on which the sender changes state twice (e.g., from 0 to 1
Yet another important property of a protocol is the absence of deadlocks. A deadlock is a situation in which the
describe a completely different technique, the Petri net (Danthine, 1980). A Petri net has four basic elements:
places, transitions, arcs, and tokens. A place represents a state which (part of) the system may be in. Figure 322 shows a Petri net with two places, A and B, both shown as circles. The system is currently in state A,
indicated by the token (heavy dot) in place A. A transition is indicated by a horizontal or vertical bar. Each
Figure 3-22. A Petri net with two places and two transitions.
A transition is enabled if there is at least one input token in each of its input places. Any enabled transition may
Figure 3-23. A Petri net model for protocol 3.
1: BD
2: A
3: AD
4: B
5: C
6: D
7: E
8: CF
9: EG
10: CG
11: EF
AC
A
BE
B
DF
DG
DF
DG
marking of Fig. 3-23 is ACG, (i.e., A, C, and G each have one token). Consequently, rules 2, 5, and 10 are all
BE ) cannot be applied because D is not marked.
one). In contrast, rule 3 ( AD
In the following sections we will examine several widely-used data link protocols. The first one, HDLC, is a
one, PPP, is the data link protocol used to connect home computers to the Internet.
3.6.1 HDLC—High-Level Data Link Control
They are all derived from the data link protocol first used in the IBM mainframe world: SDLC (Synchronous Data
Link Control) protocol. After developing SDLC, IBM submitted it to ANSI and ISO for acceptance as U.S. and
international standards, respectively. ANSI modified it to become ADCCP (Advanced Data Communication
Control Procedure), and ISO modified it to become HDLC (High-level Data Link Control). CCITT then adopted
and modified HDLC for its LAP (Link Access Procedure) as part of the X.25 network interface standard but later
modified it again to LAPB, to make it more compatible with a later version of HDLC. The nice thing about
The P/F bit stands for Poll/Final. It is used when a computer (or concentrator) is polling a group of terminals.
When used as P, the computer is inviting the terminal to send data. All the frames sent by the terminal, except
the final one, have the P/F bit set to P. The final one is set to F.
In some of the protocols, the P/F bit is used to force the other machine to send a Supervisory frame immediately
frame (officially called RECEIVE READY) used to indicate the next frame expected. This frame is used when
Type 1 is a negative acknowledgement frame (officially called REJECT). It is used to indicate that a transmission
Type 2 is RECEIVE NOT READY. It acknowledges all frames up to but not including Next, just as RECEIVE
READY does, but it tells the sender to stop sending. RECEIVE NOT READY is intended to signal certain
window flow control. When the condition has been repaired, the receiver sends a RECEIVE READY, REJECT,
Type 3 is the SELECTIVE REJECT. It calls for retransmission of only the frame specified. In this sense it is like
force the retransmission of any specific frame using Selective Reject. HDLC and ADCCP allow this frame type,
but SDLC and LAPB do not allow it (i.e., there is no Selective Reject), and type 3 frames are undefined.
All the protocols provide a command, DISC (DISConnect), that allows a machine to announce that it is going
SNRM (Set Normal Response Mode). Unfortunately, ''Normal Response Mode'' is anything but normal. It is an
unbalanced (i.e., asymmetric) mode in which one end of the line is the master and the other the slave. SNRM
is asymmetric. To make the protocol more suitable when the two partners are equals, HDLC and LAPB have an
additional command, SABM (Set Asynchronous Balanced Mode), which resets the line and declares both parties
to be equals. They also have commands SABME and SNRME, which are the same as SABM and SNRM,
A third command provided by all the protocols is FRMR (FRaMe Reject), used to indicate that a frame with a
frame in LAPB, a frame shorter than 32 bits, an illegal control frame, and an acknowledgement of a frame that
was outside the window, etc. FRMR frames contain a 24-bit data field telling what was wrong with the frame. The
Control frames can be lost or damaged, just like data frames, so they must be acknowledged too. A special
control frame, called UA (Unnumbered Acknowledgement), is provided for this purpose. Since only one control
that may contain arbitrary information, UI (Unnumbered Information). These data are not passed to the network
Despite its widespread use, HDLC is far from perfect. A discussion of a variety of problems associated with it
backbone LAN. Typically, all connections to the outside world go through one or two routers that have point-topoint leased lines to distant routers. It is these routers and their leased lines that make up the communication
that the user's home PC calls up an Internet service provider's router and then acts like a full-blown Internet host.
This method of operation is no different from having a leased line between the PC and the router, except that the
connection is terminated when the user ends the session. A home PC calling an Internet service provider is
Figure 3-26. A home personal computer acting as an Internet host.
studied in this chapter. The one used in the Internet is called PPP. We will now examine it.
PPP—The Point-to-Point Protocol
user-to-ISP traffic. This protocol is PPP (Point-to-Point Protocol), which is defined in RFC 1661 and further
elaborated on in several other RFCs (e.g., RFCs 1662 and 1663). PPP handles error detection, supports
multiple protocols, allows IP addresses to be negotiated at connection time, permits authentication, and has
PPP provides three features:
1. A framing method that unambiguously delineates the end of one frame and the start of the next one. The
2. A link control protocol for bringing lines up, testing them, negotiating options, and bringing them down
again gracefully when they are no longer needed. This protocol is called LCP (Link Control Protocol). It
3. A way to negotiate network-layer options in a way that is independent of the network layer protocol to be
used. The method chosen is to have a different NCP (Network Control Protocol) for each network layer
service provider to make a home PC a temporary Internet host. The PC first calls the provider's router via a
modem. After the router's modem has answered the phone and established a physical connection, the PC sends
the router a series of LCP packets in the payload field of one or more PPP frames. These packets and their
responses select the PPP parameters to be used.
Once the parameters have been agreed upon, a series of NCP packets are sent to configure the network layer.
Typically, the PC wants to run a TCP/IP protocol stack, so it needs an IP address. There are not enough IP
one to each newly attached PC for the duration of its login session. If a provider owns n IP addresses, it can
have up to n machines logged in simultaneously, but its total customer base may be many times that. The NCP
for IP assigns the IP address.
At this point, the PC is now an Internet host and can send and receive IP packets, just as hardwired hosts can.
When the user is finished, NCP tears down the network layer connection and frees up the IP address. Then LCP
The PPP frame format was chosen to closely resemble the HDLC frame format, since there was no reason to
reinvent the wheel. The major difference between PPP and HDLC is that PPP is character oriented rather than
bit oriented. In particular, PPP uses byte stuffing on dial-up modem lines, so all frames are an integral number of
bytes. It is not possible to send a frame consisting of 30.25 bytes, as it is with HDLC. Not only can PPP frames
be sent over dial-up telephone lines, but they can also be sent over SONET or true bit-oriented HDLC lines (e.g.,
for router-router connections). The PPP frame format is shown in Fig. 3-27.
Figure 3-27. The PPP full frame format for unnumbered mode operation.
All PPP frames begin with the standard HDLC flag byte (01111110), which is byte stuffed if it occurs within the
unnumbered frame. In other words, PPP does not provide reliable transmission using sequence numbers and
numbered mode can be used. The exact details are defined in RFC 1663, but in practice it is rarely used.
Since the Address and Control fields are always constant in the default configuration, LCP provides the
The fourth PPP field is the Protocol field. Its job is to tell what kind of packet is in the Payload field. Codes are
defined for LCP, NCP, IP, IPX, AppleTalk, and other protocols. Protocols starting with a 0 bit are network layer
protocols such as IP, IPX, OSI CLNP, XNS. Those starting with a 1 bit are used to negotiate other protocols.
These include LCP and a different NCP for each network layer protocol supported. The default size of the
Protocol field is 2 bytes, but it can be negotiated down to 1 byte using LCP.
The Payload field is variable length, up to some negotiated maximum. If the length is not negotiated using LCP
In summary, PPP is a multiprotocol framing mechanism suitable for use over modems, HDLC bit-serial lines,
SONET, and other physical layers. It supports error detection, option negotiation, header compression, and,
optionally, reliable transmission using an HDLC-type frame format.
Let us now turn from the PPP frame format to the way lines are brought up and down. The (simplified) diagram
Figure 3-28. A simplified phase diagram for bringing a line up and down.
The protocol starts with the line in the DEAD state, which means that no physical layer carrier is present and no
physical layer connection exists. After physical connection is established, the line moves to ESTABLISH. At that
point LCP option negotiation begins, which, if successful, leads to AUTHENTICATE. Now the two parties can
check on each other's identities if desired. When the NETWORK phase is entered, the appropriate NCP protocol
is invoked to configure the network layer. If the configuration is successful, OPEN is reached and data transport
can take place. When data transport is finished, the line moves into the TERMINATE phase, and from there,
back to DEAD when the carrier is dropped.
LCP negotiates data link protocol options during the ESTABLISH phase. The LCP protocol is not actually
a connection. Finally, the LCP protocol also allows lines to be taken down when they are no longer needed.
Eleven types of LCP frames are defined in RFC 1661. These are listed in Fig. 3-29. The four Configure- types
allow the initiator (I) to propose option values and the responder (R) to accept or reject them. In the latter case,
all. The options being negotiated and their proposed values are part of the LCP frames.
Figure 3-29. The LCP frame types.
different versions of the LCP protocol. The Echo- types are used to test the line quality. Finally, Discard-request
There is little to say about the NCP protocols in a general way. Each one is specific to some network layer
protocol and allows configuration requests to be made that are specific to that protocol. For IP, for example,
Many networks use one of the bit-oriented protocols—SDLC, HDLC, ADCCP, or LAPB—at the data link level. All
data. All of them also use a sliding window for flow control. The Internet uses PPP as the primary data link
2. The following character encoding is used in a data link protocol: A: 01000111; B: 11100011; FLAG:
01111110; ESC: 11100000 Show the bit sequence transmitted (in binary) for the four-character frame: A
B ESC FLAG when each of the following framing methods are used:
described in the text is used: A B ESC C ESC FLAG FLAG D. What is the output after stuffing?
5. A bit string, 0111101111101111110, needs to be transmitted at the data link layer. What is the string
11. A 12-bit Hamming code whose hexadecimal value is 0xE4F arrives at a receiver. What was the original
13. A block of bits with n rows and k columns uses horizontal and vertical parity bits for error detection.
15. A bit stream 10011101 is transmitted using the standard CRC method described in the text. The
16. Data link protocols almost always put the CRC in a trailer rather than in a header. Why?
17. A channel has a bit rate of 4 kbps and a propagation delay of 20 msec. For what range of frame sizes
18. A 3000-km-long T1 trunk is used to transmit 64-byte frames using protocol 5. If the propagation speed is
one expected and no_nak is true. If both conditions hold, a NAK is sent. Otherwise, the auxiliary timer is
incoming frame is a NAK and another condition is met. Give a scenario where the presence of this other
you. The other end uses HDLC, with a 3-bit sequence number and a window size of seven frames. You
3960 data bits. Assume that the signal propagation time from the earth to the satellite is 270 msec. ACK
frames never occur. NAK frames are 40 bits. The error rate for data frames is 1 percent, and the error
rate for NAK frames is negligible. The sequence numbers are 8 bits.
32. A 100-km-long cable runs at the T1 data rate. The propagation speed in the cable is 2/3 the speed of
B, B
AC, CD
E, and E
CD, draw the Petri net described.
35. Given the transition rules AC
From the Petri net, draw the finite state graph reachable from the initial state ACD. What well-known
36. PPP is based closely on HDLC, which uses bit stuffing to prevent accidental flag bytes within the
payload from causing confusion. Give at least one reason why PPP uses byte stuffing instead.
37. What is the minimum overhead to send an IP packet using PPP? Count only the overhead introduced by
PPP itself, not the IP header overhead.
38. The goal of this lab exercise is to implement an error detection mechanism using the standard CRC
from standard input an n-bit message as a string of 0s and 1s as a line of ASCII text. The second line is
the k-bit polynomial, also in ASCII. It outputs to standard output a line of ASCII text with n + k 0s and 1s
of the data link layer called the MAC (Medium Access Control) sublayer. The MAC sublayer
LANs in general, including a few issues that are not strictly part of the MAC sublayer.
Technically, the MAC sublayer is the bottom part of the data link layer, so logically we should
competing users is Frequency Division Multiplexing (FDM). If there are N users, the bandwidth
is divided into N equal-sized portions (see Fig. 2-31), each user being assigned one portion.
of traffic (e.g., carriers' switching offices), FDM is a simple and efficient allocation mechanism.
bursty, FDM presents some problems. If the spectrum is cut up into N regions and fewer than
N users are currently interested in communicating, a large piece of valuable spectrum will be
wasted. If more than N users want to communicate, some of them will be denied permission
However, even assuming that the number of users could somehow be held constant at N,
The poor performance of static FDM can easily be seen from a simple queueing theory
calculation. Let us start with the mean time delay, T, for a channel of capacity C bps, with an
frames/sec and the service rate is µC frames/sec. From queueing theory it can be shown that
For example, if C is 100 Mbps, the mean frame length, 1/µ, is 10,000 bits, and the frame
arrival rate, λ, is 5000 frames/sec, then T = 200 µsec. Note that if we ignored the queueing
Now let us divide the single channel into N independent subchannels, each with capacity C/N
bps. The mean input rate on each of the subchannels will now be λ/N. Recomputing T we get
The mean delay using FDM is N times worse than if all the frames were somehow magically
Precisely the same arguments that apply to FDM also apply to time division multiplexing
(TDM). Each user is statically allocated every Nth time slot. If a user does not use the allocated
Station Model. The model consists of N independent stations (e.g., computers, telephones,
Single Channel Assumption. A single channel is available for all communication. All stations
collisions. A collided frame must be transmitted again later. There are no errors other than
begin at the start of a slot. A slot may contain 0, 1, or more frames, corresponding to an idle
4.2.1 ALOHA
many researchers since then (Abramson, 1985). Although Abramson's work, called the ALOHA
We will discuss two versions of ALOHA here: pure and slotted. They differ with respect to
whether time is divided into discrete slots into which all frames must fit. Pure ALOHA does not
require global time synchronization; slotted ALOHA does.
Pure ALOHA
The basic idea of an ALOHA system is simple: let users transmit whenever they have data to
was destroyed by listening to the channel, the same way other users do. With a LAN, the
A sketch of frame generation in an ALOHA system is given in Fig. 4-1. We have made the
frames all the same length because the throughput of ALOHA systems is maximized by having
Figure 4-1. In pure ALOHA, frames are transmitted at completely
An interesting question is: What is the efficiency of an ALOHA channel? In other words, what
first consider an infinite collection of interactive users sitting at their computers (stations). A
population of users generates new frames according to a Poisson distribution with mean N
frames per frame time. (The infinite-population assumption is needed to ensure that N does
not decrease as users become blocked.) If N > 1, the user community is generating frames at
reasonable throughput we would expect 0 < N < 1.
attempts per frame time, old and new combined, is also Poisson, with mean G per frame time.
Clearly, G
N. At low load (i.e., N
N. At high load there will be many collisions, so G > N. Under all
retransmissions, so G
loads, the throughput, S, is just the offered load, G, times the probability, P0, of a transmission
succeeding—that is, S = GP0, where P0 is the probability that a frame does not suffer a
A frame will not suffer a collision if no other frames are sent within one frame time of its start,
ALOHA a station does not listen to the channel before transmitting, it has no way of knowing
so the probability of zero frames is just e-G. In an interval two frame times long, the mean
entire vulnerable period is thus given by P0 = e -2G. Using S = GP0, we get
throughput occurs at G = 0.5, with S = 1/2e, which is about 0.184. In other words, the best
Slotted ALOHA
In 1972, Roberts published a method for doubling the capacity of an ALOHA system (Roberts,
In Roberts' method, which has come to be known as slotted ALOHA, in contrast to
Abramson's pure ALOHA, a computer is not permitted to send whenever a carriage return is
pure ALOHA is turned into a discrete one. Since the vulnerable period is now halved, the
probability of no other traffic during the same slot as our test frame is e-G which leads to
As you can see from Fig. 4-3, slotted ALOHA peaks at G = 1, with a throughput of S =1/e or
about 0.368, twice that of pure ALOHA. If the system is operating at G = 1, the probability of
an empty slot is 0.368 (from Eq. 4-2). The best we can hope for using slotted ALOHA is 37
higher values of G reduces the number of empties but increases the number of collisions
exponentially. To see how this rapid growth of collisions with G comes about, consider the
transmission of a test frame. The probability that it will avoid a collision is e-G, the probability
that all the other users are silent in that slot. The probability of a collision is then just 1 - e-G.
Figure 4-3. Throughput versus offered traffic for ALOHA systems.
The expected number of transmissions, E, per carriage return typed is then
As a result of the exponential dependence of E upon G, small increases in the channel load can
With slotted ALOHA the best channel utilization that can be achieved is 1/e. This is hardly
called carrier sense protocols. A number of them have been proposed. Kleinrock and Tobagi
Persistent and Nonpersistent CSMA
The first carrier sense protocol that we will study here is called 1-persistent CSMA (Carrier
than pure ALOHA because both stations have the decency to desist from interfering with the
ALOHA. Exactly the same holds for slotted ALOHA.
A second carrier sense protocol is nonpersistent CSMA. In this protocol, a conscious attempt
channel utilization but longer delays than 1-persistent CSMA.
The last protocol is p-persistent CSMA. It applies to slotted channels and works as follows.
three protocols, as well as for pure and slotted ALOHA.
CSMA with Collision Detection
Persistent and nonpersistent CSMA protocols are clearly an improvement over ALOHA because
time and bandwidth. This protocol, known as CSMA/CD (CSMA with Collision Detection) is
widely used on LANs in the MAC sublayer. In particular, it is the basis of the popular Ethernet
LAN, so it is worth devoting some time to looking at it in detail.
CSMA/CD, as well as many other LAN protocols, uses the conceptual model of Fig. 4-5. At the
Figure 4-5. CSMA/CD can be in one of three states: contention,
Therefore, our model for CSMA/CD will consist of alternating contention and transmission
the contention interval as a slotted ALOHA system with slot width 2τ. On a 1-km long coaxial
for noise bursts that might indicate a collision. For this reason, CSMA/CD with a single channel
To avoid any misunderstanding, it is worth noting that no MAC-sublayer protocol guarantees
Although collisions do not occur with CSMA/CD once a station has unambiguously captured the
And CSMA/CD is not universally applicable. In this section, we will examine some protocols
In the protocols to be described, we assume that there are exactly N stations, each with a
unique address from 0 to N - 1 ''wired'' into it. It does not matter that some stations may be
A Bit-Map Protocol
of exactly N slots. If station 0 has a frame to send, it transmits a 1 bit during the zeroth slot.
After all N slots have passed by, each station has complete knowledge of which stations wish
ready station has transmitted its frame, an event all stations can easily monitor, another N bit
of the bit map. On average, the station will have to wait N/2 slots for the current scan to finish
and another full N slots for the following scan to run to completion before it may begin
half a scan (N/2 bit slots) before starting to transmit. High-numbered stations rarely have to
wait for the next scan. Since low-numbered stations must wait on average 1.5N slots and highnumbered stations must wait on average 0.5N slots, the mean for all stations is N slots. The
channel efficiency at low load is easy to compute. The overhead per frame is N bits, and the
amount of data is d bits, for an efficiency of d/(N + d).
At high load, when all the stations have something to send all the time, the N bit contention
period is prorated over N frames, yielding an overhead of only 1 bit per frame, or an efficiency
station, plus an additional N(d + 1)/2 once it gets to the head of its internal queue.
A problem with the basic bit-map protocol is that the overhead is 1 bit per station, so it does
binary station addresses. A station wanting to use the channel now broadcasts its address as a
length. The bits in each address position from different stations are BOOLEAN ORed together.
Figure 4-7. The binary countdown protocol. A dash indicates silence.
The channel efficiency of this method is d/(d + log2 N). If, however, the frame format has been
cleverly chosen so that the sender's address is the first field in the frame, even these log2 N
For example, if stations C, H, D, A, G, B, E, F have priorities 7, 6, 5, 4, 3, 2, 1, and 0,
respectively, then a successful transmission by D puts it at the end of the list, giving a priority
order of C, H, A, G, B, E, F, D. Thus, C remains virtual station 7, but A moves up from 4 to 5
and D drops from 5 to 0. Station D will now only be able to acquire the channel if no other
contention, as in CSMA, and collision-free methods. Each strategy can be rated as to how well
ALOHA) is preferable due to its low delay. As the load increases, contention becomes
ALOHA). What we need is a way to assign stations to slots dynamically, with many stations per
devised by the U.S. Army for testing soldiers for syphilis during World War II (Dorfman, 1943).
In short, the Army took a blood sample from N soldiers. A portion of each sample was poured
samples were prepared, one from soldiers 1 through N/2 and one from the rest. The process
some detail by Bertsekas and Gallager (1992). For example, consider the case of stations G
and H being the only ones wanting to transmit. At node 1 a collision will occur, so 2 will be
also turns up nothing, 7 can be skipped and node G tried next.
A different approach to channel allocation is to divide the channel into subchannels using FDM,
TDM, or both, and dynamically allocate them as needed. Schemes like this are commonly used
A simple way to build an all-optical LAN is to use a passive star coupler (see Fig. 2-10). In
(wavelength bands), as shown in Fig. 2-31. In this protocol, WDMA (Wavelength Division
Multiple Access), each station is assigned two channels. A narrow channel is provided as a
transfer, and (3) datagram traffic, such as UDP packets. For the two connection-oriented
protocols, the idea is that for A to communicate with B, it must first insert a CONNECTION
REQUEST frame in a free slot on B's control channel. If B accepts, communication can take
place on A's data channel.
A
A
A
A
Let us now consider how station A sets up a class 2 communication channel with station B for,
say, file transfer. First, A tunes its data receiver to B's data channel and waits for the status
for example, we see that of B's eight control slots, 0, 4, and 5 are free. The rest are occupied
A picks one of the free control slots, say, 4, and inserts its CONNECTION REQUEST message
there. Since B constantly monitors its control channel, it sees the request and grants it by
assigning slot 4 to A. This assignment is announced in the status slot of B's data channel.
When A sees the announcement, it knows it has a unidirectional connection. If A asked for a
two-way connection, B now repeats the same algorithm with A.
It is possible that at the same time A tried to grab B's control slot 4, C did the same thing.
Neither will get it, and both will notice the failure by monitoring the status slot in B's control
one. To perform the file transfer, A now sends B a control message saying, for example,
''Please watch my next data output slot 3. There is a data frame for you in it.'' When B gets
the control message, it tunes its receiver to A's output channel to read the data frame.
Depending on the higher-layer protocol, B can use the same mechanism to send back an
Note that a problem arises if both A and C have connections to B and each of them suddenly
tells B to look at slot 3. B will pick one of these requests at random, and the other
For constant rate traffic, a variation of this protocol is used. When A asks for a connection, it
simultaneously says something like: Is it all right if I send you a frame in every occurrence of
slot 3? If B is able to accept (i.e., has no previous commitment for slot 3), a guaranteed
bandwidth connection is established. If not, A can try again with a different proposal,
Class 3 (datagram) traffic uses still another variation. Instead of writing a CONNECTION
REQUEST message into the control slot it just found (4), it writes a DATA FOR YOU IN SLOT 3
message. If B is free during the next data slot 3, the transmission will succeed. Otherwise, the
Numerous other WDMA protocols have been proposed and implemented, differing in various
sometimes called DWDM (Dense Wavelength Division Multiplexing). For more information
4.2.6 Wireless LAN Protocols
boating. A system of notebook computers that communicate by radio can be regarded as a
wireless LAN, as we discussed in Sec. 1.5.4. These LANs have somewhat different properties
than conventional LANs and require special MAC sublayer protocols. In this section we will
(Geier, 2002; and O'Hara and Petrick, 1999).
A common configuration for a wireless LAN is an office building with base stations (also called
CDMA-type systems further in this discussion. It is important to realize that in some wireless
A naive approach to using a wireless LAN might be to try CSMA: just listen for other
radio range is such that A and B are within each other's range and can potentially interfere
with one another. C can also potentially interfere with both B and D, but not with A.
Figure 4-11. A wireless LAN. (a) A transmitting. (b) B transmitting.
First consider what happens when A is transmitting to B, as depicted in Fig. 4-11(a). If C
senses the medium, it will not hear A because A is out of range, and thus falsely conclude that
it can transmit to B. If C does start transmitting, it will interfere at B, wiping out the frame
from A. The problem of a station not being able to detect a potential competitor for the
Now let us consider the reverse situation: B transmitting to A, as shown in Fig. 4-11(b). If C
send to D, when in fact such a transmission would cause bad reception only in the zone
between B and C, where neither of the intended receivers is located. This is called the
there is activity around the receiver. CSMA merely tells it whether there is activity around the
MACA and MACAW
An early protocol designed for wireless LANs is MACA (Multiple Access with Collision
transmitting for the duration of the upcoming (large) data frame. MACA is illustrated in Fig. 412.
Figure 4-12. The MACA protocol. (a) A sending an RTS to B. (b) B
responding with a CTS to A.
Let us now consider how A sends a frame to B. A starts by sending an RTS (Request To
Send) frame to B, as shown in Fig. 4-12(a). This short frame (30 bytes) contains the length of
the data frame that will eventually follow. Then B replies with a CTS (Clear to Send) frame,
as shown in Fig. 4-12(b). The CTS frame contains the data length (copied from the RTS
frame). Upon receipt of the CTS frame, A begins transmission.
RTS is clearly close to A and must remain silent long enough for the CTS to be transmitted
back to A without conflict. Any station hearing the CTS is clearly close to B and must remain
silent during the upcoming data transmission, whose length it can tell by examining the CTS
In Fig. 4-12, C is within range of A but not within range of B. Therefore, it hears the RTS from
A but not the CTS from B. As long as it does not interfere with the CTS, it is free to transmit
while the data frame is being sent. In contrast, D is within range of B but not A. It does not
hear the RTS but does hear the CTS. Hearing the CTS tips it off that it is close to a station that
finished. Station E hears both control messages and, like D, must be silent until the data frame
Despite these precautions, collisions can still occur. For example, B and C could both send RTS
frames to A at the same time. These will collide and be lost. In the event of a collision, an
unsuccessful transmitter (i.e., one that does not hear a CTS within the expected time interval)
Based on simulation studies of MACA, Bharghavan et al. (1994) fine tuned MACA to improve its
performance and renamed their new protocol MACAW (MACA for Wireless). To start with,
problem by introducing an ACK frame after each successful data frame. They also observed
that CSMA has some use, namely, to keep a station from transmitting an RTS at the same
Sec. 1.5.3, the IEEE has standardized a number of local area networks and metropolitan area
networks under the name of IEEE 802. A few have survived but many have not, as we saw in
member of the IEEE Standards Association to weed out the unfit. The most important of the
survivors are 802.3 (Ethernet) and 802.11 (wireless LAN). With 802.15 (Bluetooth) and
802.16 (wireless MAN), it is too early to tell. Please consult the 5th edition of this book to find
out. Both 802.3 and 802.11 have different physical layers and different MAC sublayers but
focus on the technical details of Ethernet, the protocols, and recent developments in highspeed (gigabit) Ethernet. Since Ethernet and IEEE 802.3 are identical except for two minor
differences that we will discuss shortly, many people use the terms ''Ethernet'' and ''IEEE
speed in Mbps. Then comes the word ''Base'' (or sometimes ''BASE'') to indicate baseband
garden-hose-like thick Ethernet, bends easily. Connections to it are made using industrystandard BNC connectors to form T junctions, rather than using vampire taps. BNC connectors
plenty of spare pairs are available. This scheme is called 10Base-T. Hubs do not buffer
10Base2. (c) 10Base-T.
With 10Base2, the connection to the cable is just a passive BNC T-junction connector. The
With 10Base-T, there is no shared cable at all, just the hub (a box full of electronics) to which
10Base-T is that the maximum cable run from the hub is only 100 meters, maybe 200 meters
if very high quality category 5 twisted pairs are used. Nevertheless, 10Base-T quickly became
dominant due to its use of existing wiring and the ease of maintenance that it offers. A faster
version of 10Base-T (100Base-T) will be discussed later in this chapter.
A fourth cabling option for Ethernet is 10Base-F, which uses fiber optics. This alternative is
multiple cables can be connected by repeaters, as shown in Fig. 4-15(d). A repeater is a
repeaters). A system may contain multiple cable segments and multiple repeaters, but no two
period is divided into two equal intervals. A binary 1 bit is sent by having the voltage set high
during the first interval and low in the second one. A binary 0 is just the reverse: first low and
easy for the receiver to synchronize with the sender. A disadvantage of Manchester encoding is
encoding. In it, a 1 bit is indicated by the absence of a transition at the start of the interval. A
DC value of 0 volts. Ethernet does not use differential Manchester encoding, but other LANs
4.3.3 The Ethernet MAC Sublayer Protocol
The original DIX (DEC, Intel, Xerox) frame structure is shown in Fig. 4-17(a). Each frame
Figure 4-17. Frame formats. (a) DIX Ethernet. (b) IEEE 802.3.
consisting of all 1 bits is reserved for broadcast. A frame containing all 1s in the destination
broadcast is important enough to warrant repeating. A multicast frame is sent to a selected
contrast, are assigned centrally by IEEE to ensure that no two stations anywhere in the world
the DIX standard was cast in stone, mostly based on the fact that a transceiver needs enough
RAM to hold an entire frame and RAM was expensive in 1978. A larger upper limit would have
meant more RAM, hence a more expensive transceiver.
Fig. 4-18. At time 0, station A, at one end of the network, sends off a frame. Let us call the
other end (i.e., at time τ-ε), the most distant station, B, starts transmitting. When B detects
noise burst gets back to the sender. For a 10-Mbps LAN with a maximum length of 2500
length must come down, proportionally. For a 2500-meter LAN operating at 1 Gbps, the
redundancy check (CRC) of the kind discussed in Chap. 3. It just does error detection, not
When IEEE standardized Ethernet, the committee made two changes to the DIX format, as
Unfortunately, by the time 802.3 was published, so much hardware and software for DIX
converting the Type field into a Length field. In 1997 IEEE threw in the towel and said that
Length, and any number greater than 1500 can be interpreted as Type. Now IEEE can
As described so far, CSMA/CD provides no acknowledgements. Since the mere absence of
constant load, that is, k stations always ready to transmit. A rigorous analysis of the binary
during a contention slot with probability p, the probability A that some station acquires the
A is maximized when p = 1/k, with A
interval has exactly j slots in it is A(1 - A)j - 1, so the mean number of slots per contention is
Since each slot has a duration 2τ, the mean contention interval, w, is 2τ/A. Assuming optimal
If the mean frame takes P sec to transmit, when many stations have frames to send,
It is instructive to formulate Eq. (4-6) in terms of the frame length, F, the network bandwidth,
B, the cable length, L, and the speed of signal propagation, c, for the optimal case of e
contention slots per frame. With P = F/B, Eq. (4-6) becomes
specifically, increasing network bandwidth or distance (the BL product) reduces efficiency for a
period and one frame transmission time, for a total of P + w sec. The number of frames per
second is therefore 1/(P + w). If each station generates frames at a mean rate of λ
we can equate these two expressions and solve for k. (Notice that w is a function of k.) A more
As more and more stations are added to an Ethernet, the traffic will go up. Eventually, the LAN
often, each connector has a 10Base-T twisted pair connection to a single host computer.
Figure 4-20. A simple example of switched Ethernet.
the card to be wired together to form a local on-card LAN. Collisions on this on-card LAN will
be detected and handled the same as any other collisions on a CSMA/CD network—with
in the card's on-board RAM as they arrive. This design allows all input ports to receive (and
with CSMA/CD on a single channel. Once a frame has been completely received, the card can
FDDI (Fiber Distributed Data Interface) and the other was called Fibre Channel [ ]. To
was KISS (Keep It Simple, Stupid).
It was in this environment that IEEE reconvened the 802.3 committee in 1992 with instructions
to come up with a faster LAN. One proposal was to keep 802.3 exactly as it was, but just make
standardized their LAN anyway (eventually as 802.12). It flopped miserably.
officially approved by IEEE in June 1995. Technically, 802.3u is not a new standard, but an
10Base-T wiring were so overwhelming that fast Ethernet is based entirely on this design.
BNC connectors are not permitted.
specified for 10Base-T (see Fig. 4-13). In contrast, category 5 twisted pair wiring can handle
The category 3 UTP scheme, called 100Base-T4, uses a signaling speed of 25 MHz, only 25
For category 5 wiring, the design, 100Base-TX, is simpler because the wires can handle clock
Straight binary coding is not used; instead a scheme called used4B/5Bis It is taken from FDDI
provide enough transitions to maintain clock synchronization. The 100Base-TX system is full
100Base-TX and 100Base-T4 are collectively referred to as 100Base-T.
The last option, 100Base-FX, uses two strands of multimode fiber, one for each direction, so
cost, and the fact that many office buildings have already been rewired with category 5 UTP.
Two kinds of interconnection devices are possible with 100Base-T: hubs and switches, as
faster backplanes in order to improve system throughput. Because 100Base-FX cables are too
one is a collision domain unto itself. Hubs are not permitted with 100Base-FX.
IEEE in 1998 under the name 802.3z. This identifier suggests that gigabit Ethernet is going to
Figure 4-22. (a) A two-station Ethernet. (b) A multistation Ethernet.
(because the line is full duplex). Since no contention is possible, the CSMA/CD protocol is not
rather than a switch. A hub does not buffer incoming frames. Instead, it electrically connects
collisions are possible, so the standard CSMA/CD protocol is required. Because a minimum
The 1000Base-CX option uses short shielded copper cables. Its problem is that it is competing
with high-performance fiber from above and cheap UTP from below. It is unlikely to be used
The last option is bundles of four category 5 UTP wires working together. Because so much of
of balancing 0s and 1s is needed to keep the DC component of the signal as low as possible to
Gigabit Ethernets using 1000Base-T use a different encoding scheme since clocking data onto
A speed of 1 Gbps is quite fast. For example, if a receiver is busy with some other task for
the parameters, if any. For flow control, PAUSE frames are used, with the parameter telling
back to work. IEEE told them to start on 10-gigabit Ethernet. After searching hard for a letter
work and that standard was approved by IEEE in 2002 as 802.3ae. Can 100-gigabit Ethernet
4.3.9 IEEE 802.2: Logical Link Control
service is adequate. For example, for transporting IP packets, no guarantees are required or
even expected. An IP packet can just be inserted into an 802 payload field and sent on its way.
protocol is desired. IEEE has defined one that can run on top of Ethernet and the other 802
protocols. In addition, this protocol, called LLC (Logical Link Control), hides the differences
network layer. This format, interface, and protocol are all closely based on the HDLC protocol
we studied in Chap. 3. LLC forms the upper half of the data link layer, with the MAC sublayer
Figure 4-24. (a) Position of LLC. (b) Protocol formats.
Typical usage of LLC is as follows. The network layer on the sending machine passes a packet
to LLC, using the LLC access primitives. The LLC sublayer then adds an LLC header, containing
LLC provides three service options: unreliable datagram service, acknowledged datagram
service, and reliable connection-oriented service. The LLC header contains three fields: a
process the frame came from and where it is to be delivered, replacing the DIX Type field. The
HDLC (see Fig. 3-24), but not identical to it. These fields are primarily used when a reliable
discussed in Chap. 3 would be used. For the Internet, best-efforts attempts to deliver IP
packets is sufficient, so no acknowledgements at the LLC level are required.
likely to be around for many years to come. Few CPU architectures, operating systems, or
replaced by BNC connectors, failures became extremely rare. People hesitate to replace
Another point is that Ethernet interworks easily with TCP/IP, which has become dominant. IP is
a connectionless protocol, so it fits perfectly with Ethernet, which is also connectionless. IP fits
much less well with ATM, which is connection oriented. This mismatch definitely hurt ATM's
installation and says: ''I have this fantastic new network for you. All you have to do is throw
out all your hardware and rewrite all your software,'' he has a problem. FDDI, Fibre Channel,
and ATM were all faster than Ethernet when introduced, but they were incompatible with
in terms of speed, so they had no advantages left and quietly died off except for ATM's use
in Fig. 1-35: with a base station and without a base station. Consequently, the 802.11 LAN
physical layer radio transmission techniques, MAC sublayer protocol, frame structure, and
al., 2001; Kapp, 2002; O'Hara and Petrick, 1999; and Severance, 1999). To hear the truth
structure. A partial view of the 802.11 protocol stack is given in Fig. 4-25. The physical layer
corresponds to the OSI physical layer fairly well, but the data link layer in all the 802 protocols
is split into two or more sublayers. In 802.11, the MAC (Medium Access Control) sublayer
determines how the channel is allocated, that is, who gets to transmit next. Above it is the LLC
studied the LLC when examining Ethernet earlier in this chapter and will not repeat that
The other two use short-range radio, using techniques called FHSS and DSSS. Both of these
use a part of the spectrum that does not require licensing (the 2.4-GHz ISM band). Radiocontrolled garage door openers also use this piece of the spectrum, so your notebook
introduced to achieve higher bandwidth. These are called OFDM and HR-DSSS. They operate at
up to 54 Mbps and 11 Mbps, respectively. In 2001, a second OFDM modulation was introduced,
but since they are so closely tied to LANs in general and the 802.11 MAC sublayer, we treat
Each of the five permitted transmission techniques makes it possible to send a MAC frame
achievable. A detailed discussion of these technologies is far beyond the scope of this book,
FHSS (Frequency Hopping Spread Spectrum) uses 79 channels, each 1-MHz wide, starting
at the low end of the 2.4-GHz ISM band. A pseudorandom number generator is used to
an adjustable parameter, but must be less than 400 msec. FHSS' randomization provides a fair
way to allocate spectrum in the unregulated ISM band. It also provides a modicum of security
transmissions. Over longer distances, multipath fading can be an issue, and FHSS offers good
The third modulation method, DSSS (Direct Sequence Spread Spectrum), is also restricted
to 1 or 2 Mbps. The scheme used has some similarities to the CDMA system we examined in
when operating at 1 Mbps and 2 bits per baud when operating at 2 Mbps. For years, the FCC
required all wireless communications equipment operating in the ISM bands in the U.S. to use
The first of the high-speed wireless LANs, 802.11a, uses OFDM (Orthogonal Frequency
Division Multiplexing) to deliver up to 54 Mbps in the wider 5-GHz ISM band. As the term
FDM suggests, different frequencies are used—52 of them, 48 for data and 4 for
synchronization—not unlike ADSL. Since transmissions are present on multiple frequencies at
CDMA and FHSS. Splitting the signal into many narrow bands has some key advantages over
possibility of using noncontiguous bands. A complex encoding system is used, based on phaseshift modulation for speeds up to 18 Mbps and on QAM above that. At 54 Mbps, 216 data bits
are encoded into 288-bit symbols. Part of the motivation for OFDM is compatibility with the
Next, we come to HR-DSSS (High Rate Direct Sequence Spread Spectrum), another
phase shift modulation (for compatibility with DSSS). The two faster rates run at 1.375 Mbaud,
An enhanced version of 802.11b, 802.11g, was approved by IEEE in November 2001 after
much politicking about whose patented technology it would use. It uses the OFDM modulation
method of 802.11a but operates in the narrow 2.4-GHz ISM band along with 802.11b. In
4.4.3 The 802.11 MAC Sublayer Protocol
802.11 MAC sublayer protocol is quite different from that of Ethernet due to the inherent
one part of a cell may not be received elsewhere in the same cell. In this example, station C is
transmitting to station B. If A senses the channel, it will not hear anything and falsely conclude
that it may now start transmitting to B.
In addition, there is the inverse problem, the exposed station problem, illustrated in Fig. 426(b). Here B wants to send to C so it listens to the channel. When it hears a transmission, it
falsely concludes that it may not send to C, even though A may be transmitting to D (not
does not use CSMA/CD, as Ethernet does.
To deal with this problem, 802.11 supports two modes of operation. The first, called DCF
respect, similar to Ethernet). The other, called PCF (Point Coordination Function), uses the
base station to control all activity in its cell. All implementations must support DCF but PCF is
When DCF is employed, 802.11 uses a protocol called CSMA/CA (CSMA with Collision
used. Two methods of operation are supported by CSMA/CA. In the first method, when a
The other mode of CSMA/CA operation is based on MACAW and uses virtual channel sensing,
as illustrated in Fig. 4-27. In this example, A wants to send to B. C is a station within range of
A (and possibly within range of B, but that does not matter). D is a station within range of B
but not within range of A.
Figure 4-27. The use of virtual channel sensing using CSMA/CA.
The protocol starts when A decides it wants to send data to B. It begins by sending an RTS
frame to B to request permission to send it a frame. When B receives this request, it may
decide to grant permission, in which case it sends a CTS frame back. Upon receipt of the CTS,
A now sends its frame and starts an ACK timer. Upon correct receipt of the data frame, B
responds with an ACK frame, terminating the exchange. If A's ACK timer expires before the
ACK gets back to it, the whole protocol is run again.
Now let us consider this exchange from the viewpoints of C and D. C is within range of A, so it
may receive the RTS frame. If it does, it realizes that someone is going to send data soon, so
the information provided in the RTS request, it can estimate how long the sequence will take,
including the final ACK, so it asserts a kind of virtual channel busy for itself, indicated by NAV
(Network Allocation Vector) in Fig. 4-27. D does not hear the RTS, but it does hear the
CTS, so it also asserts the NAV signal for itself. Note that the NAV signals are not transmitted;
to microwave ovens, which also use the unlicensed ISM bands. As a consequence, the
acquired using RTS and CTS, multiple fragments can be sent in a row, as shown in Fig. 4-28.
Figure 4-28. A fragment burst.
of each cell and can be adjusted by the base station. The NAV mechanism keeps other stations
All of the above discussion applies to the 802.11 DCF mode. In this mode, there is no central
mode is PCF, in which the base station polls the other stations, asking them if they have any
frames to send. Since transmission order is completely controlled by the base station in PCF
sequences and dwell times (for FHSS), clock synchronization, etc. It also invites new stations
PCF and DCF can coexist within one cell. At first it might seem impossible to have central
The shortest interval is SIFS (Short InterFrame Spacing). It is used to allow the parties in a
single dialog the chance to go first. This includes letting the receiver send a CTS to respond to
an RTS, letting the receiver send an ACK for a fragment or full data frame, and letting the
sender of a fragment burst transmit the next fragment without having to send an RTS again.
There is always exactly one station that is entitled to respond after a SIFS interval. If it fails to
make use of its chance and a time PIFS (PCF InterFrame Spacing) elapses, the base station
If the base station has nothing to say and a time DIFS (DCF InterFrame Spacing) elapses,
The last time interval, EIFS (Extended InterFrame Spacing), is used only by a station that
management. Each of these has a header with a variety of fields used within the MAC
or management) and Subtype fields (e.g., RTS or CTS). The To DS and From DS bits indicate
the frame is going to or coming from the intercell distribution system (e.g., Ethernet). The MF
frames for the receiver. The W bit specifies that the frame body has been encrypted using the
WEP (Wired Equivalent Privacy) algorithm. Finally, the O bit tells the receiver that a
is how other stations manage the NAV mechanism. The frame header contains four addresses,
all in standard IEEE 802 format. The source and destination are obviously needed, but what
field. The key information here is in the Subtype field, usually RTS, CTS, or ACK.
The 802.11 standard states that each conformant wireless LAN must provide nine services.
include the data rates supported, need for PCF services (i.e., polling), and power
the relationship. A station should use this service before shutting down or leaving, but
3. Reassociation. A station may change its preferred base station using this service. This
3. Privacy. For information sent over a wireless LAN to be kept confidential, it must be
algorithm specified is RC4, invented by Ronald Rivest of M.I.T.
the widespread deployment of 802.11 at CMU, see (Hills, 2001).
on demand, etc. As we saw in Fig. 2-30, LMDS was invented for this purpose. However, until
element missing, so IEEE was asked to form a committee composed of people from key
it a wireless MAN (Metropolitan Area Network) or a wireless local loop. We regard all
Like some of the other 802 standards, 802.16 was heavily influenced by the OSI model,
OSI, it is fairly complicated. In the following sections we will give a brief description of some of
this reason, more spectrum is needed than the ISM bands can provide, forcing 802.16 to
But these millimeter waves have different physical properties than the longer waves in the ISM
(using PCF mode), it was not really designed for telephony and heavy-duty multimedia usage.
A very brief comparison with the cellular phone system is also worthwhile. With mobile phones,
movies on GSM mobile phones (yet). Even UMTS has little hope of changing this situation. In
short, the wireless MAN world is far more demanding than is the mobile phone world, so a
committee chose not to formalize it with an OSI-type name.
physical layer protocols. The 802.16a standard will support OFDM in the 2-to-11 GHz
frequency range. The 802.16b standard will operate in the 5-GHz ISM band. Both of these are
Next comes the MAC sublayer common part. This is where the main protocols, such as channel
of the MAC sublayer is that, unlike those of the other 802 networks, it is completely connection
other 802 protocols. Its function is to interface to the network layer. A complication here is
that 802.16 was designed to integrate seamlessly with both datagram protocols (e.g., PPP, IP,
and Ethernet) and ATM. The problem is that packet protocols are connectionless and ATM is
connection oriented. This means that every ATM connection has to map onto an 802.16
incoming IP packet be mapped? That problem is dealt with in this sublayer.
subscriber station is from the base station. For close-in subscribers, QAM-64 is used, with 6
bits/baud. For medium-distance subscribers, QAM-16 is used, with 4 bits/baud. For distant
subscribers, QPSK is used, with 2 bits/baud. For example, for a typical value of 25 MHz worth
of spectrum, QAM-64 gives 150 Mbps, QAM-16 gives 100 Mbps, and QPSK gives 50 Mbps. In
(similar to what we saw with ADSL in Fig. 2-27). The constellation diagrams for these three
thing they did not like was the way GSM and DAMPS work. Both of those use different but
bandwidth. Two schemes are used, FDD (Frequency Division Duplexing) and TDD (Time
quality of service required. We will come to slot allocation when we discuss the MAC sublayer
Another interesting feature of the physical layer is its ability to pack multiple MAC frames
correction is to make the channel look better than it really is (in the same way that CD-ROMs
4.5.4 The 802.16 MAC Sublayer Protocol
RSA public-key cryptography using X.509 certificates. The payloads themselves are encrypted
using a symmetric-key system, either DES with cipher block chaining or triple DES with two
keys. AES (Rijndael) is likely to be added soon. Integrity checking uses SHA-1. Now that was
Let us now look at the MAC sublayer common part. MAC frames occupy an integral number of
802.11 or Ethernet, which have no connections in the MAC sublayer.
rigidly-prescribed time intervals. A constant bit rate customer can set a bit in one of its frames
All MAC frames begin with a generic header. The header is followed by an optional payload and
an optional checksum (CRC), as illustrated in Fig. 4-34. The payload is not needed in control
Figure 4-34. (a) A generic frame. (b) A bandwidth request frame.
A quick rundown of the header fields of Fig. 4-34(a) is as follows. The EC bit tells whether the
and fragmentation are present. The CI field indicates the presence or absence of the final
checksum. The EK field tells which of the encryption keys is being used (if any). The Length
A second header type, for frames that request bandwidth, is shown in Fig. 4-34(b). It starts
number of bytes. Bandwidth request frames do not carry a payload or full-frame CRC.
A great deal more could be said about 802.16, but this is not the place to say it. For more
In 1994, the L. M. Ericsson company became interested in connecting its mobile phones to
other devices (e.g., PDAs) without cables. Together with four other companies (IBM, Intel,
Nokia, and Toshiba), it formed a SIG (Special Interest Group, i.e., consortium) to develop a
after Harald Blaatand (Bluetooth) II (940-981), a Viking king who unified (i.e., conquered)
Undaunted by all this, in July 1999 the Bluetooth SIG issued a 1500-page specification of V1.0.
Shortly thereafter, the IEEE standards group looking at wireless personal area networks,
open standard managed by a neutral body such as the IEEE often promotes the use of a
complete system, from the physical layer to the application layer. The IEEE 802.15 committee
Even though IEEE approved the first PAN standard, 802.15.1, in 2002, the Bluetooth SIG is
still active busy with improvements. Although the Bluetooth SIG and IEEE versions are not
its heart, a piconet is a centralized TDM system, with the master controlling the clock and
we may see more clearly what the Bluetooth SIG is trying to accomplish.
The next group of three profiles is for networking. The LAN access profile allows a Bluetooth
is intended for loading data into a PDA or notebook computer when it leaves home and
does not follow the OSI model, the TCP/IP model, the 802 model, or any other known model.
However, IEEE is working on modifying Bluetooth to shoehorn it into the 802 model better.
in the OSI and 802 models. It deals with radio transmission and modulation. Many of the
The baseband layer is somewhat analogous to the MAC sublayer but also includes elements of
standard 802 LLC sublayer, but technically different from it. As the names suggest, the audio
LLC was inserted here by IEEE for compatibility with its other 802 networks. The RFcomm,
stack since these roughly correspond to the physical and MAC sublayers.
with a range of 10 meters operating in the 2.4-GHz ISM band. The band is divided into 79
Because both 802.11 and Bluetooth operate in the 2.4-GHz ISM band on the same 79
Since 802.11 and 802.15 are both IEEE standards, IEEE is looking for a solution to this
problem, but it is not so easy to find since both systems use the ISM band for the same
reason: no license is required there. The 802.11a standard uses the other (5 GHz) ISM band,
banning Bluetooth altogether. A market-based solution is for the network with more power
The baseband layer is the closest thing Bluetooth has to a MAC sublayer. It turns the raw bit
slave. Two kinds of links exist. The first is the ACL (Asynchronous Connection-Less) link,
side. ACL traffic is delivered on a best-efforts basis. No guarantees are given. Frames can be
lost and may have to be retransmitted. A slave may have only one ACL link to its master.
The other is the SCO (Synchronous Connection Oriented) link, for real-time data, such as
the time-critical nature of SCO links, frames sent over them are never retransmitted. Instead,
forward error correction can be used to provide high reliability. A slave may have up to three
SCO links with its master. Each SCO link can transmit one 64,000 bps PCM audio channel.
The L2CAP layer has three major functions. First, it accepts packets of up to 64 KB from the
because not all devices can handle the 64-KB maximum packet.
masters can tell which traffic is for them. Next comes a 54-bit header containing typical MAC
Figure 4-38. A typical Bluetooth data frame.
devices the frame is intended for. The Type field identifies the frame type (ACL, SCO, poll, or
This is a primitive form of flow control. The Acknowledgement bit is used to piggyback an ACK
Various formats are used for the data field for ACL frames. The SCO frames are simpler
from the master is also 64,000 bps, exactly enough for a single full-duplex PCM voice channel
supported at once, which is why a maximum of three SCO links is permitted per slave.
the Internet in the future), AppleTalk, ATM, OSI, or any other kinds of packets. In contrast,
Third, it may be necessary to split what is logically a single LAN into separate LANs to
precludes putting all the workstations on a single LAN—the total bandwidth needed is far too
high. Instead, multiple LANs connected by bridges are used, as shown in Fig. 4-39. Each LAN
single LAN and does not add load to the backbone.
load higher than the capacity of a single LAN.
belong to the same collision domain, and all use the CSMA/CD protocol to send frames.
Fourth, in some situations, a single LAN would be adequate in terms of the load, but the
excessively long round-trip delay. The only solution is to partition the LAN and install bridges
Fifth, there is the matter of reliability. On a single LAN, a defective node that keeps outputting
a continuous stream of garbage can cripple the LAN. Bridges can be inserted at critical places,
Sixth, and last, bridges can contribute to the organization's security. Most LAN interfaces have
4-40 illustrates the operation of a simple two-port bridge. Host A on a wireless (802.11) LAN
has a packet to send to a fixed host, B, on an (802.3) Ethernet to which the wireless LAN is
connected. The packet descends into the LLC sublayer and acquires an LLC header (shown in
black in the figure). Then it passes into the MAC sublayer and an 802.11 header is prepended
its way upward. In the MAC sublayer in the bridge, the 802.11 header is stripped off. The bare
packet (with LLC header) is then handed off to the LLC sublayer in the bridge. In this example,
the packet is destined for an 802.3 LAN, so it works its way down the 802.3 side of the bridge
different MAC sublayers and k different physical layers, one for each type.
Figure 4-40. Operation of a LAN bridge from 802.11 to 802.3.
So far it looks like moving a frame from one LAN to another is easy. Such is not the case. In
field in 802.11 is there due to the MACAW protocol and makes no sense in Ethernet. As a
result, any copying between different LANs requires reformatting, which takes CPU time,
Figure 4-41. The IEEE 802 frame formats. The drawing is not to scale.
A second problem is that interconnected LANs do not necessarily run at the same data rate.
When forwarding a long run of back-to-back frames from a fast LAN to a slower one, the
gigabit Ethernet is pouring bits into an 11-Mbps 802.11b LAN at top speed, the bridge will
LANs have a similar problem when several LANs are trying to feed the same output LAN at the
A third problem, and potentially the most serious of all, is that different 802 LANs have
forwarded onto a LAN that cannot accept it. Splitting the frame into pieces is out of the
A final point is quality of service. Both 802.11 and 802.16 provide it in various forms, the
former using PCF mode and the latter using constant bit rate connections. Ethernet has no
The previous section dealt with the problems encountered in connecting two different IEEE 802
possible to go out and buy bridges designed to the IEEE standard, plug the connectors into the
to LANs 2, 3, and 4. A frame arriving at bridge B1 on LAN 1 destined for A can be discarded
immediately, because it is already on the correct LAN, but a frame arriving on LAN 1 for C or F
Figure 4-42. A configuration with four LANs and two bridges.
on which LAN to put the frame. This decision is made by looking up the destination address in
output line (LAN) it belongs on. For example, B2's table would list A as belonging to LAN 2,
since all B2 has to know is which LAN to put frames for A on. That, in fact, more forwarding
below. Once a destination is known, frames destined for it are put on only the proper LAN and
By looking at the source address, they can tell which machine is accessible on which LAN. For
example, if bridge B1 in Fig. 4-42 sees a frame on LAN 2 coming from C, it knows that C must
be reachable via LAN 2, so it makes an entry in its hash table noting that frames going to C
should use LAN 2. Any subsequent frame addressed to C coming in on LAN 1 will be forwarded,
but a frame for C coming in on LAN 2 will be discarded.
few minutes old. In this way, if a computer is unplugged from its LAN, moved around the
The routing procedure for an incoming frame depends on the LAN it arrives on (the source
LAN) and the LAN its destination is on (the destination LAN), as follows:
3. If the destination LAN is unknown, use flooding.
As each frame arrives, this algorithm must be applied. Special-purpose VLSI chips do the
A simple example of these problems can be seen by observing how a frame, F, with unknown
unknown destinations, uses flooding, which in this example just means copying it to LAN 2.
LAN 1, generating F3 (not shown). Similarly, bridge 2 copies F1 to LAN 1 generating F4 (also
actual topology with a spanning tree that reaches every LAN. In effect, some potential
exactly one path from every LAN to every other LAN. Once the bridges have agreed on the
Figure 4-44. (a) Interconnected LANs. (b) A spanning tree covering
LAN is constructed. This tree is the spanning tree. If a bridge or LAN fails, a new one is
The result of this algorithm is that a unique path is established from every LAN to the root and
thus to every other LAN. Although the tree spans all the LANs, not all the bridges are
It is standardized in IEEE 802.1D.
A common use of bridges is to connect two (or more) distant LANs. For example, a company
might have plants in several cities, each with its own LAN. Ideally, all the LANs should be
interconnected, so the complete system acts like one large LAN.
This goal can be achieved by putting a bridge on each LAN and connecting the bridges pairwise
with point-to-point lines (e.g., lines leased from a telephone company). A simple system, with
normal system of six LANS interconnected by four bridges. Nothing in what we have studied so
far says that a LAN must have hosts on it.
standard point-to-point data link protocol such as PPP, putting complete MAC frames in the
getting frames to the correct LAN. Another option is to strip off the MAC header and trailer at
the source bridge and put what is left in the payload field of the point-to-point protocol. A new
MAC header and trailer can then be generated at the destination bridge. A disadvantage of this
data are passed to the transport layer, which then adds a header, for example, a TCP header,
header to form a network layer packet, for example, an IP packet. In Fig. 4-46(b) we see the
IP packet shaded in gray. Then the packet goes to the data link layer, which adds its own
header and checksum (CRC) and gives the resulting frame to the physical layer for
transmission, for example, over a LAN.
connected to two cable segments. A signal appearing on one of them is amplified and put out
Next we come to the hubs. A hub has a number of input lines that it joins electrically. Frames
hubs do not examine the 802 addresses or use them in any way. A hub is shown in Fig. 447(a).
Figure 4-47. (a) A hub. (b) A bridge. (c) A switch.
bridges at some length. A bridge connects two or more LANs, as shown in Fig. 4-47(b). When
for four or eight input lines of a certain type. A line card for Ethernet cannot handle, say, token
connect individual computers, as shown in Fig. 4-47(c). As a consequence, when host A in Fig.
4-47(b) wants to send a frame to host B, the bridge gets the frame but just discards it. In
contrast, in Fig. 4-47(c), the switch must actively forward the frame from A to B because there
entirely in hardware, whereas bridges traditionally contained an actual CPU that did store-andforward switching in software. But since all modern bridges and switches contain special
line. For an IP packet, the packet header will contain a 32-bit (IPv4) or 128-bit (IPv6) address,
not even know whether the packet came in on a LAN or a point-to-point line. We will study
connection-oriented TCP/IP protocol needs to talk to a computer using the connection-oriented
ATM transport protocol. The transport gateway can copy the packets from one connection to
into SMS messages for mobile phones, for example.
thought was given to which computer belonged on which LAN. All the people in adjacent offices
were put on the same LAN whether they belonged together or not. Geography trumped logic.
With the advent of 10Base-T and hubs in the 1990s, all that changed. Buildings were rewired
Figure 4-48. A building with centralized wiring using hubs and a
connectors to plug into which hubs, the occupants of a LAN can be chosen in a way that makes
and thus different LANs. Nevertheless, the situation is a lot better than having LAN
Does it matter who is on which LAN? After all, in virtually all organizations, all the LANs are
department. In such a situation, putting all the people in a department on a single LAN and not
letting any of that traffic off the LAN makes sense. Management does not like hearing that
A second issue is load. Some LANs are more heavily used than others and it may be desirable
experiments that sometimes get out of hand and saturate their LAN, the folks in accounting
A third issue is broadcasting. Most LANs support broadcasting, and many upper-layer protocols
use this feature extensively. For example, when a user wants to send a packet to an IP
address x, how does it know which MAC address to put in the frame? We will study this
containing the question: Who owns IP address x? Then it waits for an answer. And there are
storm is that (1) the entire LAN capacity is occupied by these frames, and (2) all the machines
moved to a different LAN across the bridge without anyone noticing it), then bridges have to
correct LAN means having the network administrator walk down to the wiring closet and pull
rewire buildings entirely in software. The resulting concept is called a VLAN (Virtual LAN) and
VLANs are based on specially-designed VLAN-aware switches, although they may also have
some hubs on the periphery, as in Fig. 4-48. To set up a VLAN-based network, the network
administrator decides how many VLANs there will be, which computers will be on which VLAN,
members of the red LAN in red, members of the green LAN in green, and so on. In this way,
to the G (gray) VLAN and seven of them belong to the W (white) VLAN. The four physical LANs
comes in from, say, the gray VLAN, it must be forwarded on all the ports marked G. This holds
Note that a port may be labeled with multiple VLAN colors. We see this most clearly in Fig. 449(a). Suppose that machine A broadcasts a frame. Bridge B1 receives the frame and sees
that it came from a machine on the gray VLAN, so it forwards it on all ports labeled G (except
the incoming port). Since B1 has only two other ports and both of them are labeled G, the
At B2 the story is different. Here the bridge knows that there are no gray machines on LAN 4,
so the frame is not forwarded there. It goes only to LAN 2. If one of the users on LAN 4 should
change departments and be moved to the gray VLAN, then the tables inside B2 have to be
updated to relabel that port as GW instead of W. If machine F goes gray, then the port to LAN
2 has to be changed to G instead of GW.
Now let us imagine that all the machines on both LAN 2 and LAN 4 become gray. Then not only
do B2's ports to LAN 2 and LAN 4 get marked G, but B1's port to B2 also has to change from
GW to G since white frames arriving at B1 from LANs 1 and 3 no longer have to be forwarded
machine are labeled with a single color because only one VLAN is out there.
1. Every port is assigned a VLAN color.
2. Every MAC address is assigned a VLAN color.
3. Every layer 3 protocol or IP address is assigned a VLAN color.
In the first method, each port is labeled with VLAN color. However, this method only works if
all machines on a port belong to the same VLAN. In Fig. 4-49(a), this property holds for B1 for
the port to LAN 3 but not for the port to LAN 1.
In the second method, the bridge or switch has a table listing the 48-bit MAC address of each
machine connected to it along with the VLAN that machine is on. Under these conditions, it is
possible to mix VLANs on a physical LAN, as in LAN 1 in Fig. 4-49(a). When a frame arrives, all
the bridge or switch has to do is to extract the MAC address and look it up in a table to see
which VLAN the frame came from.
example, to classify all IP machines as belonging to one VLAN and all AppleTalk machines as
belonging to another. For the former, the IP address can also be used to identify the machine.
in any one of several places. Since each docking station has its own MAC address, just knowing
which docking station was used does not say anything about which VLAN the notebook is on.
decisions based on the contents. A consequence of using this approach is that a change to the
Of course, there is nothing wrong with routing based on IP addresses—nearly all of Chap. 5 is
devoted to IP routing—but mixing the layers is looking for trouble. A switch vendor might
The IEEE 802.1Q Standard
Some more thought on this subject reveals that what actually matters is the VLAN of the frame
itself, not the VLAN of the sending machine. If there were some way to identify the VLAN in
the frame header, then the need to inspect the payload would vanish. For a new LAN, such as
802.11 or 802.16, it would have been easy enough to just add a VLAN field in the header. In
fact, the Connection Identifier field in 802.16 is somewhat similar in spirit to a VLAN identifier.
But what to do about Ethernet, which is the dominant LAN, and does not have any spare fields
lying around for the VLAN identifier?
The IEEE 802 committee had this problem thrown into its lap in 1995. After much discussion, it
did the unthinkable and changed the Ethernet header. The new format was published in IEEE
standard 802.1Q, issued in 1998. The new format contains a VLAN tag; we will examine it
entirely trivial. A few questions that come to mind are:
The key to the solution is to realize that the VLAN fields are only actually used by the bridges
between the bridges or switches. Thus, to use VLANs, the bridges or switches have to be VLAN
compliant and correctly fill in the VLAN fields.
So if the originator does not generate the VLAN fields, who does? The answer is that the first
VLAN-aware bridge or switch to touch a frame adds them and the last one down the road
removes them. But how does it know which frame belongs to which VLAN? Well, the first
bridge or switch could assign a VLAN number to a port, look at the MAC address, or (heaven
classic or fast Ethernet) that are not VLAN aware and others (typically gigabit Ethernet) that
are. This situation is illustrated in Fig. 4-50, where the shaded symbols are VLAN aware and
the empty ones are not. For simplicity, we assume that all the switches are VLAN aware. If this
is not the case, the first VLAN-aware switch can add the tags based on MAC or IP addresses.
Figure 4-50. Transition from legacy Ethernet to VLAN-aware Ethernet.
The shaded symbols are VLAN aware. The empty ones are not.
In this figure, VLAN-aware Ethernet cards generate tagged (i.e., 802.1Q) frames directly, and
VLAN does not help much until the switch knows which ports connect to machines on the gray
VLAN. Thus, the switch needs a table indexed by VLAN telling which ports to use and whether
they are VLAN aware or legacy.
When a legacy PC sends a frame to a VLAN-aware switch, the switch builds a new tagged
frame based on its knowledge of the sender's VLAN (using the port, MAC address, or IP
the addition of a pair of 2-byte fields. The first one is the VLAN protocol ID. It always has the
The second 2-byte field contains three subfields. The main one is the VLAN identifier,
occupying the low-order 12 bits. This is what the whole thing is about—which VLAN does the
(although in all fairness, IP has had a similar field for a quarter of a century and nobody ever
The last bit, CFI (Canonical Format Indicator) should have been called the CEI (Corporate Ego
Indicator). It was originally intended to indicate little-endian MAC addresses versus big-endian
MAC addresses, but that use got lost in other controversies. Its presence now indicates that
the payload contains a freeze-dried 802.5 frame that is hoping to find another 802.5 LAN at
regular politics: if you vote for my bit, I will vote for your bit.
As we mentioned above, when a tagged frame arrives at a VLAN-aware switch, the switch uses
the VLAN ID as an index into a table to find out which ports to send it on. But where does the
Fortunately, VLAN-aware bridges can also autoconfigure themselves based on observing the
tags that come by. If a frame tagged as VLAN 4 comes in on port 3, then apparently some
machine on port 3 is on VLAN 4. The 802.1Q standard explains how to build the tables
Before leaving the subject of VLAN routing, it is worth making one last observation. Many
use it. Numerous channel allocation algorithms have been devised. A summary of some of the
The simplest allocation schemes are FDM and TDM. These are efficient when the number of
When the number of stations is large and variable or the traffic is fairly bursty, FDM and TDM
are poor choices. The ALOHA protocol, with and without slotting, has been proposed as an
alternative. ALOHA and its many variants and derivatives have been widely discussed,
A class of protocols that eliminates contention altogether, or at least reduce it considerably, is
hidden stations, so CSMA does not work. One class of solutions, typified by MACA and MACAW,
attempts to stimulate transmissions around the destination, to make CSMA work better.
Frequency hopping spread spectrum and direct sequence spread spectrum are also used. IEEE
802.11 combines CSMA and MACAW to produce CSMA/CA.
Ethernet is the dominant form of local area networking. It uses CSMA/CD for channel
and a multichannel FDM system. It can operate with a base station in each cell, but it can also
operate without one. The protocol is a variant of MACAW, with virtual carrier sensing.
spectrum in the ISM band. Due to the expected noise level of many environments and need for
A new development in the LAN interconnection world is the VLAN, which separates the logical
topology of the LANs from their physical topology. A new format for Ethernet frames (802.1Q)
2. A group of N stations share a 56-kbps pure ALOHA channel. Each station outputs a
value of N?
3. Consider the delay of pure ALOHA versus slotted ALOHA at low load. Which one is less?
ALOHA channel. The average station makes 18 requests/hour. A slot is 125 µsec. What
5. A large population of ALOHA users manages to generate 50 requests/sec, including
6. Measurements of a slotted ALOHA channel with an infinite number of users show that
a. (a) What is the channel load, G?
7. In an infinite-population slotted ALOHA system, the mean number of slots a station
transmitting its frame over a LAN that uses
9. A LAN uses Mok and Ward's version of binary countdown. At a certain instant, the ten
11. A collection of 2n stations uses the adaptive tree walk protocol to arbitrate access to a
12. The wireless LANs that we studied used protocols such as MACA instead of using
CSMA/CD. Under what conditions, if any, would it be possible to use CSMA/CD instead?
13. What properties do the WDMA and GSM channel access protocols have in common? See
Chap. 2 for GSM.
14. Six stations, A through F, communicate using the MACA protocol. Is it possible that two
15. A seven-story office building has 15 adjacent offices per floor. Each office contains a
b. (b) an 802.3 LAN?
19. A 1-km-long, 10-Mbps CSMA/CD LAN (not 802.3) has a propagation speed of 200
20. Two CSMA/CD stations are each trying to transmit long (multiframe) files. After each
21. Consider building a CSMA/CD network running at 1 Gbps over a 1-km cable with no
22. An IP packet to be transmitted by Ethernet is 60 bytes long, including all its headers. If
LLC is not in use, is padding needed in the Ethernet frame, and if so, how many bytes?
25. The 1000Base-SX specification states that the clock shall run at 1250 MHz, even though
28. In Fig. 4-27, four stations, A, B, C, and D, are shown. Which of the last two stations do
you think is closest to A and why?
29. Suppose that an 11-Mbps 802.11b LAN is transmitting 64-byte frames back-to-back
31. IEEE 802.16 supports four service classes. Which service class is the best choice for
on LAN 1, c is on LAN 2, and d is on LAN 8. Initially, hash tables in all bridges are
d. (d) d moves to LAN 6.
38. One consequence of using a spanning tree to forward frames in an extended LAN is that
40. A switch designed for use with fast Ethernet has a backplane that can move 10 Gbps.
41. Consider the network of Fig. 4-49(a). If machine J were to suddenly become white,
45. In Fig. 4-50 the switch in the legacy end domain on the right is a VLAN-aware switch.
46. Write a program to simulate the behavior of the CSMA/CD protocol over Ethernet when
there are N stations ready to transmit while a frame is being transmitted. Your program
IP, although wireless networks will also be addressed.
outside the oval. Host H1 is directly connected to one of the carrier's routers, A, by a leased
line. In contrast, H2 is on a LAN with a router, F, owned and operated by the customer. This
router also has a leased line to the carrier's equipment. We have shown F as being outside the
This equipment is used as follows. A host with a packet to send transmits it to the nearest
router, either on its own LAN or over a point-to-point link to the carrier. The packet is stored
connectionless, with primitives SEND PACKET and RECEIVE PACKET and little else. In
These two camps are best exemplified by the Internet and ATM. The Internet offers
connectionless network-layer service; ATM networks offer connection-oriented network-layer
sent. This connection is called a VC (virtual circuit), in analogy with the physical circuits set
to router A using some point-to-point protocol, for example, PPP. At this point the carrier takes
for that destination. Only directly-connected lines can be used. For example, in Fig. 5-2, A has
only two outgoing lines—to B and C—so every incoming packet must be sent to one of these
routers, even if the ultimate destination is some other router. A's initial routing table is shown
As they arrived at A, packets 1, 2, and 3 were stored briefly (to verify their checksums). Then
each was forwarded to C according to A's table. Packet 1 was then forwarded to E and then to
F. When it got to F, it was encapsulated in a data link layer frame and sent to H2 over the LAN.
However, something different happened to packet 4. When it got to A it was sent to router B,
even though it is also destined for F. For some reason, A decided to send packet 4 via a
the ACE path and updated its routing table, as shown under the label ''later.'' The algorithm
A's table says that if a packet bearing connection identifier 1 comes in from H1, it is to be sent
to router C and given connection identifier 1. Similarly, the first entry at C routes the packet to
E, also with connection identifier 1.
Note that we have a conflict here because although A can easily distinguish connection 1
packets from H1 from connection 1 packets from H3, C cannot do this. For this reason, A
Yet another issue is the amount of table space required in router memory. A datagram subnet
congestion within the subnet because resources (e.g., buffers, bandwidth, and CPU cycles) can
never converge to equilibrium, no matter how long they run. A stable algorithm reaches
example of this conflict, look at Fig. 5-5. Suppose that there is enough traffic between A and
A', between B and B', and between C and C' to saturate the horizontal links. To maximize the
total flow, the X to X' traffic should be shut off altogether. Unfortunately, X and X' may not see
of the current traffic and topology. Instead, the choice of the route to use to get from I to J
(for all I and J) is computed in advance, off-line, and downloaded to the routers when the
routes (e.g., every ∆T sec, when the load changes or when the topology changes), and what
known as the optimality principle. It states that if router J is on the optimal path from router
I to router K, then the optimal path from J to K also falls along the same route. To see this,
call the part of the route from I to Jr1 and the rest of the route r2. If a route better than r2
existed from J to K, it could be concatenated with r1 to improve the route from I to K,
Figure 5-6. (a) A subnet. (b) A sink tree for router B.
length is the number of hops. Using this metric, the paths ABC and ABE in Fig. 5-7 are equally
long. Another metric is the geographic distance in kilometers, in which case ABC is clearly
much longer than ABE (assuming the figure is drawn to scale).
from A to D. The arrows indicate the working node.
reflecting better paths. A label may be either tentative or permanent. Initially, all labels are
from A to D. We start out by marking node A as permanent, indicated by a filled-in circle. Then
we examine, in turn, each of the nodes adjacent to A (the working node), relabeling each one
with the distance to A. Whenever a node is relabeled, we also label it with the node from which
the nodes adjacent to A, we examine all the tentatively labeled nodes in the whole graph and
We now start at B and examine all nodes adjacent to it. If the sum of the label on B and the
distance from B to the node being considered is less than the label on that node, we have a
To see why the algorithm works, look at Fig. 5-7(c). At that point we have just made E
permanent. Suppose that there were a shorter path than ABE, say AXYZE. There are two
possibilities: either node Z has already been made permanent, or it has not been. If it has,
then E has already been probed (on the round following the one when Z was made
permanent), so the AXYZE path has not escaped our attention and thus cannot be a shorter
Now consider the case where Z is still tentatively labeled. Either the label at Z is greater than
or equal to that at E, in which case AXYZE cannot be a shorter path than ABE, or it is less than
that of E, in which case Z and not E will become permanent first, allowing E to be probed from
Z.
A variation of flooding that is slightly more practical is selective flooding.In this algorithm
property. A fourth possible use of flooding is as a metric against which other routing
original ARPANET routing algorithm and was also used in the Internet under the name RIP.
queue. If the metric is delay, the router can measure it directly with special ECHO packets that
each of its neighbors. Once every T msec each router sends to each neighbor a list of its
Imagine that one of these tables has just come in from neighbor X, with Xi being X's estimate
of how long it takes to get to router i. If the router knows that the delay to X is m msec, it also
knows that it can reach router i via X in Xi + m msec. By performing this calculation for each
of part (b) show the delay vectors received from the neighbors of router J. A claims to have a
12-msec delay to B, a 25-msec delay to C, a 40-msec delay to D, etc. Suppose that J has
measured or estimated its delay to its neighbors, A, I, H, and K as 8, 10, 12, and 6 msec,
Figure 5-9. (a) A subnet. (b) Input from A, I, H, K, and the new routing
table for J.
Consider how J computes its new route to router G. It knows that it can get to A in 8 msec,
and A claims to be able to get to G in 18 msec, so J knows it can count on a delay of 26 msec
to G if it forwards packets bound for G to A. Similarly, it computes the delay to G via I, H, and
K as 41 (31 + 10), 18 (6 + 12), and 37 (31 + 6) msec, respectively. The best of these values
is 18, so it makes an entry in its routing table that the delay to G is 18 msec and that the
route to use is via H. The same calculation is performed for all the other destinations, with the
news, but leisurely to bad news. Consider a router whose best route to destination X is large.
If on the next exchange neighbor A suddenly reports a short delay to X, the router just
switches over to using the line to A to send traffic to X. In one vector exchange, the good news
where the delay metric is the number of hops. Suppose A is down initially and all the other
routers know this. In other words, they have all recorded the delay to A as infinity.
When A comes up, the other routers learn about it via the vector exchanges. For simplicity we
vector exchange at all routers simultaneously. At the time of the first exchange, B learns that
its left neighbor has zero delay to A. B now makes an entry in its routing table that A is one
hop away to the left. All the other routers still think that A is down. At this point, the routing
table entries for A are as shown in the second row of Fig. 5-10(a). On the next exchange, C
learns that B has a path of length 1 to A, so it updates its routing table to indicate a path of
length 2, but D and E do not hear the good news until later. Clearly, the good news is
spreading at the rate of one hop per exchange. In a subnet whose longest path is of length N
hops, within N exchanges everyone will know about newly-revived lines and routers.
up. Routers B, C, D, and E have distances to A of 1, 2, 3, and 4, respectively. Suddenly A goes
down, or alternatively, the line between A and B is cut, which is effectively the same thing
from B's point of view.
At the first packet exchange, B does not hear anything from A. Fortunately, C says: Do not
worry; I have a path to A of length 2. Little does B know that C's path runs through B itself.
For all B knows, C might have ten lines all with separate paths to A of length 2. As a result, B
thinks it can reach A via C, with a path length of 3. D and E do not update their entries for A
On the second exchange, C notices that each of its neighbors claims to have a path to A of
length 3. It picks one of the them at random and makes its new distance to A 4, as shown in
horizon with poisoned reverse in RFC 1058), but none of these work well in general. The core
of the problem is that when X tells Y that it has a path somewhere, Y has no way of knowing
Distance vector routing was used in the ARPANET until 1979, when it was replaced by link
goal by sending a special HELLO packet on each point-to-point line. The router on the other
because when a distant router later hears that three routers are all connected to F, it is
essential that it can determine whether all three mean the same F.
When two or more routers are connected by a LAN, the situation is slightly more complicated.
Fig. 5-11(a) illustrates a LAN to which three routers, A, C, and F, are directly connected. Each
Figure 5-11. (a) Nine routers and a LAN. (b) A graph model of (a).
One way to model the LAN is to consider it as a node itself, as shown in Fig. 5-11(b). Here we
have introduced a new, artificial node, N, to which A, C, and F are connected. The fact that it is
possible to go from A to C on the LAN is represented by the path ANC here.
to send over the line a special ECHO packet that the other side is required to send back
factor the load in, the round-trip timer must be started when the ECHO packet is queued. To
ignore the load, the timer should be started when the ECHO packet reaches the front of the
two lines, CF and EI.
Figure 5-12. A subnet in which the East and West parts are connected
Suppose that most of the traffic between East and West is using line CF, and as a result, this
calculation will make EI more attractive. After the new routing tables have been installed, most
of the East-West traffic will now go over EI, overloading this line. Consequently, in the next
update, CF will appear to be the shortest path. As a result, the routing tables may oscillate
Figure 5-13. (a) A subnet. (b) The link state packets for this subnet.
The data structure used by router B for the subnet shown in Fig. 5-13(a) is depicted in Fig. 514. Each row here corresponds to a recently-arrived, but as yet not fully-processed, link state
data. In addition, there are send and acknowledgement flags for each of B's three lines (to A,
C, and F, respectively). The send flags mean that the packet must be sent on the indicated
Figure 5-14. The packet buffer for router B in Fig. 5-13.
In Fig. 5-14, the link state packet from A arrives directly, so it must be sent to C and F and
acknowledged to A, as indicated by the flag bits. Similarly, the packet from F has to be
forwarded to A and C and acknowledged to F.
However, the situation with the third packet, from E, is different. It arrived twice, once via EAB
and once via EFB. Consequently, it has to be sent only to C but acknowledged to both A and F,
example, if a copy of C's state arrives from F before the fourth entry in the table has been
acknowledged to F but not sent there.
protocols using it are in order. The OSPF protocol, which is widely used in the Internet, uses a
link state algorithm. We will describe OSPF in Sec. 5.6.4.
Another link state protocol is IS-IS (Intermediate System-Intermediate System), which
was designed for DECnet and later adopted by ISO for use with its connectionless network
layer protocol, CLNP. Since then it has been modified to handle other protocols as well, most
notably, IP. IS-IS is used in some Internet backbones (including the old NSFNET backbone)
and in some digital cellular systems such as CDPD. Novell NetWare uses a minor variant of ISIS (NLSP) for routing IPX packets.
Basically IS-IS distributes a picture of the router topology, from which the shortest paths are
it can reach directly. These addresses can be IP, IPX, AppleTalk, or any other addresses. IS-IS
Many of the innovations designed for IS-IS were adopted by OSPF (OSPF was designed several
years after IS-IS). These include a self-stabilizing method of flooding link state updates, the
concept of a designated router on a LAN, and the method of computing and supporting path
splitting and multiple metrics. As a consequence, there is very little difference between IS-IS
and OSPF. The most important difference is that IS-IS is encoded in such a way that it is easy
feature OSPF does not have. This advantage is especially valuable in large multiprotocol
memory consumed by ever-increasing tables, but more CPU time is needed to scan them and
Kleinrock (1979) discovered that the optimal number of levels for an N router subnet is ln N,
requiring a total of e ln N entries per router. They have also shown that the increase in
A third algorithm is multidestination routing. If this method is used, each packet contains
A fourth broadcast algorithm makes explicit use of the sink tree for the router initiating the
broadcast—or any other convenient spanning tree for that matter. A spanning tree is a
shows a sink tree for router I of that subnet, and part (c) shows how the reverse path
algorithm works. On the first hop, I sends packets to F, H, J, and N, as indicated by the second
row of the tree. Each of these packets arrives on the preferred path to I (assuming that the
arrive on the preferred path (at C, E, and K); the others are duplicates. After five hops and 24
Figure 5-16. Reverse path forwarding. (a) A subnet. (b) A sink tree.
that belong to one or both of these groups, as indicated in the figure. A spanning tree for the
Figure 5-17. (a) A network. (b) A spanning tree for the leftmost
router. (c) A multicast tree for group 1. (d) A multicast tree for group
responds with a PRUNE message, telling the sender not to send it any more multicasts for that
messages on all its lines, it, too, can respond with a PRUNE message. In this way, the subnet
have a WAN consisting of routers and hosts. Connected to the WAN are LANs, MANs, and
Figure 5-18. A WAN to which LANs, MANs, and wireless cells are
them areas, where an area is typically a LAN or wireless cell. Each area has one or more
When a new host enters an area, either by connecting to it (e.g., plugging into the LAN) or just
address. A newly-arrived mobile host may wait for one of these messages, but if none
When a packet is sent to a mobile host, it is routed to the host's home LAN because that is
States in New York. Packets sent to the mobile host on its home LAN in New York are
A fleet of ships at sea.
A gathering of people with notebook computers in an area lacking 802.11.
fixed topologies, fixed and known neighbors, fixed relationship between IP address and
A variety of routing algorithms for ad hoc networks have been proposed. One of the more
interesting ones is the AODV (Ad hoc On-demand Distance Vector) routing algorithm
transmitter than the other, it is possible that A is connected to B but B is not connected to A.
node A wants to send a packet to node I. The AODV algorithm maintains a table at each node,
send packets to in order to reach the destination. Suppose that A looks in its table and does
not find an entry for I. It now has to discover a route to I. This property of discovering routes
Figure 5-20. (a) Range of A's broadcast. (b) After B and D have
received A's broadcast. (c) After C, F, and G have received A's
broadcast. (d) After E, H, and I have received A's broadcast. The
To locate I, A constructs a special ROUTE REQUEST packet and broadcasts it. The packet
reaches B and D, as illustrated in Fig. 5-20(a). In fact, the reason B and D are connected to A
in the graph is that they can receive communication from A. F, for example, is not shown with
an arc to A because it cannot receive A's radio signal. Thus, F is not connected to A.
The format of the ROUTE REQUEST packet is shown in Fig. 5-21. It contains the source and
destination addresses, typically their IP addresses, which identify who is looking for whom. It
also contains a Request ID, which is a local counter maintained separately by each node and
incremented each time a ROUTE REQUEST is broadcast. Together, the Source address and
Request ID fields uniquely identify the ROUTE REQUEST packet to allow nodes to discard any
Figure 5-21. Format of a ROUTE REQUEST packet.
In addition to the Request ID counter, each node also maintains a second sequence counter
incremented whenever a ROUTE REQUEST is sent (or a reply to someone else's ROUTE
REQUEST). It functions a little bit like a clock and is used to tell new routes from old routes.
The fourth field of Fig. 5-21 is A's sequence counter; the fifth field is the most recent value of
I's sequence number that A has seen (0 if it has never seen it). The use of these fields will
When a ROUTE REQUEST packet arrives at a node (B and D in this case), it is processed in the
1. The (Source address, Request ID) pair is looked up in a local history table to see if this
destination is known, a ROUTE REPLY packet is sent back to the source telling it how to
number in the ROUTE REQUEST packet. If it is less, the stored route is older than the
count field and rebroadcasts the ROUTE REQUEST packet. It also extracts the data from
later. The arrows in Fig. 5-20 are used for building the reverse route. A timer is also
Neither B nor D knows where I is, so each of them creates a reverse route entry pointing back
to A, as shown by the arrows in Fig. 5-20, and broadcasts the packet with Hop count set to 1.
The broadcast from B reaches C and D. C makes an entry for it in its reverse route table and
rebroadcasts it. In contrast, D rejects it as a duplicate. Similarly, D's broadcast is rejected by
B. However, D's broadcast is accepted by F and G and stored, as shown in Fig. 5-20(c). After
E, H, and I receive the broadcast, the ROUTE REQUEST finally reaches a destination that
knows where I is, namely, I itself, as illustrated in Fig. 5-20(d). Note that although we have
In response to the incoming request, I builds a ROUTE REPLY packet, as shown in Fig. 5-22.
unicast to the node that the ROUTE REQUEST packet came from, in this case, G. It then
follows the reverse path to D and finally to A. At each node, Hop count is incremented so the
node can see how far from the destination (I) it is.
Figure 5-22. Format of a ROUTE REPLY packet.
routing table as a route to I if one or more of the following three conditions are met:
1. No route to I is known.
2. The sequence number for I in the ROUTE REPLY packet is greater than the value in the
In this way, all the nodes on the reverse route learn the route to I for free, as a byproduct of
A's route discovery. Nodes that got the original REQUEST ROUTE packet but were not on the
reverse path (B, C, E, F, and H in this example) discard the reverse route table entry when the
close by. The number of broadcasts can be reduced as follows. The IP packet's Time to live is
broadcasts a ROUTE REQUEST packet with Time to live set to 1. If no response comes back
example, in Fig. 5-20, if G is switched off, A will not realize that the route it was using to I
(ADGI) is no longer valid. The algorithm needs to be able to deal with this. Periodically, each
each node, N, keeps track of its neighbors that have fed it a packet for that destination during
the last ∆T seconds. These are called N's active neighbors for that destination. N does this by
number, and the list of active neighbors for that destination. A possible routing table for node
D in our example topology is shown in Fig. 5-23(a).
Figure 5-23. (a) D's routing table before G goes down. (b) The graph
after G has gone down.
When any of N's neighbors becomes unreachable, it checks its routing table to see which
neighbors are informed that their route via N is now invalid and must be purged from their
As an example of route maintenance, consider our previous example, but now with G suddenly
switched off. The changed topology is illustrated in Fig. 5-23(b). When D discovers that G is
gone, it looks at its routing table and sees that G was used on routes to E, G, and I. The union
of the active neighbors for these destinations is the set {A, B}. In other words, A and B
depend on G for some of their routes, so they have to be informed that these routes no longer
work. D tells them by sending them packets that cause them to update their own routing
tables accordingly. D also purges the entries for E, G, and I from its routing table.
It may not have been obvious from our description, but a critical difference between AODV and
AODV is also capable of doing broadcast and multicast routing. For details, consult (Perkins
and Royer, 2001). Ad hoc routing is a red-hot research area. A great deal has been published
on the topic. A few of the papers include (Chen et al., 2002; Hu and Johnson, 2001; Li et al.,
A relatively new phenomenon is peer-to-peer networks, in which a large number of people,
programs, files, and so on that other users might want to read. Each item has an ASCII string
naming it. A potential user knows just the ASCII string and wants to find out if one or more
people have copies and, if so, what their IP addresses are.
Chord (Dabek et al., 2001a; and Stoica et al., 2001). A simplified explanation of how it works
use by other users. Each user node has an IP address that can be hashed to an m-bit number
using a hash function, hash. Chord uses SHA-1 for hash. SHA-1 is used in cryptography; we
as argument and produces a highly-random 160-bit number. Thus, we can convert any IP
Figure 5-24. (a) A set of 32 node identifiers arranged in a circle. The
hash (i.e., SHA-1) to generate a 160-bit number, called the key. Thus, to convert name (the
ASCII name of the record) to its key, we use key = hash(name). This computation is just a
it available to everyone, he first builds a tuple consisting of (name, my-IP-address) and then
(key) to find the IP address of the node storing its index tuples. The first step is easy; the
second one is not. To make it possible to find the IP address of the node corresponding to a
the IP address of its successor node along the node identifier circle. For example, in Fig. 5-24,
containing its IP address and the key it is looking for. The packet is propagated around the ring
whose IP address it has.
As a first optimization, each node could hold the IP addresses of both its successor and its
Each of the entries has two fields: start and the IP address of successor(start), as shown for
Note that each node stores the IP addresses of a relatively small number of nodes and that
the closest predecessor of key. A request is then sent directly to the IP address in that finger
node 4's IP address.
forwarded to the IP address of 9's entry, namely, that of node 12. Node 12 sees that 14 falls
between it and its successor (15), so it returns the IP address of node 15.
preceding 16 and finds 14, which yields the IP address of node 15. A query is then sent there.
Node 15 observes that 16 lies between it and its successor (20), so it returns the IP address of
existing node and ask it to look up the IP address of successor (r) for it. The new node then
applications, and research is ongoing. A different peer-to-peer system, Pastry, and its
2001b). A third peer-to-peer system, Freenet, is discussed in (Clarke et al., 2002). A fourth
A variety of metrics can be used to monitor the subnet for congestion. Chief among these are
must be adjusted carefully. If every time two packets arrive in a row, a router yells STOP and
every time a router is idle for 20 µsec, it yells GO, the system will oscillate wildly and never
concerned with how fast a sender times out and what it transmits upon timeout. A jumpy
up to piggyback onto reverse traffic, extra timeouts and retransmissions may result. A tight
when there is no space. A good policy can help alleviate congestion and a bad one can make it
A good routing algorithm can help avoid congestion by spreading the traffic over all the lines,
Figure 5-27. (a) A congested subnet. (b) A redrawn subnet that
eliminates the congestion. A virtual circuit from A to B is also shown.
Suppose that a host attached to router A wants to set up a connection to a host attached to
router B. Normally, this connection would pass through one of the congested routers. To avoid
the subnet is congested. A disadvantage of doing it all the time is that it tends to waste
The old DECNET architecture signaled the warning state by setting a special bit in the packet's
specified destination by X percent. Since other packets aimed at the same destination are
(router A in Fig. 5-28) that is sending traffic to a host in New York (router D in Fig. 5-28) at
Figure 5-28. (a) A choke packet that affects only the source. (b) A
as shown in the sequence of Fig. 5-28(b). Here, as soon as the choke packet reaches F, F is
required to reduce the flow to D. Doing so will require F to devote more buffers to the flow,
since the source is still sending away at full blast, but it gives D immediate relief, like a
headache remedy in a television commercial. In the next step, the choke packet reaches E,
which tells E to reduce the flow to F. This action puts a greater demand on E's buffers but
gives F immediate relief. Finally, the choke packet reaches A and the flow genuinely slows
A router drowning in packets can just pick packets at random to drop, but usually it can do
A step above this in intelligence requires cooperation from the senders. For many applications,
transmitting a document containing ASCII text and pictures. Losing a line of pixels in some
than VERY IMPORTANT— NEVER, EVER DISCARD, nobody will do it.
discarding packets before all the buffer space is really exhausted. A popular algorithm for
doing this is called RED (Random Early Detection) (Floyd and Jacobson, 1993). In some
transport protocols (including TCP), the response to lost packets is for the source to slow
down. The reasoning behind this logic is that TCP was designed for wired networks and wired
packet, as we have described. A problem with that approach is that it puts even more load on
the already congested network. A different strategy is to just discard the selected packet and
A stream of packets from a source to a destination is called a flow.Ina connection-oriented
ATM networks classify flows in four broad categories with respect to their QoS demands as
Figure 5-32. (a) A leaky bucket with water. (b) A leaky bucket with
When the packets are all the same size (e.g., ATM cells), this algorithm can be used as
MB/sec, we could use a leaky bucket with ρ=2 MB/sec and a capacity, C, of 1 MB. This means
that bursts of up to 1 MB can be handled without data loss and that such bursts are spread out
In Fig. 5-33(a) we see the input to the leaky bucket running at 25 MB/sec for 40 msec. In Fig.
5-33(b) we see the output draining out at a uniform rate of 2 MB/sec for 500 msec.
bucket. Output from a token bucket with capacities of (c) 250 KB, (d)
500 KB, and (e) 750 KB. (f) Output from a 500KB token bucket feeding
a 10-MB/sec leaky bucket.
leaky bucket holds tokens, generated by a clock at the rate of one token every ∆T sec. In Fig.
packet, but k bytes. A packet can only be transmitted if enough tokens are available to cover
The counter is incremented by one every ∆T and decremented by one whenever a packet is
counter is incremented by k bytes every ∆T and decremented by the length of each packet
Look at Fig. 5-33(c) for example. Here we have a token bucket with a capacity of 250 KB.
Tokens arrive at a rate allowing output at 2 MB/sec. Assuming the token bucket is full when
the 1-MB burst arrives, the bucket can drain at the full 25 MB/sec for about 11 msec. Then it
has to cut back to 2 MB/sec until the entire input burst has been sent.
Calculating the length of the maximum rate burst is slightly tricky. It is not just 1 MB divided
by 25 MB/sec because while the burst is being output, more tokens arrive. If we call the burst
length S sec, the token bucket capacity C bytes, the token arrival rate ρ bytes/sec, and the
maximum output rate M bytes/sec, we see that an output burst contains a maximum of C + ρS
bytes. We also know that the number of bytes in a maximum-speed burst of length S seconds
is MS. Hence we have
We can solve this equation to get S = C/(M - ρ). For our parameters of C = 250 KB, M = 25
MB/sec, and ρ=2 MB/sec, we get a burst time of about 11 msec. Figure 5-33(d) and Fig. 533(e) show the token bucket for capacities of 500 KB and 750 KB, respectively.
A potential problem with the token bucket algorithm is that it allows large bursts again, even
though the maximum burst interval can be regulated by careful selection of ρ and M. It is
of the network. Figure 5-33(f) shows the output for a 500-KB token bucket followed by a 10MB/sec leaky bucket.
3. CPU cycles.
A second resource that is often in short supply is buffer space. When a packet arrives, it is
then has to copy it to a buffer in RAM and queue that buffer for transmission on the chosen
Finally, CPU cycles are also a scarce resource. It takes router CPU time to process a packet, so
a router can process only a certain number of packets per second. Making sure that the CPU is
periods due to statistical fluctuations in the load. If the CPU needs every single cycle to get its
rate of λ packets/sec. The CPU time required by each one is also random, with a mean
delay experienced by a packet, T, is
where ρ = λ/µ is the CPU utilization. The first factor, 1/µ, is what the service time would be in
may know about their bandwidth requirements, few know about buffers or CPU cycles, so at
specific parameters that can be negotiated. A set of such parameters is called a flow
is 1 Mbps and the Token bucket size is 500 KB, the bucket can fill continuously for 4 sec before
transport and network layer headers (e.g., TCP and IP). The minimum size is important
because processing each packet takes some fixed time, no matter how short. A router may be
prepared to handle 10,000 packets/sec of 1 KB each, but not be prepared to handle 100,000
router can process 100,000 packets/sec. If it is offered a flow of 1 MB/sec with minimum and
packets/sec from that flow. In that case, it must reserve 2% of its CPU for that flow, preferably
its CPU (which implies a factor of two delay, and it is already 49% full, then this flow must be
states that it needs a Token bucket rate of 5 MB/sec but packets can vary from 50 bytes to
minimum packet size of 1000 bytes, the 5 MB/sec flow might have been accepted.
destination over the best path. A different approach that has been proposed to provide a
way to split traffic over multiple routes is to use locally-available information. A simple method
Figure 5-36. (a) A router with five packets queued for line O. (b)
the packet on line A is sent. Then goes the first byte of the packet on line B, and so on. The
first packet to finish is C, after eight ticks. The sorted order is given in Fig. 5-36(b). In the
absence of new arrivals, the packets will be sent in the order listed, from C to A.
Between 1995 and 1997, IETF put a lot of effort into devising an architecture for streaming
stations broadcasting their programs as streams of IP packets to many receivers at various
RSVP—The Resource reSerVation Protocol
The main IETF protocol for the integrated services architecture is RSVP. It is described in RFC
for sending the data. RSVP allows multiple senders to transmit to multiple groups of receivers,
covering all group members. The routing algorithm is not part of RSVP. The only difference
Figure 5-37. (a) A network. (b) The multicast spanning tree for host 1.
host 2, so the user can watch two television programs at once. A second path is reserved, as
illustrated in Fig. 5-38(b). Note that two separate channels are needed from host 3 to router E
also makes a reservation. First, dedicated bandwidth is reserved as far as router H. However,
up the flows. As a consequence, few implementations of RSVP or anything like it exist yet.
For these reasons, IETF has also devised a simpler approach to quality of service, one that can
quality of service. IETF has standardized an architecture for it, called differentiated services,
Differentiated services (DS) can be offered by a set of routers forming an administrative
domain (e.g., an ISP or a telco). The administration defines a set of service classes with
corresponding forwarding rules. If a customer signs up for DS, customer packets entering the
to N premium packets per month for a fixed additional monthly fee. Note that this scheme
negotiation for each flow, as with integrated services. This makes DS relatively easy to
between subnets run by different operators, IETF is working on defining network-independent
is described in RFC 3246.
subnet as though no other packets were present. A symbolic representation of this ''two-tube''
A somewhat more elaborate scheme for managing the service classes is called assured
forwarding. It is described in RFC 2597. It specifies that there shall be four priority classes,
Figure 5-40. A possible implementation of the data flow for assured
Step 2 is to mark the packets according to their class. A header field is needed for this
purpose. Fortunately, an 8-bit Type of service field is available in the IP header, as we will see
shortly. RFC 2597 specifies that six of these bits are to be used for the service class, leaving
5.4.5 Label Switching and MPLS
While IETF was working out integrated services and differentiated services, several router
Of course, labeling flows this way comes perilously close to virtual circuits. X.25, ATM, frame
tag switching. Eventually, IETF began to standardize the idea under the name MPLS
(MultiProtocol Label Switching). We will call it MPLS below. It is described in RFC 3031 and
The first problem is where to put the label. Since IP packets were not designed for virtual
circuits, there is no field available for virtual-circuit numbers within the IP header. For this
reason, a new MPLS header had to be added in front of the IP header. On a router-to-router
line using PPP as the framing protocol, the frame format, including the PPP, MPLS, IP, and TCP
headers, is as shown in Fig. 5-41. In a sense, MPLS is thus layer 2.5.
Figure 5-41. Transmitting a TCP segment using IP, MPLS, and PPP.
The generic MPLS header has four fields, the most important of which is the Label field, which
holds the index. The QoS field indicates the class of service. The S field relates to stacking
Because the MPLS headers are not part of the network layer packet or the data link layer
frame, MPLS is to a large extent independent of both layers. Among other things, this property
means it is possible to build MPLS switches that can forward both IP packets and ATM cells,
depending on what shows up. This feature is where the ''multiprotocol'' in the name MPLS
When an MPLS-enhanced packet (or cell) arrives at an MPLS-capable router, the label is used
MPLS uses the same technique.
routers to group multiple flows that end at a particular router or LAN and use a single label for
FEC (Forwarding Equivalence Class). This class covers not only where the packets are
distinguish them at the final destination. With MPLS, the packets still contain their final
One major difference between MPLS and conventional VC designs is how the forwarding table
forwarding table entries. MPLS does not work that way because there is no setup phase for
technique called colored threads. The backward propagation of an FEC can be compared to
used on networks in which the underlying transport is ATM (such as much of the telephone
The other way, used on networks not based on ATM, is the control-driven approach. It has
which routes it is the final destination (e.g., which hosts are on its LAN). It then creates one or
MPLS can operate at multiple levels at once. At the highest level, each carrier can be regarded
destination. This path can use MPLS. However, within each carrier's network, MPLS can also be
with it. The S bit in Fig. 5-41 allows a router removing a label to know if there are any
Although the basic ideas behind MPLS are straightforward, the details are extremely
personal computers run TCP/IP. Many large businesses have mainframes running IBM's SNA. A
substantial number of telephone companies operate ATM networks. Some personal computer
LANs still use Novell NCP/IPX or AppleTalk. Finally, wireless is an up-and-coming area with a
the engineering department installing UNIX workstations running TCP/IP and the marketing
Third, different networks (e.g., ATM and wireless) have radically different technology, so it
As an example of how different networks might be connected, consider the example of Fig. 542. Here we see a corporate network with multiple locations tied together by a wide area ATM
network. At one of the locations, an FDDI optical backbone is used to connect an Ethernet, an
802.11 wireless LAN, and the corporate data center's SNA mainframe network.
Figure 5-42. A collection of interconnected networks.
accept frames, examine the MAC addresses, and forward the frames to a different network
while doing minor protocol translation in the process, for example, from Ethernet to FDDI or to
although packet translation is now increasingly rare. A router that can handle multiple
connections. For example, a transport gateway could allow packets to flow between a TCP
network and an SNA network, which has a different transport protocol, by essentially gluing a
TCP connection to an SNA connection.
example, gateways between Internet e-mail (RFC 822) and X.400 e-mail must parse the email messages and change various header fields.
S, wants to send a packet to the destination machine, D. These machines are on different
Ethernets, connected by a switch. S encapsulates the packet in a frame and sends it on its
way. The frame arrives at the switch, which then determines that the frame has to go to LAN 2
by looking at its MAC address. The switch just removes the frame from LAN 1 and deposits it
on LAN 2.
(e.g., an IP address) and looks up this address in its routing table. Based on this address, it
Ethernet frame and deposited onto LAN 2.
With a switch (or bridge), the entire frame is transported on the basis of its MAC address. With
relay, SNA, 802.16, and ATM still are). Then with the rapid acceptance of the Internet,
possible to build a bit pipe using, say, SNA, which terminates in a gateway, and have a TCP
datagrams from host 1 to host 2 are shown taking different routes through the internetwork. A
Figure 5-46. A connectionless internet.
A second, and more serious, problem is addressing. Imagine a simple case: a host on the
Internet is trying to send an IP packet to a host on an adjoining SNA network. The IP and SNA
addresses are different. One would need a mapping between IP and SNA addresses in both
directions. Furthermore, the concept of what is addressable is different. In IP, hosts (actually,
interface cards) have addresses. In SNA, entities other than hosts (e.g., hardware devices) can
approach is, in fact, what IP is—a packet designed to be carried through many networks. Of
A major advantage of the datagram approach to internetworking is that it can be used over
between. As an example, think of an international bank with a TCP/IP-based Ethernet in Paris,
a TCP/IP-based Ethernet in London, and a non-IP wide area network (e.g., ATM) in between,
The solution to this problem is a technique called tunneling. To send an IP packet to host 2,
host 1 constructs the packet containing the IP address of host 2, inserts it into an Ethernet
multiprotocol router gets the frame, it removes the IP packet, inserts it in the payload field of
the WAN network layer packet, and addresses the latter to the WAN address of the London
multiprotocol router. When it gets there, the London router removes the IP packet and sends it
The WAN can be seen as a big tunnel extending from one multiprotocol router to the other.
The IP packet just travels from one end of the tunnel to the other, snug in its nice box. It does
not have to worry about dealing with the WAN at all. Neither do the hosts on either Ethernet.
Only the multiprotocol router has to understand IP and WAN packets. In effect, the entire
every other router connected to any network to which it is connected. For example, B in Fig. 549(a) can directly access A and C via network 2 and also D via network 3. This leads to the
Figure 5-49. (a) An internetwork. (b) A graph of the internetwork.
as an Autonomous System (AS).
A typical internet packet starts out on its LAN addressed to the local multiprotocol router (in
the MAC layer header). After it gets there, the network layer code decides which multiprotocol
maximum packet size they wish. Maximum payloads range from 48 bytes (ATM cells) to
65,515 bytes (IP packets), although the payload size in higher layers is often larger.
even aware that fragmentation has occurred. ATM networks, for example, have special
cells into packets. In the ATM world, fragmentation is called segmentation; the concept is the
fragments a disjoint route, some performance may be lost. A last problem is the overhead
series of small-packet networks. ATM requires transparent fragmentation.
Fig. 5-50(b). Recombination occurs only at the destination host. IP works this way.
A completely different (and better) numbering system is for the internetwork protocol to define
and discussed in RFC 1958, which is well worth reading (and should be mandatory for all
protocol designers—with a final exam at the end). This RFC draws heavily on ideas found in
providers. A sketch of this quasi-hierarchical organization is given in Fig. 5-52.
The glue that holds the whole Internet together is the network layer protocol, IP (Internet
internetworking in mind. A good way to think of the network layer is this. Its job is to provide
5.6.1 The IP Protocol
IP datagrams themselves. An IP datagram consists of a header part and a text part. The
bit of the Version field going first. (The SPARC is big endian; the Pentium is little-endian.) On
Since the header length is not constant, a field in the header, IHL, is provided to tell how long
flags, D, T, and R. The Precedence field was a priority, from 0 (normal) to 7 (network control
Eventually, IETF threw in the towel and changed the field slightly to accommodate
Next comes an unused bit and then two 1-bit fields. DF stands for Don't Fragment. It is an
putting the pieces back together again. For example, when a computer boots, its ROM might
the DF bit, the sender knows it will arrive in one piece, even if this means that the datagram
MF stands for More Fragments. All fragments except the last one have this bit set. It is needed
with it. The Protocol field tells it which transport process to give it to. TCP is one possibility,
but so are UDP and some others. The numbering of protocols is global across the entire
Internet. Protocols and other assigned numbers were formerly listed in RFC 1700, but
Figure 5-54. Some of the IP options.
sequence of IP addresses. The datagram is required to follow that exact route. It is most useful
The Record route option tells the routers along the path to append their IP address to the
are packets from Houston to Dallas visiting Tokyo first?''). When the ARPANET was first set up,
recording its 32-bit IP address, each router also records a 32-bit timestamp. This option, too,
5.6.2 IP Addresses
Every host and router on the Internet has an IP address, which encodes its network number
have the same IP address. All IP addresses are 32 bits long and are used in the Source
address and Destination address fields of IP packets. It is important to note that an IP address
networks, it must have two IP addresses. However, in practice, most hosts are on one network
and thus have one IP address.
For several decades, IP addresses were divided into the five categories listed in Fig. 5-55. This
Figure 5-55. IP address formats.
The class A, B, C, and D formats allow for up to 128 networks with 16 million hosts each,
year. Network numbers are managed by a nonprofit corporation called ICANN (Internet
Corporation for Assigned Names and Numbers) to avoid conflicts. In turn, ICANN has
delegated parts of the address space to various regional authorities, which then dole out IP
example, the 32-bit hexadecimal address C0290614 is written as 192.41.6.20. The lowest IP
Figure 5-56. Special IP addresses.
The IP address 0.0.0.0 is used by hosts when they are being booted. IP addresses with 0 as
typically a LAN. The addresses with a proper network number and all 1s in the host field allow
property of IP addressing can cause problems as networks grow. For example, consider a
university that started out with one class B network used by the Computer Science Dept. for
the computers on its Ethernet. A year later, the Electrical Engineering Dept. wanted to get on
the Internet, so they bought a repeater to extend the CS Ethernet to their building. As time
Ethernet was quickly reached. A different organization was required.
that a single class A, B, or C address refers to one network, not to a collection of LANs. As
a single network to the outside world. A typical campus network nowadays might look like that
of Fig. 5-57, with a main router connected to an ISP or regional network and numerous
router connected to the main router (possibly via a backbone LAN, but the nature of the
Figure 5-57. A campus network consisting of LANs for various
Instead, a different scheme was invented. Basically, instead of having a single class B address
Figure 5-58. A class B network subnetted into 64 subnets.
contacting ICANN or changing any external databases. In this example, the first subnet might
use IP addresses starting at 130.50.4.1; the second subnet might start at 130.50.8.1; the
To see how subnets work, it is necessary to explain how IP packets are processed at a router.
Each router has a table listing some number of (network, 0) IP addresses and some number of
(this-network, host) IP addresses. The first kind tells how to get to distant networks. The
When an IP packet arrives, its destination address is looked up in the routing table. If the
table. If it is a local host (e.g., on the router's LAN), it is sent directly to the destination. If the
changed is to have each router do a Boolean AND with the network's subnet mask to get rid of
CIDR—Classless InterDomain Routing
IP has been in heavy use for decades. It has worked extremely well, as demonstrated by the
exponential growth of the Internet. Unfortunately, IP is rapidly becoming a victim of its own
Internet is rapidly running out of IP addresses. In principle, over 2 billion addresses exist, but
them. In particular, the real villain is the class B network. For most organizations, a class A
network, with 16 million addresses is too big, and a class C network, with 256 addresses is too
small. A class B network, with 65,536, is just right. In Internet folklore, this situation is known
In reality, a class B address is far too large for most organizations. Studies have shown that
more than half of all class B networks have fewer than 50 hosts. A class C network would have
done the job, but no doubt every organization that asked for a class B address thought that
had class C networks use 10 bits instead of eight for the host number, allowing 1022 hosts per
network. Had this been the case, most organizations would have probably settled for a class C
network, and there would have been half a million of them (versus only 16,384 class B
It is hard to fault the Internet designers for not having provided more (and smaller) class B
research network connecting the major research universities in the U.S. (plus a very small
the time, someone no doubt said: ''The U.S. has about 2000 colleges and universities. Even if
However, if the split had allocated 20 bits to the class B network number, another problem
would have emerged: the routing table explosion. From the point of view of the routers, the IP
a million class C networks were in use, every router in the entire Internet would need a table
expensive for critical routers that keep the tables in static RAM on I/O boards. A more serious
example, having each IP address contain a country, state/province, city, network, and host
city. Unfortunately, this solution would require considerably more than 32 bits for IP addresses
implemented and that gave the Internet a bit of extra breathing room is CIDR (Classless
InterDomain Routing). The basic idea behind CIDR, which is described in RFC 1519, is to
allocate the remaining IP addresses in variable-sized blocks, without regard to the classes. If a
forwarding worked like this. When a packet arrived at a router, a copy of the IP address was
shifted right 28 bits to yield a 4-bit class number. A 16-way branch then sorted packets into A,
B, C, and D (if supported), with eight of the cases for class A, four of the cases for class B, two
of the cases for class C, and one each for D and E. The code for each class then masked off the
was then looked up in the A, B, or C table, usually by indexing for A and B networks and
hashing for C networks. Once the entry was found, the outgoing line could be looked up and
With CIDR, this simple algorithm no longer works. Instead, each routing table entry is
consisting of an array of (IP address, subnet mask, outgoing line) triples. When a packet
comes in, its destination IP address is first extracted. Then (conceptually) the routing table is
Complex algorithms have been devised to speed up the address matching process (RuizSanchez et al., 2001). Commercial routers use custom VLSI chips with these algorithms
Figure 5-59. A set of IP address assignments.
C: 11000010 00011000 00000000 00000000 11111111 11111111 11111000 00000000
E: 11000010 00011000 00001000 00000000 11111111 11111111 11111100 00000000
O: 11000010 00011000 00010000 00000000 11111111 11111111 11110000 00000000
If New York has a single line to London for all U.K. traffic, it can use an aggregated entry as
NAT—Network Address Translation
IP addresses are scarce. An ISP might have a /16 (formerly class B) address, giving it 65,534
dial-up connections, one way around the problem is to dynamically assign an IP address to a
computer when it calls up and logs in and take the IP address back when the session ends. In
enough for an ISP with several hundred thousand customers. When the session is terminated,
the IP address is reassigned to another caller. While this strategy works well for an ISP with a
have multiple computers connected by a LAN. Some computers are employee PCs; others may
be Web servers. Generally, there is a router on the LAN that is connected to the ISP by a
must have its own IP address all day long. In effect, the total number of computers owned by
all its business customers combined cannot exceed the number of IP addresses the ISP has.
For a /16 address, this limits the total number of computers to 65,534. For an ISP with tens of
To make matters worse, more and more home users are subscribing to ADSL or Internet over
cable. Two of the features of these services are (1) the user gets a permanent IP address and
(2) there is no connect charge (just a monthly flat rate charge), so many ADSL and cable
users just stay logged in permanently. This development just adds to the shortage of IP
addresses. Assigning IP addresses on-the-fly as is done with dial-up users is of no use because
the number of IP addresses in use at any one instant may be many times the number the ISP
And just to make it a bit more complicated, many ADSL and cable users have two or more
time using the single IP address their ISP has given them. The solution here is to connect all
the PCs via a LAN and put a router on it. From the ISP's point of view, the family is now the
The problem of running out of IP addresses is not a theoretical problem that might occur at
came in the form of NAT (Network Address Translation), which is described in RFC 3022
The basic idea behind NAT is to assign each company a single IP address (or at most, a small
number of them) for Internet traffic. Within the company, every computer gets a unique IP
company and goes to the ISP, an address translation takes place. To make this scheme
possible, three ranges of IP addresses have been declared as private. Companies may use
The operation of NAT is shown in Fig. 5-60. Within the company premises, every machine has
it passes through a NAT box that converts the internal IP source address, 10.0.0.1 in the
figure, to the company's true IP address, 198.60.42.12 in this example. The NAT box is often
possible to integrate the NAT box into the company's router.
Figure 5-60. Placement and operation of a NAT box.
Web server), it is naturally addressed to 198.60.42.12, so how does the NAT box know which
address to replace it with? Herein lies the problem with NAT. If there were a spare field in the
IP header, that field could be used to keep track of who the real sender was, but only 1 bit is
doing so would require changing the IP code on all the machines on the entire Internet to
What actually happened is as follows. The NAT designers observed that most IP packets carry
either TCP or UDP payloads. When we study TCP and UDP in Chap. 6, we will see that both of
TCP ports, but exactly the same story holds for UDP ports. The ports are 16-bit integers that
indicate where the TCP connection begins and ends. These ports provide the field needed to
make NAT work.
When a process wants to establish a TCP connection with a remote process, it attaches itself to
an unused TCP port on its own machine. This is called the source port and tells the TCP code
remote clients can locate them. Each outgoing TCP message contains both a source port and a
analogous to the company's IP address and the extensions on both ends are analogous to the
enters the NAT box, the 10.x.y.z source address is replaced by the company's true IP address.
In addition, the TCP Source port field is replaced by an index into the NAT box's 65,536-entry
translation table. This table entry contains the original IP address and the original source port.
Finally, both the IP and TCP header checksums are recomputed and inserted into the packet. It
When a packet arrives at the NAT box from the ISP, the Source port in the TCP header is
extracted and used as an index into the NAT box's mapping table. From the entry located, the
internal IP address and original TCP Source port are extracted and inserted into the packet.
Then both the IP and TCP checksums are recomputed and inserted into the packet. The packet
NAT can also be used to alleviate the IP shortage for ADSL and cable users. When the ISP
exit the ISP and enter the main Internet, they pass through a NAT box that translates them to
the ISP's true Internet address. On the way back, packets undergo the reverse mapping. In
this respect, to the rest of the Internet, the ISP and its home ADSL/cable users just looks like
Although this scheme sort of solves the problem, many people in the IP community regard it
objections. First, NAT violates the architectural model of IP, which states that every IP address
built on this fact. With NAT, thousands of machines may (and do) use address 10.0.0.1.
Second, NAT changes the Internet from a connectionless network to a kind of connectionoriented network. The problem is that the NAT box must maintain information (the mapping)
property of connection-oriented networks, not connectionless ones. If the NAT box crashes and
its mapping table is lost, all its TCP connections are destroyed. In the absence of NAT, router
crashes have no effect on TCP. The sending process just times out within a few seconds and
retransmits all unacknowledged packets. With NAT, the Internet becomes as vulnerable as a
Third, NAT violates the most fundamental rule of protocol layering: layer k may not make any
to keep the layers independent. If TCP is later upgraded to TCP-2, with a different header
layout (e.g., 32-bit ports), NAT will fail. The whole idea of layered protocols is to ensure that
changes in one layer do not require changes in other layers. NAT destroys this independence.
Fourth, processes on the Internet are not required to use TCP or UDP. If a user on machine A
decides to use some new transport protocol to talk to a user on machine B (for example, for a
multimedia application), introduction of a NAT box will cause the application to fail because the
NAT box will not be able to locate the TCP Source port correctly.
Fifth, some applications insert IP addresses in the body of the text. The receiver then extracts
these addresses and uses them. Since NAT knows nothing about these addresses, it cannot
replace them, so any attempt to use them on the remote side will fail. FTP, the standard File
Transfer Protocol works this way and can fail in the presence of NAT unless special
precautions are taken. Similarly, the H.323 Internet telephony protocol (which we will study in
Chap. 7) has this property and can fail in the presence of NAT. It may be possible to patch NAT
to work with H.323, but having to patch the code in the NAT box every time a new application
Sixth, since the TCP Source port field is 16 bits, at most 65,536 machines can be mapped onto
an IP address. Actually, the number is slightly less because the first 4096 ports are reserved
for special uses. However, if multiple IP addresses are available, each one can handle up to
These and other problems with NAT are discussed in RFC 2993. In general, the opponents of
NAT say that by fixing the problem of insufficient IP addresses with a temporary and ugly
In addition to IP, which is used for data transfer, the Internet has several control protocols
used in the network layer, including ICMP, ARP, RARP, BOOTP, and DHCP. In this section we
occurs, the event is reported by the ICMP (Internet Control Message Protocol), which is
also used to test the Internet. About a dozen types of ICMP messages are defined. The most
important ones are listed in Fig. 5-61. Each ICMP message type is encapsulated in an IP
Figure 5-61. The principal ICMP message types.
The DESTINATION UNREACHABLE message is used when the subnet or a router cannot locate
the destination or when a packet with the DF bit cannot be delivered because a ''small-packet''
The TIME EXCEEDED message is sent when a packet is dropped because its counter has
The PARAMETER PROBLEM message indicates that an illegal value has been detected in a
The SOURCE QUENCH message was formerly used to throttle hosts that were sending too
The REDIRECT message is used when a router notices that a packet seems to be routed
The ECHO and ECHO REPLY messages are used to see if a given destination is reachable and
alive. Upon receiving the ECHO message, the destination is expected to send an ECHO REPLY
message back. The TIMESTAMP REQUEST and TIMESTAMP REPLY messages are similar, except
ARP—The Address Resolution Protocol
Although every machine on the Internet has one (or more) IP addresses, these cannot actually
LAN by an interface board that only understands LAN addresses. For example, every Ethernet
same LAN). The boards send and receive frames based on 48-bit Ethernet addresses. They
know nothing at all about 32-bit IP addresses.
The question now arises: How do IP addresses get mapped onto data link layer addresses,
small university with several class C (now called /24) networks is illustrated. Here we have two
Ethernets, one in the Computer Science Dept., with IP address 192.31.65.0 and one in
Electrical Engineering, with IP address 192.31.63.0. These are connected by a campus
backbone ring (e.g., FDDI) with IP address 192.31.60.0. Each machine on an Ethernet has a
unique Ethernet address, labeled E1 through E6, and each machine on the FDDI ring has an
FDDI address, labeled F1 through F3.
FDDI ring.
mary@eagle.cs.uni.edu. The first step is to find the IP address for host 2, known as
in Chap. 7. For the moment, we will just assume that DNS returns the IP address for host 2
address field and gives it to the IP software to transmit. The IP software can look at the
system that maps IP addresses onto Ethernet addresses. While this solution is certainly
A better solution is for host 1 to output a broadcast packet onto the Ethernet asking: Who
owns IP address 192.31.65.5? The broadcast will arrive at every machine on Ethernet
192.31.65.0, and each one will check its IP address. Host 2 alone will respond with its Ethernet
address (E2). In this way host 1 learns that IP address 192.31.65.5 is on the host with
ARP (Address Resolution Protocol). Almost every machine on the Internet runs it. ARP is
defined in RFC 826.
The advantage of using ARP over configuration files is the simplicity. The system manager
does not have to do much except assign each machine an IP address and decide about subnet
masks. ARP does the rest.
At this point, the IP software on host 1 builds an Ethernet frame addressed to E2, puts the IP
and causes an interrupt. The Ethernet driver extracts the IP packet from the payload and
passes it to the IP software, which sees that it is correctly addressed and processes it.
Various optimizations are possible to make ARP work more efficiently. To start with, once a
machine has run ARP, it caches the result in case it needs to contact the same machine
ARP to determine the sender's Ethernet address. This ARP broadcast can be avoided by having
host 1 include its IP-to-Ethernet mapping in the ARP packet. When the ARP broadcast arrives
at host 2, the pair (192.31.65.7, E1) is entered into host 2's ARP cache for future use. In fact,
all machines on the Ethernet can enter this mapping into their ARP caches.
broadcast is generally done in the form of an ARP looking for its own IP address. There should
not be a response, but a side effect of the broadcast is to make an entry in everyone's ARP
IP address. The new one should inform the system manager and not boot.
with a new one (and thus a new Ethernet address), entries in the ARP cache should time out
(192.31.63.8). Using ARP will fail because host 4 will not see the broadcast (routers do not
forward Ethernet-level broadcasts). There are two solutions. First, the CS router could be
configured to respond to ARP requests for network 192.31.63.0 (and possibly other local
networks). In this case, host 1 will make an ARP cache entry of (192.31.63.8, E3) and happily
send all traffic for host 4 to the local router. This solution is called proxy ARP. The second
E3. This solution does not require having the CS router know which remote networks it is
Either way, what happens is that host 1 packs the IP packet into the payload field of an
Ethernet frame addressed to E3. When the CS router gets the Ethernet frame, it removes the
IP packet from the payload field and looks up the IP address in its routing tables. It discovers
already know the FDDI address of 192.31.60.7, it broadcasts an ARP packet onto the ring and
learns that its ring address is F3. It then inserts the packet into the payload field of an FDDI
At the EE router, the FDDI driver removes the packet from the payload field and gives it to the
IP software, which sees that it needs to send the packet to 192.31.63.8. If this IP address is
not in its ARP cache, it broadcasts an ARP request on the EE Ethernet and learns that the
packet is extracted from the frame and passed to the IP software for processing.
Going from host 1 to a distant network over a WAN works essentially the same way, except
that this time the CS router's tables tell it to use the WAN router whose FDDI address is F2.
RARP, BOOTP, and DHCP
ARP solves the problem of finding out which Ethernet address corresponds to a given IP
the corresponding IP address? In particular, this problem occurs when a diskless workstation is
remote file server. But how does it learn its IP address?
The first solution devised was to use RARP (Reverse Address Resolution Protocol)
(defined in RFC 903). This protocol allows a newly-booted workstation to broadcast its
there know my IP address? The RARP server sees this request, looks up the Ethernet address
in its configuration files, and sends back the corresponding IP address.
Using RARP is better than embedding an IP address in the memory image because it allows the
same image to be used on all machines. If the IP address were buried inside the image, each
A disadvantage of RARP is that it uses a destination address of all 1s (limited broadcasting) to
reach the RARP server. However, such broadcasts are not forwarded by routers, so a RARP
protocol called BOOTP was invented. Unlike RARP, BOOTP uses UDP messages, which are
including the IP address of the file server holding the memory image, the IP address of the
default router, and the subnet mask to use. BOOTP is described in RFCs 951, 1048, and 1084.
A serious problem with BOOTP is that it requires manual configuration of tables mapping IP
address to Ethernet address. When a new host is added to a LAN, it cannot use BOOTP until an
administrator has assigned it an IP address and entered its (Ethernet address, IP address) into
the BOOTP configuration tables by hand. To eliminate this error-prone step, BOOTP was
extended and given a new name: DHCP (Dynamic Host Configuration Protocol). DHCP
allows both manual IP address assignment and automatic assignment. It is described in RFCs
2131 and 2132. In most systems, it has largely replaced RARP and BOOTP.
Like RARP and BOOTP, DHCP is based on the idea of a special server that assigns IP addresses
to hosts asking for one. This server need not be on the same LAN as the requesting host. Since
the DHCP server may not be reachable by broadcasting, a DHCP relay agent is needed on
each LAN, as shown in Fig. 5-63.
Figure 5-63. Operation of DHCP.
To find its IP address, a newly-booted machine broadcasts a DHCP DISCOVER packet. The
DHCP relay agent on its LAN intercepts all DHCP broadcasts. When it finds a DHCP DISCOVER
packet, it sends the packet as a unicast packet to the DHCP server, possibly on a distant
network. The only piece of information the relay agent needs is the IP address of the DHCP
An issue that arises with automatic assignment of IP addresses from a pool is how long an IP
address should be allocated. If a host leaves the network and does not return its IP address to
the DHCP server, that address will be permanently lost. After a period of time, many addresses
may be lost. To prevent that from happening, IP address assignment may be for a fixed period
of time, a technique called leasing. Just before the lease expires, the host must ask the DHCP
the IP address it was given earlier.
5.6.4 OSPF—The Interior Gateway Routing Protocol
number of autonomous systems. Each AS is operated by a different organization and can use
its own routing algorithm inside. For example, the internal networks of companies X, Y, and Z
this section we will study routing within an AS. In the next one, we will look at routing between
ASes. A routing algorithm within an AS is called an interior gateway protocol; an algorithm
The original Internet interior gateway protocol was a distance vector protocol (RIP) based on
the Bellman-Ford algorithm inherited from the ARPANET. It worked well in small systems, but
Internet Engineering Task Force began work on a successor. That successor, called OSPF
OSPF works. For the complete story, see RFC 2328.
the open literature, hence the ''O'' in OSPF. A proprietary solution owned by one company
Fourth, and new for OSPF, it had to support routing based on type of service. The new protocol
had to be able to route real-time traffic one way and other traffic a different way. The IP
included in OSPF but still nobody used it, and it was eventually removed.
OSPF supports three kinds of connections and networks:
A multiaccess network is one that can have multiple routers on it, each of which can directly
an AS containing all three kinds of networks. Note that hosts do not generally play a role in
OSPF.
Figure 5-64. (a) An autonomous system. (b) A graph representation of
OSPF operates by abstracting the collection of actual networks, routers, and lines into a
the shortest path based on the weights on the arcs. A serial connection between two routers is
represented by a pair of arcs, one in each direction. Their weights may be different. A
symmetric, unless marked otherwise. What OSPF fundamentally does is represent the actual
Many of the ASes in the Internet are themselves large and nontrivial to manage. OSPF allows
Every AS has a backbone area, called area 0. All areas are connected to the backbone,
possibly by tunnels, so it is possible to go from any area in the AS to any other area in the AS
via the backbone. A tunnel is represented in the graph as an arc and has a cost. Each router
one. A router that connects to two areas needs the databases for both areas and must run the
inter-AS. Intra-area routes are the easiest, since the source router already knows the shortest
This algorithm forces a star configuration on OSPF with the backbone being the hub and the
OSPF.
OSPF distinguishes four classes of routers:
AS boundary routers talk to routers in other ASes.
When a router boots, it sends HELLO messages on all of its point-to-point lines and multicasts
its neighbors are. Routers on the same LAN are all neighbors.
OSPF works by exchanging information between adjacent routers, which is not the same as
between neighboring routers. In particular, it is inefficient to have every router on a LAN talk
to every other router on the LAN. To avoid this situation, one router is elected as the
designated router. It is said to be adjacent to all the other routers on its LAN, and
information with each other. A backup designated router is always kept up to date to ease the
During normal operation, each router periodically floods LINK STATE UPDATE messages to
message has a sequence number, so a router can see whether an incoming LINK STATE
UPDATE is older or newer than what it currently has. Routers also send these messages when
DATABASE DESCRIPTION messages give the sequence numbers of all the link state entries
Either partner can request link state information from the other one by using LINK STATE
REQUEST messages. The result of this algorithm is that each pair of adjacent routers checks to
way. All these messages are sent as raw IP packets. The five kinds of messages are
Figure 5-66. The five types of OSPF messages.
5.6.5 BGP—The Exterior Gateway Routing Protocol
Within a single AS, the recommended routing protocol is OSPF (although it is certainly not the
only one in use). Between ASes, a different protocol, BGP (Border Gateway Protocol), is
used. A different protocol is needed between ASes because the goals of an interior gateway
example, a corporate AS might want the ability to send packets to any Internet site and
originating in a foreign AS and ending in a different foreign AS, even if its own AS was on the
carrier for their customers, but not for others. Exterior gateway protocols in general, and BGP
Typical policies involve political, security, or economic considerations. A few examples of
5. Traffic starting or ending at IBM should not transit Microsoft.
Policies are typically manually configured into each BGP router (or included using some kind of
From the point of view of a BGP router, the world consists of ASes and the lines connecting
one. Given BGP's special interest in transit traffic, networks are grouped into one of three
BGP graph. These cannot be used for transit traffic because there is no one on the other side.
Pairs of BGP routers communicate with each other by establishing TCP connections. Operating
BGP is fundamentally a distance vector protocol, but quite different from most others such as
RIP. Instead of maintaining just the cost to each destination, each BGP router keeps track of
possible destination, each BGP router tells its neighbors the exact path it is using.
As an example, consider the BGP routers shown in Fig. 5-67(a). In particular, consider F's
routing table. Suppose that it uses the path FGCD to get to D. When the neighbors give it
simplicity, only destination D is shown here).
Figure 5-67. (a) A set of BGP routers. (b) Information sent to F.
After all the paths come in from the neighbors, F examines them to see which is the best. It
quickly discards the paths from I and E, since these paths pass through F itself. The choice is
then between using B and G. Every BGP router contains a module that examines routes to a
BGP protocol and can be any function the system managers want.
BGP easily solves the count-to-infinity problem that plagues other distance vector routing
algorithms. For example, suppose G crashes or the line FG goes down. F then receives routes
from its three remaining neighbors. These routes are BCD, IFGCD, and EFGCD. It can
immediately see that the two latter routes are pointless, since they pass through F itself, so it
chooses FBCD as its new route. Other distance vector algorithms often make the wrong choice
and which do not. The definition of BGP is in RFCs 1771 to 1774.
Normal IP communication is between one sender and one receiver. However, for some
IP supports multicasting, using class D addresses. Each class D address identifies a group of
exist at the same time. When a process sends a packet to a class D address, a best-efforts
Two kinds of group addresses are supported: permanent addresses and temporary ones. A
224.0.0.1 All systems on a LAN
224.0.0.2 All routers on a LAN
224.0.0.5 All OSPF routers on a LAN
224.0.0.6 All designated OSPF routers on a LAN
Temporary groups must be created before they can be used. A process can ask its host to join
data link layer) multicast to the hosts on its LAN (address 224.0.0.1) asking them to report
the class D addresses it is interested in.
These query and response packets use a protocol called IGMP (Internet Group
Management Protocol), which is vaguely analogous to ICMP. It has only two kinds of
information in the first word of the payload field and a class D address in the second word. It is
described in RFC 1112.
5.6.7 Mobile IP
Unfortunately, the IP addressing system makes working far from home easier said than done.
In this section we will examine the problem and the solution. A more detailed description is
The real villain is the addressing scheme itself. Every IP address contains a network number
and a host number. For example, consider the machine with IP address 160.80.40.20/16. The
network 160.80. Whenever a packet comes in with a destination IP address of the form
for it will continue to be routed to its home LAN (or router). The owner will no longer get email, and so on. Giving the machine a new IP address corresponding to its new location is
Another approach is to have the routers use complete IP addresses for routing, instead of just
wherever they were, IETF set up a Working Group to find a solution. The Working Group
Each mobile host must be able to use its home IP address anywhere.
agent and gives it a care-of address, normally the foreign agent's own IP address.
When a packet arrives at the user's home LAN, it comes in at some router attached to the LAN.
The router then tries to locate the host in the usual way, by broadcasting an ARP packet
encapsulating them in the payload field of an IP packet addressed to the foreign agent. The
with the home agent's is done by a trick called gratuitous ARP. This is a special, unsolicited
care-of IP address to use. That IP address must belong to the LAN to which it is currently
The IETF solution for mobile hosts solves a number of other problems not mentioned so far.
all of Roberta's packets to some IP address, it had better not comply unless it is convinced that
A final point addressed by the Working Group relates to levels of mobility. Imagine an airplane
While CIDR and NAT may buy a few more years' time, everyone realizes that the days of IP in
high-tech industry, and the U.S. Government (especially the Dept. of Defense). With the
these circumstances, it became apparent that IP had to evolve and become more flexible.
Seeing these problems on the horizon, in 1990, IETF started work on a new version of IP, one
Provide better security (authentication and privacy) than current IP.
To develop a protocol that met all these requirements, IETF issued a call for proposals and
discussion in RFC 1550. Twenty-one responses were received, not all of them full proposals. By
patches to IP, to throwing it out altogether and replacing with a completely different protocol.
One proposal was to run TCP over CLNP, which, with its 160-bit addresses would have
in the OSI world was actually done right, a statement considered Politically Incorrect in
Internet circles. CLNP was patterned closely on IP, so the two are not really that different. In
fact, the protocol ultimately chosen differs from IP far more than CLNP does. Another strike
against CLNP was its poor support for service types, something required to transmit
Three of the better proposals were published in IEEE Network (Deering, 1993; Francis, 1993;
modified combined version of the Deering and Francis proposals, by now called SIPP (Simple
IPv6 meets the goals fairly well. It maintains the good features of IP, discards or deemphasizes
but it is compatible with the other auxiliary Internet protocols, including TCP, UDP, ICMP,
IGMP, OSPF, BGP, and DNS, sometimes with small modifications being required (mostly to deal
A fourth area in which IPv6 represents a big advance is in security. IETF had its fill of
to be done to improve security. Authentication and privacy are key features of the new IP.
requirements. A field designed for this purpose has been in IP since the beginning, but it has
flows may be active at the same time between a given pair of IP addresses. Also, in this way,
(currently) six extension headers, if any, follow this one. If this header is the last IP header,
the Next header field tells which transport protocol handler (e.g., TCP, UDP) to pass the packet
Next come the Source address and Destination address fields. Deering's original proposal, SIP,
others favored using 20-byte addresses to be compatible with the OSI datagram protocol. Still
A new notation has been devised for writing 16-byte addresses. They are written as eight
8000:0000:0000:0000:0123:4567:89AB:CDEF
8000::123:4567:89AB:CDEF
and water, were covered with computers, IPv6 would allow 7 x 1023 IP addresses per square
While it was not the intention to give every molecule on the surface of the earth its own IP
307, is nearly empty). In RFC 3194, Durand and Huitema calculated that, using the allocation
over 1000 IP addresses per square meter of the entire earth's surface (land and water). In any
what has been left out in IPv6. The IHL field is gone because the IPv6 header has a fixed
last IP header (e.g., a UDP or TCP segment).
option; discard the packet; discard the packet and send back an ICMP packet; and the same as
the previous one, except do not send ICMP packets for multicast addresses (to prevent one
bad multicast packet from generating millions of ICMP reports).
back an ICMP error message. Datagrams using this header extension are called jumbograms.
confronted with a packet that is too big, it discards the packet and sends an ICMP packet back
packets in excess of 64 KB. When a supercomputer gets started transferring, it really means
business and does not want to be interrupted every 64 KB. The argument against large
packets is that if a 1-MB packet hits a 1.5-Mbps T1 line, that packet will tie the line up for over
5 seconds, producing a very noticeable delay for interactive users sharing the line. A
compromise was reached here: normal packets are limited to 64 KB, but the hop-by-hop
A third hot topic was removing the IPv4 checksum. Some people likened this move to
integrity has to have a transport layer checksum anyway, so having another one in IP (in
computing the IP checksum was a major expense in IPv4. The antichecksum camp won this
these applications can just refrain from using the IP security features and do the job
do not want to pay the price of slow, bulky IP implementations that have this capability, even
any IP implementation that used a cryptographic system strong enough to be of much value
good quality of service include integrated services (including RSVP), differentiated services,
and MPLS.
data transport protocol, IP, but also the control protocols ICMP, ARP, and RARP, and the
routing protocols OSPF and BGP. The Internet is rapidly running out of IP addresses, so a new
version of IP, IPv6, has been developed.
uses flooding as the routing algorithm. If a packet sent by A to D has a maximum hop
vectors have just come in to router C: from B: (5, 0, 8, 12, 6, 2); from D: (16, 12, 6,
0, 9, 10); and from E: (7, 6, 3, 9, 0, 4). The measured delays to B, D, and E, are 6, 3,
and 5, respectively. What is C's new routing table? Give both the outgoing line to use
11. In Fig. 5-14 the Boolean OR of the two sets of ACF bits are 111 in every row. Is this
chosen to minimize the size of the routing table for a three-layer hierarchy? A good
home LAN are intercepted by its home agent on that LAN. For an IP network on an
802.3 LAN, how does the home agent accomplish this interception?
B, using
15. Consider the network of Fig. 5-16(a). Imagine that one new line is added, between F
and G, but the sink tree of Fig. 5-16(b) remains unchanged. What changes occur to Fig.
16. Compute a multicast spanning tree for router C in the following subnet for a group with
members at routers A, B, C, D, E, F, I, and K.
17. In Fig. 5-20, do nodes H or I ever broadcast on the lookup shown starting at A?
18. Suppose that node B in Fig. 5-20 has just rebooted and has no routing information in
its tables. It suddenly needs a route to H. It sends out broadcasts with TTL set to 1, 2,
T sec to transmit a packet (data or acknowledgement) and there are n routers on the
22. A datagram subnet allows routers to drop packets whenever they need to. The
23. Describe two major differences between the warning bit method and the RED method.
26. An ATM network uses a token bucket scheme for traffic shaping. A new token is put into
27. A computer on a 6-Mbps network is regulated by a token bucket. The token bucket is
29. The network of Fig. 5-37 uses RSVP with multicast trees for hosts 1 and 2 as shown.
Suppose that host 3 requests a channel of bandwidth 2 MB/sec for a flow from host 1
and another channel of bandwidth 1 MB/sec for a flow from host 2. At the same time,
host 4 requests a channel of bandwidth 2 MB/sec for a flow from host 1 and host 5
requests a channel of bandwidth 1 MB/sec for a flow from host 2. How much total
bandwidth will be reserved for these requests at routers A, B, C, E, H, J, K, and L?
30. The CPU in a router can process 2 million packets/sec. The load offered to it is 1.5
34. Suppose that host A is connected to a router R 1, R 1 is connected to another router, R
2, and R 2 is connected to host B. Suppose that a TCP message that contains 900 bytes
of data and 20 bytes of TCP header is passed to the IP code at host A for delivery to B.
Show the Total length, Identification, DF, MF, and Fragment offset fields of the IP
header in each packet transmitted over the three links. Assume that link A-R1 can
header, and link R2-B can support a maximum frame size of 512 bytes including a 12byte frame header.
35. A router is blasting out IP packets whose total length (data plus header) is 1024 bytes.
operate at without danger of cycling through the IP datagram ID number space?
36. An IP datagram using the Strict source routing option has to be fragmented. Do you
37. Suppose that instead of using 16 bits for the network part of a class B address
originally, 20 bits had been used. How many class B networks would there have been?
38. Convert the IP address whose hexadecimal representation is C22F1582 to dotted
39. A network on the Internet has a subnet mask of 255.255.240.0. What is the maximum
40. A large number of consecutive IP address are available starting at 198.16.0.0. Suppose
that four organizations, A, B, C, and D, request 4000, 2000, 4000, and 8000 addresses,
respectively, and in that order. For each of these, give the first IP address assigned, the
last IP address assigned, and the mask in the w.x.y.z/s notation.
41. A router has just received the following new IP addresses: 57.6.96.0/21,
42. The set of IP addresses from 29.18.0.0 to 19.18.128.255 has been aggregated to
43. A router has the following (CIDR) entries in its routing table:
44. For each of the following IP addresses, what does the router do if a packet with that
policy still possible with NAT? Explain your answer.
46. You have just explained the ARP protocol to a friend. When you are all done, he says:
''I've got it. ARP provides a service to the network layer, so it is part of the data link
47. ARP and RARP both map addresses from one space to another. In this respect, they are
48. Describe a way to reassemble IP fragments at the destination.
49. Most IP datagram reassembly algorithms have a timer to avoid having a lost fragment
timer goes off and the three fragments in the receiver's memory are discarded. A little
50. In both IP and ATM, the checksum covers only the header and not the data. Why do
51. A person who lives in Boston travels to Minneapolis, taking her portable computer with
her. To her surprise, the LAN at her destination in Minneapolis is a wireless IP LAN, so
54. When the IPv6 protocol is introduced, does the ARP protocol have to be changed? If so,
57. Write a function to do forwarding in an IP router. The procedure has one parameter, an
IP address. It also has access to a global table consisting of an array of triples. Each
triple contains three integers: an IP address, a subnet mask, and the outline line to use.
The function looks up the IP address in the table using CIDR and returns the line to use
58. Use the traceroute (UNIX) or tracert (Windows) programs to trace the route from your
considerably from network to network (e.g., connectionless LAN service may be quite different
from connection-oriented WAN service). By hiding the network service behind a set of
As an example, consider two processes connected by pipes in UNIX. They assume the
connection. Process A puts data into one end of the pipe, and process B takes it out of the
A second difference between the network service and transport service is whom the services
number of remote clients. To start with, the server executes a LISTEN primitive, typically by
When a client wants to talk to the server, it executes a CONNECT primitive. The transport
A quick note on terminology is now in order. For lack of a better term, we will reluctantly use
the somewhat ungainly acronym TPDU (Transport Protocol Data Unit) for messages sent
Getting back to our client-server example, the client's CONNECT call causes a CONNECTION
REQUEST TPDU to be sent to the server. When it arrives, the transport entity checks to see
that the server is blocked on a LISTEN (i.e., is interested in handling requests). It then
unblocks the server and sends a CONNECTION ACCEPTED TPDU back to the client. When this
TPDU arrives, the client is unblocked and the connection is established.
Data can now be exchanged using the SEND and RECEIVE primitives. In the simplest form,
either party can do a (blocking) RECEIVE to wait for the other party to do a SEND. When the
TPDU arrives, the receiver is unblocked. It can then process the TPDU and send a reply. As
asymmetric variant, either transport user can issue a DISCONNECT primitive, which results in
a DISCONNECT TPDU being sent to the remote transport entity. Upon arrival, the connection is
When one side does a DISCONNECT, that means it has no more data to send but it is still
have done a DISCONNECT.
A state diagram for connection establishment and release for these simple primitives is given
transport user or an incoming packet. For simplicity, we assume here that each TPDU is
Figure 6-4. A state diagram for a simple connection management
Berkeley UNIX for TCP. These primitives are widely used for Internet programming. They are
have to wait until we study TCP later in this chapter.
Figure 6-5. The socket primitives for TCP.
The first four primitives in the list are executed in that order by servers. The SOCKET primitive
(e.g., reliable byte stream), and the protocol. A successful SOCKET call returns an ordinary file
descriptor for use in succeeding calls, the same way an OPEN call does.
Newly-created sockets do not have network addresses. These are assigned using the BIND
The reason for not having the SOCKET call create an address directly is that some processes
Next comes the LISTEN call, which allocates space to queue incoming calls for the case that
several clients try to connect at the same time. In contrast to LISTEN in our first example, in
the socket model LISTEN is not a blocking call.
To block waiting for an incoming connection, the server executes an ACCEPT primitive. When a
TPDU asking for a connection arrives, the transport entity creates a new socket with the same
next connection on the original socket. ACCEPT returns a normal file descriptor, which can be
Now let us look at the client side. Here, too, a socket must first be created using the SOCKET
primitive, but BIND is not required since the address used does not matter to the server. The
CONNECT primitive blocks the caller and actively starts the connection process. When it
completes (i.e., when the appropriate TPDU is received from the server), the client process is
unblocked and the connection is established. Both sides can now use SEND and RECV to
transmit and receive data over the full-duplex connection. The standard UNIX READ and
WRITE system calls can also be used if none of the special options of SEND and RECV are
Connection release with sockets is symmetric. When both sides have executed a CLOSE
compiled and run on any UNIX system connected to the Internet. The client code can then be
compiled and run on any other UNIX machine on the Internet, anywhere in the world. The
data structure that will hold the server's IP address. This data structure will soon be bound to
code runs correctly on both big-endian machines (e.g., the SPARC) and little-endian machines
request after request. Now the IP address is bound to the socket and a check is made to see if
and is converted to an IP address by gethostbyname. This function uses DNS to look up the
name. We will study DNS in Chap. 7.
Next a socket is created and initialized. After that, the client attempts to establish a TCP
/* holds IP address */
/* look up host's IP address */
/* holds IP address */
compiled on any UNIX system (e.g., Solaris, BSD, Linux) by
The client needs two arguments, as discussed above. A Windows version is also available on
error reporting is mediocre. It has clearly never heard about security, and using bare UNIX system
A final difference between the data link and transport layers is one of amount rather than of
Internet, these end points are called ports. In ATM networks, they are called AAL-SAPs. We
will use the generic term TSAP, (Transport Service Access Point). The analogous end
points in the network layer (i.e., network layer addresses) are then called NSAPs. IP
Figure 6-8 illustrates the relationship between the NSAP, TSAP and transport connection.
Application processes, both clients and servers, can attach themselves to a TSAP to establish a
connection to a remote TSAP. These connections run through NSAPs on each host, as shown.
The purpose of having TSAPs is that in some networks, each computer has a single NSAP, so
some way is needed to distinguish multiple transport end points that share that NSAP.
A possible scenario for a transport connection is as follows.
1. A time of day server process on host 2 attaches itself to TSAP 1522 to wait for an
incoming call. How a process attaches itself to a TSAP is outside the networking model
and depends entirely on the local operating system. A call such as our LISTEN might be
CONNECT request specifying TSAP 1208 as the source and TSAP 1522 as the
waiting for incoming connections that arrive over the same NSAP.
does the user process on host 1 know that the time-of-day server is attached to TSAP 1522?
One possibility is that the time-of-day server has been attaching itself to TSAP 1522 for years
and gradually all the network users have learned this. In this model, services have stable TSAP
addresses that are listed in files in well-known places, such as the /etc/services file on UNIX
While stable TSAP addresses work for a small number of key services that never change (e.g.
only exist for a short time and do not have a TSAP address that is known in advance.
is wasteful to have each of them active and listening to a stable TSAP address all day long. In
connection protocol. Instead of every conceivable server listening at a well-known TSAP,
waiting for a connection request. Potential users of a service begin by doing a CONNECT
request, specifying the TSAP address of the service they want. If no server is waiting for them,
server. A file server, for example, needs to run on special hardware (a machine with a disk)
special process called a name server or sometimes a directory server. To find the TSAP
connection to the name server (which listens to a well-known TSAP). The user then sends a
message specifying the service name, and the name server sends back the TSAP address.
giving both its service name (typically, an ASCII string) and its TSAP. The name server records
system, it is essential that the address of the well-known TSAP used by the name server (or
would seem sufficient for one transport entity to just send a CONNECTION REQUEST TPDU to
the destination and wait for a CONNECTION ACCEPTED reply. The problem occurs when the
The worst possible nightmare is as follows. A user establishes a connection with a bank, sends
TPDU, including the one requesting the connection. After each connection is released, each
using GPS or some radio station that broadcasts the precise time periodically.
acknowledgements to it are also dead, so we will now introduce T, which is some small
has the effect of making T longer. If we wait a time T after a packet has been sent, we can be
Dalal (1978). Variants of it are widely used in practice, including in TCP.
A problem occurs when a host crashes. When it comes up again, its transport entity does not
idle for T sec after a recovery to let all old TPDUs die off. However, in a complex internetwork,
T may be large, so this strategy is unattractive.
To avoid requiring T sec of dead time after a crash, it is necessary to introduce a new
means of an example. Let T, the maximum packet lifetime, be 60 sec and let the clock tick
connection opened at time x will be x. Imagine that at t = 30 sec, an ordinary data TPDU being
sent on (a previously opened) connection 5 is given sequence number 80. Call this TPDU X.
Immediately after sending TPDU X, the host crashes and then quickly restarts. At t = 60, it
Thus, at t = 85 a new TPDU with sequence number 80 and connection 5 has been injected into
the subnet. Unfortunately, TPDU X still exists. If it should arrive at the receiver before the new
TPDU 80, TPDU X will be accepted and the correct TPDU 80 will be rejected as a duplicate.
to new TPDUs) for a time T before their potential use as initial sequence numbers. The illegal
combinations of time and sequence number are shown as the forbidden region in Fig. 610(a). Before sending any TPDU on any connection, the transport entity must read the clock
maximum data rate on any connection is one TPDU per clock tick. It also means that the
longer this event will be delayed. As we stated above, just before sending every TPDU, the
delay the TPDU for T sec or resynchronize the sequence numbers.
CONNECTION REQUEST TPDU containing the proposed initial sequence number and destination
sending a CONNECTION ACCEPTED TPDU back. If the CONNECTION REQUEST TPDU is lost but
a delayed duplicate CONNECTION REQUEST suddenly shows up at host 2, the connection will
sequence number, x, and sends a CONNECTION REQUEST TPDU containing it to host 2. Host 2
replies with an ACK TPDU acknowledging x and announcing its own initial sequence number, y.
TPDU that it sends.
using a three-way handshake. CR denotes CONNECTION REQUEST. (a)
Normal operation. (b) Old duplicate CONNECTION REQUEST appearing
out of nowhere. (c) Duplicate CONNECTION REQUEST and duplicate
ACK.
control TPDUs. In Fig. 6-11(b), the first TPDU is a delayed duplicate CONNECTION REQUEST
from an old connection. This TPDU arrives at host 2 without host 1's knowledge. Host 2 reacts
to this TPDU by sending host 1 an
ACK TPDU, in effect asking for verification that host 1 was indeed trying to set up a new
The worst case is when both a delayed CONNECTION REQUEST and an ACK are floating around
delayed CONNECTION REQUEST and replies to it. At this point it is crucial to realize that host 2
existence. When the second delayed TPDU arrives at host 2, the fact that z has been
After the connection is established, host 1 sends a TPDU that arrives properly at host 2. Then
host 1 sends another TPDU. Unfortunately, host 2 issues a DISCONNECT before the second
TPDU arrives. The result is that the connection is released and data are lost.
host can continue to receive data even after it has sent a DISCONNECT TPDU.
in which host 1 says: I am done. Are you done too? If host 2 responds: I am done too.
Suppose that the commander of blue army #1 sends a message reading: ''I propose we attack
Normal case of three-way handshake. (b) Final ACK lost. (c) Response
In Fig. 6-14(a), we see the normal case in which one of the users sends a DR
(DISCONNECTION REQUEST) TPDU to initiate the connection release. When it arrives, the
recipient sends back a DR TPDU, too, and starts a timer, just in case its DR is lost. When this
DR arrives, the original sender sends back an ACK TPDU and releases the connection. Finally,
when the ACK TPDU arrives, the receiver also releases the connection. Releasing a connection
This action is different from a transport user issuing a DISCONNECT primitive.
If the final ACK TPDU is lost, as shown in Fig. 6-14(b), the situation is saved by the timer.
Now consider the case of the second DR being lost. The user initiating the disconnection will
repeated attempts to retransmit the DR also fail due to lost TPDUs. After N retries, the sender
While this protocol usually suffices, in theory it can fail if the initial DR and N retransmissions
We could have avoided this problem by not allowing the sender to give up after N retries but
that is stopped and then restarted whenever a TPDU is sent. If this timer expires, a dummy
TPDU is transmitted, just to keep the other side from disconnecting. On the other hand, if the
shared by all connections. When a TPDU comes in, an attempt is made to dynamically acquire
a new buffer. If one is available, the TPDU is accepted; otherwise, it is discarded. Since the
incoming TPDU will be accepted, the sender will have to buffer anyway. In the latter case, the
means only that the TPDU arrived, not that it was accepted. We will come back to this
pool of identically-sized buffers, with one TPDU per buffer, as in Fig. 6-15(a). However, if there
is wide variation in TPDU size, from a few characters typed at a terminal to thousands of
is chosen equal to the largest possible TPDU, space will be wasted whenever a short TPDU
arrives. If the buffer size is chosen less than the maximum TPDU size, multiple buffers will be
management. A third possibility is to dedicate a single large circular buffer per connection, as
able to acquire a buffer, the sender must retain a copy of the TPDU until it is acknowledged.
could tell the sender ''I have reserved X buffers for you.'' If the number of open connections
A reasonably general way to manage dynamic buffer allocation is to decouple the buffering
these as it can afford. Every time the sender transmits a TPDU, it must decrement its
travels in separate TPDUs, as shown, and is not piggybacked onto reverse traffic. Initially, A
third is lost. TPDU 6 acknowledges receipt of all TPDUs up to and including sequence number
1, thus allowing A to release those buffers, and furthermore informs A that it has permission to
send three more TPDUs starting beyond 1 (i.e., TPDUs 2, 3, and 4). A knows that it has
already been allocated. In line 10, B acknowledges receipt of all TPDUs up to and including 4
but refuses to let A continue. Such a situation is impossible with the fixed window protocols of
Chap. 3. The next TPDU from B to A allocates another buffer and allows A to continue.
of transmission. An ellipsis (...) indicates a lost TPDU.
if control TPDUs can get lost. Look at line 16. B has now allocated more buffers to A, but the
allocation TPDU was lost. Since control TPDUs are not sequenced or timed out, A is now
acknowledgement rate. The time required for a transmitted TPDU to be acknowledged can be
available on a host, all transport connections on that machine have to use it. When a TPDU
use the same network connection (e.g., IP address) to the remote host.
With k network connections open, the effective bandwidth is increased by a factor of k. A
common example of downward multiplexing occurs with home users who have an ISDN line.
A more troublesome problem is how to recover from host crashes. In particular, it may be
In an attempt to recover its previous status, the server might send a broadcast TPDU to all
status of all open connections. Each client can be in one of two states: one TPDU outstanding,
whether to retransmit the most recent TPDU.
unacknowledged TPDU outstanding (i.e., is in state S1) when it learns of the crash. However, a
when the acknowledgement has been sent, writes to the application process. Writing a TPDU
(incorrectly) thinking that the TPDU has arrived. This decision by the client leads to a missing
TPDU.
duplicate TPDU in the output stream to the server application process.
retransmit the last TPDU, never retransmit the last TPDU, retransmit only in state S0, or
Three events are possible at the server: sending an acknowledgement (A), writing to the
output process (W), and crashing (C). The three events can occur in six different orderings:
AC(W), AWC, C(AW), C(WA), WAC, and WC(A), where the parentheses are used to indicate
that neither A nor W can follow C (i.e., once it has crashed, it has crashed). Figure 6-18 shows
fail. For example, if the client always retransmits, the AWC event will generate an undetected
Put in more general terms, this result can be restated as recovery from a layer N crash can
only be done by layer N + 1, and then only if the higher layer retains enough status
not necessarily mean that the remote host stayed up long enough to actually update the database. A
6.3 A Simple Transport Protocol
example similar to (but simpler than) the popular TCP protocol.
Our first problem is how to express these transport primitives concretely. CONNECT is easy:
TSAP to listen to. The process then blocks until some remote process attempts to establish a
connection to its TSAP.
connection attempt fail if there is no listener at the remote TSAP. Another strategy is to have
A compromise, used in our example, is to hold the connection request at the receiving end for
that blocks until a TPDU arrives. Our concrete service definition therefore consists of five
primitives: CONNECT, LISTEN, DISCONNECT, SEND, and RECEIVE. Each primitive corresponds
LISTEN(local)
CONNECT(local, remote)
SEND(connum, buffer, bytes)
RECEIVE(connum, buffer, bytes)
DISCONNECT(connum)
The LISTEN primitive announces the caller's willingness to accept connection requests directed
at the indicated TSAP. The user of the primitive is blocked until an attempt is made to connect
The CONNECT primitive takes two parameters, a local TSAP (i.e., transport address), local, and
a remote TSAP, remote, and tries to establish a transport connection between the two. If it
our simple model, each TSAP may participate in only one transport connection, so a possible
The SEND primitive transmits the contents of the buffer as a message on the indicated
The RECEIVE primitive indicates the caller's desire to accept data. The size of the incoming
The DISCONNECT primitive terminates a transport connection. The parameter connum tells
establishment, connection release, and credit management, among others. A simple transport
service built on top of an ATM network might look something like this.
blocks, such as LISTEN, the entire transport entity blocks as well. While this design is fine for a
network virtual circuits. Next come the Q and M bits, which, when set to 1, indicate control
IDLE— Connection not established yet.
WAITING— CONNECT has been executed and CALL REQUEST sent.
QUEUED— A CALL REQUEST has arrived; no LISTEN yet.
ESTABLISHED— The connection has been established.
SENDING— The user is waiting for permission to send a packet.
RECEIVING— A RECEIVE has been done.
DISCONNECTING— A DISCONNECT has been done locally.
The existence of the Q (Qualifier) bit in the packet header allows us to avoid the overhead of a
transport protocol header. Ordinary data messages are sent as data packets with Q = 0.
Transport protocol control messages, of which there is only one (CREDIT) in our example, are
sent as data packets with Q = 1. These control messages are detected and processed by the
DISCONNECT, a timer, and a permission counter used to enable sending of messages. Not all
of them, and perhaps more. Each conn entry is assumed initialized to the IDLE state.
When the user calls CONNECT, the network layer is instructed to send a CALL REQUEST packet
to the remote machine, and the user is put to sleep. When the CALL REQUEST packet arrives
local user is listening on the specified address. If so, a CALL ACCEPTED packet is sent back and
the remote user is awakened; if not, the CALL REQUEST is queued for TIMEOUT clock ticks. If
a LISTEN is done within this period, the connection is established; otherwise, it times out and
is rejected with a CLEAR REQUEST packet lest it block forever.
When a user calls RECEIVE, a special credit message is sent to the transport entity on the
sending machine and is recorded in the conn array. When SEND is called, the transport entity
the other side has already done a RECEIVE. As a result, whenever a message arrives, there is
You should keep the simplicity of Fig. 6-20 in mind. A realistic transport entity would normally
as interrupts, datagrams, and nonblocking versions of the SEND and RECEIVE primitives.
action is taken. For example, in the upper-left entry, if a LISTEN is executed and there is no
more table space (predicate P1), the LISTEN fails and the state does not change. On the other
hand, if a CALL REQUEST packet has already arrived for the transport address being listened to
false, that is, no CALL REQUEST has come in, in which case the connection remains in the IDLE
state, awaiting a CALL REQUEST packet.
protocol itself. In this example, there is no state LISTENING, which might have been a
reasonable thing to have following a LISTEN. There is no LISTENING state because a state is
associated with a connection record entry, and no connection record is created by LISTEN.
connection identifiers, and for a LISTEN, the virtual circuit number is ultimately chosen by the
network layer when the CALL REQUEST packet arrives.
also count. For example, if a CALL REQUEST packet comes in and a process was asleep waiting
for it, the transmission of the CALL ACCEPT packet following the wakeup counts as part of the
action for CALL REQUEST. After each action is performed, the connection may move to a new
and illegal ones. For example, if a connection is in waiting state, the DISCONNECT event is
6.4 The Internet Transport Protocols: UDP
connectionless protocol is UDP. The connection-oriented protocol is TCP. Because UDP is
basically just IP with a short header added, we will start with it. We will also look at two
applications of UDP.
6.4.1 Introduction to UDP
The Internet protocol suite supports a connectionless transport protocol, UDP (User
Datagram Protocol). UDP provides a way for applications to send encapsulated IP datagrams
and send them without having to establish a connection. UDP is described in RFC 768.
UDP transmits segments consisting of an 8-byte header followed by the payload. The header
destination machines. When a UDP packet arrives, its payload is handed to the process
attached to the destination port. This attachment occurs when BIND primitive or something
similar is used, as we saw in Fig. 6-6 for TCP (the binding process is the same for UDP). In
fact, the main value of having UDP over just using raw IP is the addition of the source and
Figure 6-23. The UDP header.
The UDP length field includes the 8-byte header and the data. The UDP checksum is optional
It is probably worth mentioning explicitly some of the things that UDP does not do. It does not
to the user processes. What it does do is provide an interface to the IP protocol with the added
UDP provides just what the doctor ordered.
One area where UDP is especially useful is in client-server situations. Often, the client sends a
An application that uses UDP this way is DNS (the Domain Name System), which we will study
in Chap. 7. In brief, a program that needs to look up the IP address of some host name, for
example, www.cs.berkeley.edu, can send a UDP packet containing the host name to a DNS
server. The server replies with a UDP packet containing the host's IP address. No setup is
by sending a UDP packet to a DNS server and waiting for the reply, timing out and trying again
result. No message passing is visible to the programmer. This technique is known as RPC
The idea behind RPC is to make a remote procedure call look as much as possible like a local
The actual steps in making an RPC are shown in Fig. 6-24. Step 1 is the client calling the client
nothing is unusual. In this way, instead of I/O being done on sockets, network communication
Despite the conceptual elegance of RPC, there are a few snakes hiding under the grass. A big
both procedures live in the same virtual address space. With RPC, passing pointers is
A second problem is that in weakly-typed languages, like C, it is perfectly legal to write a
A third problem is that it is not always possible to deduce the types of the parameters, not
because C is so permissive. However, a rule saying that RPC can be used provided that you do
not program in C (or C++) would not be popular.
A fourth problem relates to the use of global variables. Normally, the calling and called
These problems are not meant to suggest that RPC is hopeless. In fact, it is widely used, but
Of course, RPC need not use UDP packets, but RPC and UDP are a good fit and UDP is
commonly used for RPC. However, when the parameters or results may be larger than the
maximum UDP packet or when the operation requested is not idempotent (i.e., cannot be
repeated safely, such as when incrementing a counter), it may be necessary to set up a TCP
connection and send the request over it rather than use UDP.
Client-server RPC is one area in which UDP is widely used. Another one is real-time multimedia
transport protocol for multiple applications would be a good idea. Thus was RTP (Real-time
Transport Protocol) born. It is described in RFC 1889 and is now in widespread use.
The position of RTP in the protocol stack is somewhat strange. It was decided to put RTP in
user space and have it (normally) run over UDP. It operates as follows. The multimedia
into the RTP library, which is in user space along with the application. This library then
multiplexes the streams and encodes them in RTP packets, which it then stuffs into a socket.
At the other end of the socket (in the operating system kernel), UDP packets are generated
and embedded in IP packets. If the computer is on an Ethernet, the IP packets are then put in
Figure 6-25. (a) The position of RTP in the protocol stack. (b) Packet
As a consequence of this design, it is a little hard to say which layer RTP is in. Since it runs in
The basic function of RTP is to multiplex several real-time data streams onto a single stream of
UDP packets. The UDP stream can be sent to a single destination (unicasting) or to multiple
destinations (multicasting). Because RTP just uses normal UDP, its packets are not treated
specially by the routers unless some normal IP quality-of-service features are enabled. In
Each packet sent in an RTP stream is given a number one higher than its predecessor. This
probably arrive too late to be useful. As a consequence, RTP has no flow control, no error
Each RTP payload may contain multiple samples, and they may be coded any way that the
application wants. To allow for interworking, RTP defines several profiles (e.g., a single audio
audio stream may be encoded as 8-bit PCM samples at 8 kHz, delta encoding, predictive
encoding, GSM encoding, MP3, and so on. RTP provides a header field in which the source can
The RTP header is illustrated in Fig. 6-26. It consists of three 32-bit words and potentially
Figure 6-26. The RTP header.
The P bit indicates that the packet has been padded to a multiple of 4 bytes. The last padding
byte tells how many bytes were added. The X bit indicates that an extension header is present.
The CC field tells how many contributing sources are present, from 0 to 15 (see below). The M
transmission. The Sequence number is just a counter that is incremented on each RTP packet
single stream of UDP packets. Finally, the Contributing source identifiers, if any, are used when
RTP has a little sister protocol (little sibling protocol?) called RTCP (Realtime Transport
to 8-bit PCM to delta encoding as required. The Payload type field is used to tell the destination
RTCP also handles interstream synchronization. The problem is that different streams may use
different clocks, with different granularities and different drift rates. RTCP can be used to keep
Finally, RTCP provides a way for naming the various sources (e.g., in ASCII text). This
More information about RTP can be found in (Perkins, 2002).
6.5 The Internet Transport Protocols: TCP
UDP is a simple protocol and it has some niche uses, such as client-server interactions and
multimedia, but for most Internet applications, reliable, sequenced delivery is needed. UDP
cannot provide this, so another protocol is required. It is called TCP and is the main workhorse
6.5.1 Introduction to TCP
TCP (Transmission Control Protocol) was specifically designed to provide a reliable end-toend byte stream over an unreliable internetwork. An internetwork differs from a single network
and other parameters. TCP was designed to dynamically adapt to properties of the
TCP was formally defined in RFC 793. As time went on, various errors and inconsistencies were
bug fixes are detailed in RFC 1122. Extensions are given in RFC 1323.
Each machine supporting TCP has a TCP transport entity, either a library procedure, a user
process, or part of the kernel. In all cases, it manages TCP streams and interfaces to the IP
layer. A TCP entity accepts user data streams from local processes, breaks them up into pieces
not exceeding 64 KB (in practice, often 1460 data bytes in order to fit in a single Ethernet
frame with the IP and TCP headers), and sends each piece as a separate IP datagram. When
datagrams containing TCP data arrive at a machine, they are given to the TCP entity, which
reconstructs the original byte streams. For simplicity, we will sometimes use just ''TCP'' to
mean the TCP transport entity (a piece of software) or the TCP protocol (a set of rules). From
the context it will be clear which is meant. For example, in ''The user gives TCP the data,'' the
TCP transport entity is clearly intended.
The IP layer gives no guarantee that datagrams will be delivered properly, so it is up to TCP to
wrong order; it is also up to TCP to reassemble them into messages in the proper sequence. In
short, TCP must furnish the reliability that most users want and that IP does not provide.
6.5.2 The TCP Service Model
TCP service is obtained by both the sender and receiver creating end points, called sockets, as
discussed in Sec. 6.1.3. Each socket has a socket number (address) consisting of the IP
address of the host and a 16-bit number local to that host, called a port. A port is the TCP
name for a TSAP. For TCP service to be obtained, a connection must be explicitly established
A socket may be used for multiple connections at the same time. In other words, two or more
using FTP can connect to the destination host's port 21 to contact its FTP daemon. The list of
well-known ports is given at www.iana.org. Over 300 have been assigned. A few of the better
It would certainly be possible to have the FTP daemon attach itself to port 21 at boot time, the
done is to have a single daemon, called inetd (Internet daemon) in UNIX, attach itself to
All TCP connections are full duplex and point-to-point. Full duplex means that traffic can go in
end points. TCP does not support multicasting or broadcasting.
A TCP connection is a byte stream, not a message stream. Message boundaries are not
preserved end to end. For example, if the sending process does four 512-byte writes to a TCP
Figure 6-28. (a) Four 512-byte segments sent as separate IP
single READ call.
Files in UNIX have this property too. The reader of a file cannot tell whether the file was
written a block at a time, a byte at a time, or all in one blow. As with a UNIX file, the TCP
software has no idea of what the bytes mean and no interest in finding out. A byte is just a
When an application passes data to TCP, TCP may send it immediately or buffer it (in order to
the next line comes in. To force data out, applications can use the PUSH flag, which tells TCP
Some early applications used the PUSH flag as a kind of marker to delineate messages
of TCP pass the PUSH flag to the application on the receiving side. Furthermore, if additional
busy), TCP is free to collect all the PUSHed data into a single IP datagram, with no separation
One last feature of the TCP service that is worth mentioning here is urgent data. When an
interactive user hits the DEL or CTRL-C key to break off a remote computation that has already
TCP along with the URGENT flag. This event causes TCP to stop accumulating data and
(e.g., given a signal in UNIX terms) so it can stop whatever it was doing and read the data
6.5.3 The TCP Protocol
In this section we will give a general overview of the TCP protocol. In the next one we will go
A key feature of TCP, and one which dominates the protocol design, is that every byte on a
TCP connection has its own 32-bit sequence number. When the Internet began, the lines
The sending and receiving TCP entities exchange data in the form of segments. A TCP
data bytes. The TCP software decides how big segments should be. It can accumulate data
Two limits restrict the segment size. First, each segment, including the TCP header, must fit in
the 65,515-byte IP payload. Second, each network has a maximum transfer unit, or MTU,
and each segment must fit in the MTU. In practice, the MTU is generally 1500 bytes (the
The basic protocol used by TCP entities is the sliding window protocol. When a sender
receiving TCP entity sends back a segment (with data if any exist, otherwise without data)
TCP must be prepared to deal with these problems and solve them in an efficient way. A
considerable amount of effort has gone into optimizing the performance of TCP streams, even
in the face of network problems. A number of the algorithms used by many TCP
6.5.4 The TCP Segment Header
Figure 6-29 shows the layout of a TCP segment. Every segment begins with a fixed-format,
up to 65,535 - 20 - 20 = 65,495 data bytes may follow, where the first 20 refer to the IP
header and the second to the TCP header. Segments without any data are legal and are
Figure 6-29. The TCP header.
Let us dissect the TCP header field by field. The Source port and Destination port fields identify
each host can allocate the others as it wishes. A port plus its host's IP address forms a 48-bit
are 32 bits long because every byte of data is numbered in a TCP stream.
The TCP header length tells how many 32-bit words are contained in the TCP header. This
quarter of a century is testimony to how well thought out TCP is. Lesser protocols would have
Now come six 1-bit flags. URG is set to 1 if the Urgent pointer is in use. The Urgent pointer is
bare-bones way of allowing the sender to signal the receiver without getting TCP itself involved
The ACK bit is set to 1 to indicate that the Acknowledgement number is valid. If ACK is 0, the
The PSH bit indicates PUSHed data. The receiver is hereby kindly requested to deliver the data
The RST bit is used to reset a connection that has become confused due to a host crash or
connection. In general, if you get a segment with the RST bit on, you have a problem on your
The SYN bit is used to establish connections. The connection request has SYN = 1 and ACK = 0
bear an acknowledgement, so it has SYN = 1 and ACK = 1. In essence the SYN bit is used to
denote CONNECTION REQUEST and CONNECTION ACCEPTED, with the ACK bit used to
The FIN bit is used to release a connection. It specifies that the sender has no more data to
data indefinitely. Both SYN and FIN segments have sequence numbers and are thus
Flow control in TCP is handled using a variable-sized sliding window. The Window size field tells
how many bytes may be sent starting at the byte acknowledged. A Window size field of 0 is
TCP, acknowledgements and permission to send additional data are completely decoupled. In
effect, a receiver can say: I have received bytes up through k but I do not want any more just
A Checksum is also provided for extra reliability. It checksums the header, the data, and the
conceptual pseudoheader shown in Fig. 6-30. When performing this computation, the TCP
Figure 6-30. The pseudoheader included in the TCP checksum.
The pseudoheader contains the 32-bit IP addresses of the source and destination machines,
the protocol number for TCP (6), and the byte count for the TCP segment (including the
header). Including the pseudoheader in the TCP checksum computation helps detect
misdelivered packets, but including it also violates the protocol hierarchy since the IP
addresses in it belong to the IP layer, not to the TCP layer. UDP uses the same pseudoheader
most important option is the one that allows each host to specify the maximum TCP payload it
hosts are required to accept TCP segments of 536 + 20 = 556 bytes. The maximum segment
For lines with high bandwidth, high delay, or both, the 64-KB window is often a problem. On a
T3 line (44.736 Mbps), it takes only 12 msec to output a full 64-KB window. If the round-trip
even worse. A larger window size would allow the sender to keep pumping data out, but using
the 16-bit Window size field, there is no way to express such a size. In RFC 1323, a Window
thus allowing windows of up to 230 bytes. Most TCP implementations now support this option.
Another option proposed by RFC 1106 and now widely implemented is the use of the selective
number of good ones, the normal TCP protocol will eventually time out and retransmit all the
protocol). RFC 1106 introduced NAKs to allow the receiver to ask for a specific segment (or
6.5.5 TCP Connection Establishment
Connections are established in TCP by means of the three-way handshake discussed in Sec.
connection by executing the LISTEN and ACCEPT primitives, either specifying a specific source
The other side, say, the client, executes a CONNECT primitive, specifying the IP address and
port to which it wants to connect, the maximum TCP segment size it is willing to accept, and
optionally some user data (e.g., a password). The CONNECT primitive sends a TCP segment
with the SYN bit on and ACK bit off and waits for a response.
When this segment arrives at the destination, the TCP entity there checks to see if there is a
process that has done a LISTEN on the port given in the Destination port field. If not, it sends
a reply with the RST bit on to reject the connection.
If some process is listening to the port, that process is given the incoming TCP segment. It can
back. The sequence of TCP segments sent in the normal case is shown in Fig. 6-31(a). Note
that a SYN segment consumes 1 byte of sequence space so that it can be acknowledged
Figure 6-31. (a) TCP connection establishment in the normal case. (b)
The initial sequence number on a connection is not 0 for the reasons we discussed earlier. A
6.5.6 TCP Connection Release
Although TCP connections are full duplex, to understand how connections are released it is
independently of its sibling. To release a connection, either party can send a TCP segment with
the FIN bit set, which means that it has no more data to transmit. When the FIN is
released. Normally, four TCP segments are needed to release a connection, one FIN and one
ACK for each direction. However, it is possible for the first ACK and the second FIN to be
simultaneously, both ends of a TCP connection may send FIN segments at the same time.
To avoid the two-army problem, timers are used. If a response to a FIN is not forthcoming
within two maximum packet lifetimes, the sender of the FIN releases the connection. The other
6.5.7 TCP Connection Management Modeling
Figure 6-32. The states used in the TCP connection management finite
Each connection starts in the CLOSED state. It leaves that state when it does either a passive
open (LISTEN), or an active open (CONNECT). If the other side does the opposite one, a
connection is established and the state becomes ESTABLISHED. Connection release can be
initiated by either side. When it is complete, the state returns to CLOSED.
event/action pair. The event can either be a user-initiated system call (CONNECT, LISTEN,
SEND, or CLOSE), a segment arrival (SYN, FIN, ACK, or RST), or, in one case, a timeout of
twice the maximum packet lifetime. The action is the sending of a control segment (SYN, FIN,
or RST) or nothing, indicated by —. Comments are shown in parentheses.
Figure 6-33. TCP connection management finite state machine. The
program on the client machine issues a CONNECT request, the local TCP entity creates a
connection record, marks it as being in the SYN SENT state, and sends a SYN segment. Note
SYN+ACK arrives, TCP sends the final ACK of the three-way handshake and switches into the
ESTABLISHED state. Data can now be sent and received.
When an application is finished, it executes a CLOSE primitive, which causes the local TCP
entity to send a FIN segment and wait for the corresponding ACK (dashed box marked active
close). When the ACK arrives, a transition is made to state FIN WAIT 2 and one direction of the
connection is now closed. When the other side closes, too, a FIN comes in, which is
acknowledged. Now both sides are closed, but TCP waits a time equal to the maximum packet
acknowledgement was lost. When the timer goes off, TCP deletes the connection record.
LISTEN and settles down to see who turns up. When a SYN comes in, it is acknowledged and
the server goes to the SYN RCVD state. When the server's SYN is itself acknowledged, the
three-way handshake is complete and the server goes to the ESTABLISHED state. Data
When the client is done, it does a CLOSE, which causes a FIN to arrive at the server (dashed
box marked passive close). The server is then signaled. When it, too, does a CLOSE, a FIN is
6.5.8 TCP Transmission Policy
As mentioned earlier, window management in TCP is not directly tied to acknowledgements as
Figure 6-34. Window management in TCP.
removed some data from the buffer, at which time TCP can advertise a larger window.
reannounce the next byte expected and window size. The TCP standard explicitly provides this
Fig. 6-34, when the first 2 KB of data came in, TCP, knowing that it had a 4-KB window
available, would have been completely correct in just buffering the data until another 2 KB
came in, to be able to transmit a segment with a 4-KB payload. This freedom can be exploited
worst case, when a character arrives at the sending TCP entity, TCP creates a 21-byte TCP
segment, which it gives to IP to send as a 41-byte IP datagram. At the receiving side, TCP
immediately sends a 40-byte acknowledgement (20 bytes of TCP header and 20 bytes of IP
header). Later, when the editor has read the byte, TCP sends a window update, moving the
One approach that many TCP implementations use to optimize this situation is to delay
operating inefficiently by sending 41-byte packets containing 1 byte of data. A way to reduce
TCP segment and start buffering again until they are all acknowledged. If the user is typing
Nagle's algorithm is widely used by TCP implementations, but there are times when it is better
to disable it. In particular, when an X Windows application is being run over the Internet,
mouse movements have to be sent to the remote computer. (The X Window system is the
windowing system used on most UNIX systems.) Gathering them up to send in bursts makes
Another problem that can degrade TCP performance is the silly window syndrome (Clark,
1982). This problem occurs when data are passed to the sending TCP entity in large blocks,
problem, look at Fig. 6-35. Initially, the TCP buffer on the receiving side is full and the sender
from the TCP stream. This action makes the receiving TCP happy, so it sends a window update
was trying to solve the problem caused by the sending application delivering data to TCP a
data up from TCP a byte at a time. Both solutions are valid and can work together. The goal is
The receiving TCP can go further in improving performance than just doing window updates in
large units. Like the sending TCP, it can also buffer data, so it can block a READ request from
calls to TCP, and hence the overhead. Of course, it also increases the response time, but for
6.5.9 TCP Congestion Control
tries to manage congestion, most of the heavy lifting is done by TCP because the real solution
network until an old one leaves (i.e., is delivered). TCP attempts to achieve this goal by
difficult. A timeout caused by a lost packet could have been caused by either (1) noise on a
transmission timeouts on the Internet are due to congestion. All the Internet TCP algorithms
Before discussing how TCP reacts to congestion, let us first describe what it does to try to
Figure 6-36. (a) A fast network feeding a low-capacity receiver. (b) A
receiver says ''Send 8 KB'' but the sender knows that bursts of more than 4 KB clog the
network, it sends 4 KB. On the other hand, if the receiver says ''Send 8 KB'' and the sender
knows that bursts of up to 32 KB get through effortlessly, it sends the full 8 KB requested.
TCP implementations are required to support it.
threshold, initially 64 KB, in addition to the receiver and congestion windows. When a timeout
segment size here is 1024 bytes. Initially, the congestion window was 64 KB, but a timeout
occurred, so the threshold is set to 32 KB and the congestion window to 1 KB for transmission
0 here. The congestion window then grows exponentially until it hits the threshold (32 KB).
to half the current window (by now 40 KB, so half is 20 KB), and slow start is initiated all over
no more timeouts and the receiver's window does not change size. As an aside, if an ICMP
SOURCE QUENCH packet comes in and is passed to TCP, this event is treated the same way as
a timeout. An alternative (and more recent approach) is described in RFC 3168.
6.5.10 TCP Timer Management
TCP uses multiple timers (at least conceptually) to do its work. The most important of these is
arrival times for TCP.
TCP is faced with a radically different environment. The probability density function for the
time it takes for a TCP acknowledgement to come back looks more like Fig. 6-38(b) than Fig.
deciding on the timeout interval is also difficult. If the timeout is set too short, say, T 1 in Fig.
it is set too long, (e.g., T 2), performance will suffer due to the long retransmission delay
TCP is due to Jacobson (1988) and works as follows. For each connection, TCP maintains a
variable, RTT, that is the best current estimate of the round-trip time to the destination in
acknowledgement gets back before the timer expires, TCP measures how long the
acknowledgement took, say, M. It then updates RTT according to the formula
Even given a good value of RTT, choosing a suitable retransmission timeout is a nontrivial
matter. Normally, TCP uses βRTT, but the trick is choosing β. In the initial implementations, β
variable, D, the deviation. Whenever an acknowledgement comes in, the difference between
the expected and observed values, | RTT - M |, is computed. A smoothed value of this is
maintained in D by the formula
where α may or may not be the same value used to smooth RTT. While D is not exactly the
computed using only integer adds, subtracts, and shifts—a big plus. Most TCP implementations
One problem that occurs with the dynamic estimation of RTT is what to do when a segment
contaminate the estimate of RTT. Phil Karn discovered this problem the hard way. He is an
amateur radio enthusiast interested in transmitting TCP/IP packets by ham radio, a notoriously
do not update RTT on any segments that have been retransmitted. Instead, the timeout is
algorithm. Most TCP implementations use it.
The retransmission timer is not the only timer TCP uses. A second timer is the persistence
A third timer that some implementations use is the keepalive timer. When a connection has
The last timer used on each TCP connection is the one used in the TIMED WAIT state while
6.5.11 Wireless TCP and UDP
network layer. In particular, TCP should not care whether IP is running over fiber or over radio.
In practice, it does matter because most TCP implementations have been carefully optimized
Ignoring the properties of wireless transmission can lead to a TCP implementation that is
The principal problem is the congestion control algorithm. Nearly all TCP implementations
when a timer goes off, TCP slows down and sends less vigorously (e.g., Jacobson's slow start
a timeout is even harder, since it matters where the problem occurred. A solution proposed by
Bakne and Badrinath (1995), indirect TCP, is to split the TCP connection into two separate
Figure 6-39. Splitting a TCP connection into two connections.
disadvantage of the scheme is that it violates the semantics of TCP. Since each part of the
connection is a full TCP connection, the base station acknowledges each TCP segment in the
A different solution, due to Balakrishnan et al. (1995), does not break the semantics of TCP. It
One of the changes is the addition of a snooping agent that observes and caches TCP
snooping agent sees a TCP segment going out to the mobile host but does not see an
algorithm. With indirect TCP, the congestion control algorithm will never be started unless
generates a request for a selective repeat of the missing bytes by using a TCP option.
knowing about it and without changing the TCP semantics.
While UDP does not suffer from the same problems as TCP, wireless communication also
introduces difficulties for it. The main trouble is that programs use UDP expecting it to be
perfect. In a wireless environment, UDP will be far from perfect. For programs that can recover
from lost UDP messages but only at considerable cost, suddenly going from an environment
Somewhat related to this is how to get the WWW page for the local cell, even if its name is not
known. Also, WWW page designers tend to assume lots of bandwidth is available. Putting a
As wireless networking becomes more common, the problems of running TCP over it become
6.5.12 Transactional TCP
operation is idempotent, UDP can simply be used, However, if these conditions are not met,
using UDP is less attractive. For example, if the reply can be quite large, then the pieces must
application is required to reinvent TCP.
Clearly, that is unattractive, but using TCP itself is also unattractive. The problem is the
efficiency. The normal sequence of packets for doing an RPC over TCP is shown in Fig. 6-40(a).
Figure 6-40. (a) RPC using normal TCP. (b) RPC using T/TCP.
client sends a SYN packet to establish a connection.
server sends an ACK packet to acknowledge the SYN packet.
client sends a FIN packet to indicate that it is done sending.
server acknowledges the request and the FIN.
server sends a FIN packet to indicate that it is also done.
client acknowledges the server's FIN.
Note that this is the best case. In the worst case, the client's request and FIN are
acknowledged separately, as are the server's reply and FIN.
The question quickly arises of whether there is some way to combine the efficiency of RPC
using UDP (just two messages) with the reliability of TCP. The answer is: Almost. It can be
done with an experimental TCP variant called T/TCP (Transactional TCP), which is described
transfer of data during setup. The T/TCP protocol is illustrated in Fig. 6-40(b). The client's first
packet contains the SYN bit, the request itself, and the FIN. In effect it says: I want to
establish a connection, here is the data, and I am done.
respond. If the reply fits in one packet, it gives the reply of Fig. 6-40(b), which says: I
acknowledge your FIN, here is the answer, and I am done. The client then acknowledges the
server's FIN and the protocol terminates in three messages.
the FIN bit, in which case it can send multiple packets before closing its direction.
It is probably worth mentioning that T/TCP is not the only proposed improvement to TCP.
Another proposal is SCTP (Stream Control Transmission Protocol). Its features include
have intentionally delayed this discussion until we studied the transport layer in TCP in order to
be able to use TCP as an example in various places.
Fast TPDU processing.
As an aside, we need a generic name for the units exchanged by transport entities. The TCP
term, segment, is confusing at best and is never used outside the TCP world in this context.
The ATM terms (CS-PDU, SAR-PDU, and CPCS-PDU) are specific to ATM. Packets clearly refer
mean both TPDU and packet together, we will use packet as the collective term, as in ''The
CPU must be fast enough to process incoming packets in real time.'' By this we mean both the
network layer packet and the TPDU encapsulated in it.
gigabit communication line is attached to a low-end PC, the poor CPU will not be able to
Overloads can also be synchronously triggered. For example, if a TPDU contains a bad
send back an error notification. Now consider what could happen if a bad TPDU is broadcast to
storm could cripple the network. UDP suffered from this problem until the protocol was
changed to cause hosts to refrain from responding to errors in UDP TPDUs sent to broadcast
A second example of synchronous overload is what happens after an electrical power failure.
rebooting. A typical reboot sequence might require first going to some (DHCP) server to learn
CPU power and memory but not enough of the memory has been allocated for buffer space,
Another tuning issue is setting timeouts correctly. When a TPDU is sent, a timer is typically set
to guard against loss of the TPDU. If the timeout is set too short, unnecessary retransmissions
a TPDU is lost. Other tunable parameters include how long to wait for data on which to
a 64-KB burst of data from San Diego to Boston in order to fill the receiver's 64-KB buffer.
6-41(b), all the TPDUs are out on the fiber. The lead TPDU will now be somewhere in the
After 20 msec, the lead TPDU hits Boston, as shown in Fig. 6-41(c) and is acknowledged.
A useful quantity to keep in mind when analyzing network performance is the bandwidthdelay product. It is obtained by multiplying the bandwidth (in bits/sec) by the round-trip
jitter. Having a short mean transmission time is not enough. A small standard deviation is also
TPDU to be acknowledged is a key measurement. Other measurements are made with
Do not measure the time to send one TPDU, but repeat the measurement, say, one million
To measure the time to send a TPDU, for example, the system clock (say, in milliseconds)
true TPDU send time is 300 µsec, the difference between the two readings will be either 0 or 1,
A.M., that might be precisely when the automatic backup program begins copying all the disks
10 MB, the test loop could open, read, and close two 10-MB files on each pass, in an attempt
Buffering can have a similar effect. One popular TCP/IP performance utility program has been
known to report that UDP can achieve a performance substantially higher than the physical line
allows. How does this occur? A call to UDP normally returns control as soon as the message
buffer space, timing 1000 UDP calls does not mean that all the data have been sent. Most of
substitute for good design in the first place. A poorly-designed network can be improved only
Rule #1: CPU Speed Is More Important Than Network Speed
overhead dominate actual time on the wire. For example, in theory, the minimum RPC time on
minimum (64-byte) reply. In practice, overcoming the software overhead and getting the RPC
out onto the fiber fast enough and having the receiving CPU process them as fast as they come
in. In short, if you double the CPU speed, you often can come close to doubling the
Processing a TPDU has a certain amount of overhead per TPDU (e.g., header processing) and a
being sent, the per-byte overhead is the same no matter what the TPDU size is. However,
using 128-byte TPDUs means 32 times as much per-TPDU overhead as using 4-KB TPDUs. This
In addition to the TPDU overhead, there is overhead in the lower layers to consider. Each
the CPU pipeline, interferes with the cache, requires a change to the memory management
context, and forces a substantial number of CPU registers to be saved. An n-fold reduction in
on each packet are very wasteful of CPU time and will have a devastating effect on network
incoming packet to be copied three or four times before the TPDU enclosed in it is delivered.
A clever operating system will copy a word at a time, but it is not unusual to require about five
word copied requires 15/4 or about four instructions per byte copied. On a 500-MIPS CPU, an
above, we have assumed that a 500-MIPS machine can execute any 500 million
Not having it occur in the first place is better. Congestion avoidance is like getting your DTP
side. A timer that takes too long to expire adds a small amount
connection in the (unlikely) event of a TPDU being lost. A timer
not have uses up scarce CPU time, wastes bandwidth, and puts
6.6.4 Fast TPDU Processing
TPDU processing overhead has two components: overhead per TPDU and overhead per byte.
Both must be attacked. The key to fast TPDU processing is to separate out the normal case
needed to get into the ESTABLISHED state, once there, TPDU processing is straightforward
Let us begin by examining the sending side in the ESTABLISHED state when there are data to
sending process. In Fig. 6-44, the sending process traps into the kernel to do the SEND. The
ESTABLISHED, neither side is trying to close the connection, a regular (i.e., not an out-ofband) full TPDU is being sent, and enough window space is available at the receiver. If all
that change from TPDU to TPDU are then overwritten in the buffer. Frequently, these fields are
easily derived from state variables, such as the next sequence number. A pointer to the full
TPDU header plus a pointer to the user data are then passed to the network layer. Here the
As an example of how this principle works in practice, let us consider TCP/IP. Fig. 6-45(a)
shows the TCP header. The fields that are the same between consecutive TPDUs on a one-way
can then hand the header and data to a special IP procedure for sending a regular, maximum
TPDU. IP then copies its five-word prototype header [see Fig. 6-45(b)] into the buffer, fills in
Figure 6-45. (a) TCP header. (b) IP header. In both cases, the shaded
connection record for the incoming TPDU. For TCP, the connection record can be stored in a
hash table for which some simple function of the two IP addresses and two ports is the key.
The TPDU is then checked to see if it is a normal one: the state is ESTABLISHED, neither side
is trying to close the connection, the TPDU is a full one, no special flags are set, and the
conditions are met, a special fast path TCP procedure is called.
then having a special procedure handle that case is called header prediction. Many TCP
are used together, it is possible to get TCP to run at 90 percent of the speed of a local
They are set to guard against TPDU loss, but most TPDUs arrive correctly and their
A common scheme is to use a linked list of timer events sorted by expiration time. The head
A more efficient approach can be used if the maximum timer interval is bounded and known in
corresponds to one clock tick. The current time shown is T = 4. Timers are scheduled to expire
entry is just made in slot 11. Similarly, if the timer set for T + 10 has to be canceled, the list
Fig. 6-46 cannot accommodate timers beyond T + 15.
Figure 6-46. A timing wheel.
full speed took over 1 week to cycle through the sequence numbers. To the TCP designers, 232
infinity since a sender can cycle through the sequence space while old packets still exist. RFC
A second problem is that communication speeds have improved much faster than computing
are counting on you.) In the 1970s, the ARPANET ran at 56 kbps and had computers that ran
at about 1 MIPS. Packets were 1008 bits, so the ARPANET was capable of delivering about 56
instructions processing a packet. Of course, doing so would soak up the entire CPU, but it
could devote 9000 instructions per packet and still have half the CPU left to do real work.
Compare these numbers to 1000-MIPS computers exchanging 1500-byte packets over a
must be completed in 6.25 µsec if we want to reserve half the CPU for applications. In 6.25
µsec, a 1000-MIPS computer can execute 6250 instructions, only 1/3 of what the ARPANET
hosts had available. Furthermore, modern RISC instructions do less per instruction than the
old CISC instructions did, so the problem is even worse than it appears. The conclusion is this:
A third problem is that the go back n protocol performs poorly on lines with a large bandwidthdelay product. Consider, for example, a 4000-km line operating at 1 Gbps. The round-trip
A fourth problem is that gigabit lines are fundamentally different from megabit lines in that
protocols, such as RPC, have an inherent upper bound on their performance. This limit is
A fifth problem that is worth mentioning is not a technological or protocol one like the others,
multimedia, the variance in the packet arrival times is as important as the mean delay itself. A
A tempting way to go fast is to build fast network interfaces in hardware. The difficulty with
board with a second CPU and its own program. To make sure the network coprocessor is
cheaper than the main CPU, it is often a slower chip. The consequence of this design is that
much of the time the main (fast) CPU is idle waiting for the second (slow) CPU to do the critical
work. It is a myth to think that the main CPU has other work to do while waiting. Furthermore,
best approach is to make the protocols simple and have the main CPU do the work.
A second example of feedback is Jacobson's slow start algorithm. This algorithm makes
bandwidth. A more efficient scheme is to have the sender, receiver, and network all reserve
Finally, a few words about the protocol software are appropriate. A key thought is
A second software issue is minimizing copying time. As we saw earlier, copying data is often
1024 back-to-back MOVE instructions (or 1024 load-store pairs). The copy routine is so critical
use, and release of connections. A common transport layer interface is the one provided by
The Internet has two main transport protocols: UDP and TCP. UDP is a connectionless protocol
that is mainly a wrapper for IP packets with the additional feature of multiplexing and
demultiplexing multiple processes using a single IP address. UDP can be used for client-server
interactions, for example, using RPC. It can also be used for building real-time protocols such
as RTP.
The main Internet transport protocol is TCP. It provides a reliable bidirectional byte stream. It
Internet, so hosts must be prepared to do reassembly. A great deal of work has gone into
optimizing TCP performance, using algorithms from Nagle, Clark, Jacobson, Karn, and others.
Wireless links add a variety of complications to TCP. Transactional TCP is an extension to TCP
Network performance is typically dominated by protocol and TPDU processing overhead, and
number of TPDUs, context switches, and times each TPDU is copied. For gigabit networks,
1. In our example transport primitives of Fig. 6-2, LISTEN is a blocking call. Is this strictly
5. Why does the maximum packet lifetime, T, have to be large enough to ensure that not
,7). After writing a massive FORTRAN program to analyze the data, our implementer
14. Why does UDP exist? Would it not have been enough to just let user processes send
raw IP packets?
15. Consider a simple application-level protocol built on top of UDP that allows a client to
16. A client sends a 128-byte request to a server located 100 km away over a 1-gigabit
18. Both UDP and TCP use port numbers to identify the destination entity when delivering a
message. Give two reasons for why these protocols invented a new abstract ID (port
19. What is the total size of the minimum TCP MTU, including TCP and IP overhead but not
20. Datagram fragmentation and reassembly are handled by IP and are invisible to TCP.
Does this mean that TCP does not have to worry about data arriving in the wrong
21. RTP is used to transmit CD-quality audio, which makes a pair of 16-bit samples 44,100
must RTP transmit?
22. Would it be possible to place the RTP code in the operating system kernel, along with
the UDP code? Explain your answer.
23. A process on host 1 has been assigned port p, and a process on host 2 has been
assigned port q. Is it possible for there to be two or more TCP connections between
ACK bit in the fourth word. Does this really add anything? Why or why not?
25. The maximum payload of a TCP segment is 65,495 bytes. Why was such a strange
26. Describe two ways to get into the SYN RCVD state of Fig. 6-33.
congestion. The receive window is 24 KB and the maximum segment size is 2 KB. How
29. Suppose that the TCP congestion window is set to 18 KB and a timeout occurs. How big
the maximum segment size is 1 KB.
30. If the TCP round-trip time, RTT, is currently 30 msec and the following
RTT estimate using the Jacobson algorithm? Use α = 0.9.
31. A TCP machine is sending full windows of 65,535 bytes over a 1-Gbps channel that has
32. What is the fastest line speed at which a host can blast out 1500-byte TCP payloads
around? Take TCP, IP, and Ethernet overhead into consideration. Assume that Ethernet
33. In a network that has a maximum TPDU size of 128 bytes, a maximum TPDU lifetime of
34. Suppose that you are measuring the time to receive a TPDU. When an interrupt occurs,
you read out the system clock in milliseconds. When the TPDU is fully processed, you
times. How long does it take to receive a TPDU?
35. A CPU executes instructions at the rate of 1000 MIPS. Data can be copied 64 bits at a
numbers? Assume that each byte has its own sequence number, as TCP does.
37. Give one advantage of RPC on UDP over transactional TCP. Give one advantage of
T/TCP over RPC.
38. In Fig. 6-40(a), we see that it takes 9 packets to complete the RPC. Are there any
giving it only 6250 instructions to process it and leaving half the CPU time for
ARPANET-sized packet (128 bytes). In both cases, assume that the packet sizes given
bandwidth. Consider a MAN with the average source and destination 20 km apart. At
transmission delay for a 1-KB packet?
(2) Ethernet (10 Mbps), (3) T3 (45 Mbps), and (4) STS-3 (155 Mbps). Assume an RTT
of 100 msec. Recall that a TCP header has 16 bits reserved for Window Size. What are
simple, have all the data travel from machine A to machine B, and none the other way.
Experiment with different buffer allocation strategies at B, such as dedicating buffers to
3. Design and implement a chat system that allows multiple groups of users to chat. A
chat coordinator resides at a well-known network address, uses UDP for communication
session directory. There is one chat server per chat session. A chat server uses TCP for
communication with clients. A chat client allows users to start, join, and leave a chat
applications themselves. The item in question is DNS, which handles naming within the
7.1 DNS—The Domain Name System
network (e.g., IP) addresses, these addresses are hard for people to remember. Also, sending
e-mail to tana@128.111.24.41 means that if Tana's ISP or organization moves the mail server
to a different machine with a different IP address, her e-mail address has to change.
Consequently, ASCII names were introduced to decouple machine names from machine
required to convert the ASCII strings to network addresses. In the following sections we will
Way back in the ARPANET, there was simply a file, hosts.txt, that listed all the hosts and their
IP addresses. Every night, all the hosts would fetch it from the site at which it was maintained.
international network due to the load and latency. To solve these problems, DNS (the Domain
The essence of DNS is the invention of a hierarchical, domain-based naming scheme and a
mapping host names and e-mail destinations to IP addresses but can also be used for other
purposes. DNS is defined in RFCs 1034 and 1035.
Very briefly, the way DNS is used is as follows. To map a name onto an IP address, an
a UDP packet to a local DNS server, which then looks up the name and returns the IP address
to the resolver, which then returns it to the caller. Armed with the IP address, the program can
then establish a TCP connection with the destination or send it UDP packets.
7.1.1 The DNS Name Space
White Plains, N.Y. and the Marvin Anderson on Main St. in Austin, Texas. DNS works the same
of course). A leaf domain may contain a single host, or it may represent a company and
Figure 7-1. A portion of the Internet domain name space.
domains were com (commercial), edu (educational institutions), gov (the U.S. Federal
Government), int (certain international organizations), mil (the U.S. armed forces), net
for every country, as defined in ISO 3166.
In November 2000, ICANN approved four new, general-purpose, top-level domains, namely,
Microsystems might be eng.sun.com., rather than a UNIX-style name such as /com/sun/eng.
Domain names are case insensitive, so edu, Edu, and EDU mean the same thing. Component
example, if a VLSI group is started at Yale and wants to be known as vlsi.cs.yale.edu, it has to
same LAN, they can nevertheless have distinct domains. Similarly, even if computer science is
records associated with it. For a single host, the most common resource record is just its IP
name to DNS, what it gets back are the resource records associated with that name. Thus, the
primary function of DNS is to map domain names onto resource records.
A resource record is a five-tuple. Although they are encoded in binary for efficiency, in most
expositions, resource records are presented as ASCII text, one line per resource record. The
The third field of every resource record is the Class. For Internet information, it is always IN.
Figure 7-2. . The principal DNS resource record types for IPv4.
An SOA record provides the name of the primary source of information about the name
The most important record type is the A (Address) record. It holds a 32-bit IP address for
some host. Every Internet host must have at least one IP address so that other machines can
will have one type A resource record per network connection (and thus per IP address). DNS
The next most important record type is the MX record. It specifies the name of the host
willing to accept e-mail. The MX record can provide this information.
The NS records specify name servers. For example, every DNS database normally has an NS
CNAME records allow aliases to be created. For example, a person familiar with Internet
computer science department at M.I.T. might guess that paul@cs.mit.edu will work. Actually,
this address will not work, because the domain for M.I.T.'s computer science department is
lcs.mit.edu. However, as a service to people who do not know this, M.I.T. could create a
CNAME entry to point people and programs in the right direction. An entry like this one might
IN
CNAME
Like CNAME, PTR points to another name. However, unlike CNAME, which is really just a macro
definition, PTR is a regular DNS datatype whose interpretation depends on the context in which
it is found. In practice, it is nearly always used to associate a name with an IP address to allow
lookups of the IP address and return the name of the corresponding machine. These are called
HINFO records allow people to find out what kind of machine and operating system a domain
corresponds to. Finally, TXT records allow domains to identify themselves in arbitrary ways.
Finally, we have the Value field. This field can be a number, a domain name, or an ASCII
string. The semantics depend on the record type. A short description of the Value fields for
For an example of the kind of information one might find in the DNS database of a domain, see
Figure 7-3. A portion of a possible DNS database for cs.vu.nl
running UNIX and giving both of its IP addresses. Then three choices are given for handling e448
to change its World Wide Web server without invalidating the address people use to get to it. A
information provided contains the IP address, the primary and secondary mail drops, and
information about the machine. Then comes an entry for a non-UNIX system that is not
What are not shown (and are not in this file) are the IP addresses used to look up the top-level
domain, they are not in this file. They are supplied by the root servers, whose IP addresses are
present in a system configuration file and loaded into the DNS cache when the DNS server is
the IP addresses of all the top-level domain servers. Thus, if a machine knows the IP address
of at least one root server, it can look up any DNS name.
In theory at least, a single name server could contain the entire DNS database and respond to
To avoid the problems associated with having only a single source of information, the DNS
Figure 7-4. Part of the DNS name space showing the division into
flits.cs.vu.nl wants to know the IP address of the host linda.cs.yale.edu. In step 1, it sends a
type (A) and the class (IN).
sends a UDP packet to the server for edu given in its database (see Fig. 7-5), edu-server.net.
long to cache records. If a certain machine has had the same IP address for years, it may be
It is also worth pointing out that when a DNS client fails to get a response before its timer
While DNS is extremely important to the correct functioning of the Internet, all it really does is
map symbolic names for machines onto their IP addresses. It does not help locate people,
has been defined, called LDAP (Lightweight Directory Access Protocol). It is a simplified
version of the OSI X.500 directory service and is described in RFC 2251. It organizes
E-mail, like most other forms of communication, has its own conventions and styles. In
E-mail is full of jargon such as BTW (By The Way), ROTFL (Rolling On The Floor Laughing), and
IMHO (In My Humble Opinion). Many people also use little ASCII symbols called smileys or
emoticons in their e-mail. A few of the more interesting ones are reproduced in Fig. 7-6. For
ARPANET e-mail proposals were published as RFC 821 (transmission protocol) and RFC 822
(message format). Minor revisions, RFC 2821 and RFC 2822, have become Internet standards,
but everyone still refers to Internet e-mail as RFC 822.
In 1984, CCITT drafted its X.400 recommendation. After two decades of competition, e-mail
systems based on RFC 822 are widely used, whereas those based on X.400 have disappeared.
The reason for RFC 822's success is not that it is so good, but that X.400 was so poorly
simple-minded, but working, RFC 822-based e-mail system and a supposedly truly wonderful,
but nonworking, X.400 e-mail system, most organizations chose the former. Perhaps there is a
system is not very reliable, so I guess the electronic subpoena just got lost somewhere'').
E-mail is now widely used within industry for intracompany communication. It allows far-flung
A key idea in e-mail systems is the distinction between the envelope and its contents. The
E-mail systems have two basic parts, as we have seen: the user agents and the message
transfer agents. In this section we will look at the user agents. A user agent is normally a
Sending E-mail
user agents expect addresses of the form user@dns-address. Since we have studied DNS
However, it is worth noting that other forms of addressing exist. In particular, X.400 addresses
look radically different from DNS addresses. They are composed of attribute = value pairs
/C=US/ST=MASSACHUSETTS/L=CAMBRIDGE/PA=360 MEMORIAL DR./CN=KEN SMITH/
job title). Although X.400 names are considerably less convenient than DNS names, most email systems have aliases (sometimes called nicknames) that allow users to enter or select a
person's name and get the correct e-mail address. Consequently, even with X.400 addresses,
personal mailbox of Prof. Gabriel O. Birders.
Reading E-mail
starting up the user agent, the user asks for a summary of his e-mail. A display like that of
example, the first field is the message number. The second field, Flags, can contain a K,
meaning that the message is not new but was read previously and kept in the mailbox; an A,
meaning that the message has already been answered; and/or an F, meaning that the
typically used one-character commands for performing these tasks, such as T (type message),
A (answer message), D (delete message), and F (forward message). An argument specified
E-mail has come a long way from the days when it was just file transfer. Sophisticated user
we will look at basic ASCII e-mail using RFC 822. After that, we will look at multimedia
extensions to RFC 822.
RFC 822
Messages consist of a primitive envelope (described in RFC 821), some number of header
single line of ASCII text containing the field name, a colon, and, for most fields, a value. RFC
header fields. Although it was revised in RFC 2822, completely redoing it was not possible due
gives the DNS address of the primary recipient. Having multiple recipients is also allowed. The
Figure 7-9. RFC 822 header fields related to message transport.
A line containing Received: is added by each message transfer agent along the way. The line
In addition to the fields of Fig. 7-9, RFC 822 messages may also contain a variety of header
Figure 7-10. Some fields used in the RFC 822 message header.
The RFC 822 document explicitly says that users are allowed to invent new headers for their
own private use, provided that these headers start with the string X-. It is guaranteed that no
future headers will use names starting with X-, to avoid conflicts between official and private
headers. Sometimes wiseguy undergraduates make up fields like X-Fruit-of-the-Day: or XDisease-of-the-Week:, which are legal, although not always illuminating.
people terminate their messages with elaborate signatures, including simple ASCII cartoons,
(e.g., The XYZ Corporation is not responsible for my opinions; in fact, it cannot even
MIME—The Multipurpose Internet Mail Extensions
In the early days of the ARPANET, e-mail consisted exclusively of text messages written in
English and expressed in ASCII. For this environment, RFC 822 did the job completely: it
A solution was proposed in RFC 1341 and updated in RFCs 2045–2049. This solution, called
MIME (Multipurpose Internet Mail Extensions) is now widely used. We will now describe
it. For additional information about MIME, see the RFCs.
The basic idea of MIME is to continue to use the RFC 822 format, but to add structure to the
message body and define encoding rules for non-ASCII messages. By not deviating from RFC
822, MIME messages can be sent using the existing mail programs and protocols. All that has
MIME defines five new message headers, as shown in Fig. 7-11. The first of these simply tells
the user agent receiving the message that it is dealing with a MIME message, and which
version of MIME it uses. Any message not containing a MIME-Version: header is assumed to be
Figure 7-11. RFC 822 headers added by MIME.
The Content-Description: header is an ASCII string telling what is in the message. This header
just ASCII text. ASCII characters use 7 bits and can be carried directly by the e-mail protocol
ASCII armor. In this scheme, groups of 24 bits are broken up into four 6-bit units, with each
unit being sent as a legal ASCII character. The coding is ''A'' for 0, ''B'' for 1, and so on,
For messages that are almost entirely ASCII but with a few non-ASCII characters, base64
is used. This is just 7-bit ASCII, with all the characters above 127 encoded as an equal sign
the message body. Seven types are defined in RFC 2045, each of which has one or more
types and subtypes specified in RFC 2045 is given in Fig. 7-12. Many new ones have been
Figure 7-12. The MIME types and subtypes defined in RFC 2045.
Let us now go briefly through the list of types. The text type is for straight ASCII text. The
MIME with only a few extra headers.
markup language is based on SGML, the Standard Generalized Markup Language also used as
the basis for the World Wide Web's HTML. For example, the message
When the Web became popular, a new subtype text/html was added (in RFC 2854) to allow
Web pages to be sent in RFC 822 e-mail. A subtype for the extensible markup language,
text/xml, is defined in RFC 3023. We will study HTML and XML later in this chapter.
The next MIME type is image, which is used to transmit still pictures. Many formats are widely
of these, GIF and JPEG, are built into nearly all browsers, but many others exist as well and
modestly-named Moving Picture Experts Group (MPEG), but others have been added since. In
addition to audio/basic, a new audio type, audio/mpeg was added in RFC 3003 to allow people
a C compiler or a database management system in PostScript. Displaying an incoming
useful for forwarding e-mail, for example. When a complete RFC 822 message is encapsulated
Instead of including the MPEG file in the message, an FTP address is given and the receiver's
sent in plain ASCII, in enriched text, and in PostScript. A properly-designed user agent getting
text. If neither of these were possible, the flat ASCII text would be displayed. The parts should
be ordered from simplest to most complex to help recipients with pre-MIME user agents make
some sense of the message (e.g., even a pre-MIME user can read flat ASCII text).
A multimedia example is shown in Fig. 7-13. Here a birthday greeting is transmitted both as
Figure 7-13. A multipart message containing enriched and audio
ASCII.
SMTP—The Simple Mail Transfer Protocol
Within the Internet, e-mail is delivered by having the source machine establish a TCP
that speaks SMTP (Simple Mail Transfer Protocol). This daemon accepts incoming
SMTP is a simple ASCII protocol. After establishing the TCP connection to port 25, the sending
acknowledges it. No checksums are needed because TCP provides a reliable byte stream. If
directions, the connection is released. A sample dialog for sending the message of Fig. 7-13,
including the numerical codes used by SMTP, is shown in Fig. 7-14. The lines sent by the client
are marked C:. Those sent by the server are marked S:.
A few comments about Fig. 7-14 may be helpful. The first command from the client is indeed
HELO. Of the various four-character abbreviations for HELLO, this one has numerous
In Fig. 7-14, the message is sent to only one recipient, so only one RCPT command is used.
To get a better feel for how SMTP and some of the other protocols described in this chapter
work, try them out. In all cases, first go to a machine connected to the Internet. On a UNIX
substituting the DNS name of your ISP's mail server for mail.isp.com. On a Windows system,
a telnet (i.e., TCP) connection to port 25 on that machine. Port 25 is the SMTP port (see Fig. 627 for some common ports). You will probably get a response something like this:
The first three lines are from telnet telling you what it is doing. The last line is from the SMTP
HELP
the client's HELO command.
It is worth noting that the use of lines of ASCII text for commands is not an accident. Most
Internet protocols work this way. Using ASCII text makes the protocols easy to test and
Even though the SMTP protocol is completely well defined, a few problems can still arise. One
exceeding 64 KB. Another problem relates to timeouts. If the client and server have different
1 holds mailing list A and host 2 holds mailing list B and each list contains an entry for the
To get around some of these problems, extended SMTP (ESMTP) has been defined in RFC
2821. Clients wanting to use it should send an EHLO message instead of HELO initially. If this
is rejected, then the server is a regular SMTP server, and the client should proceed in the usual
way. If the EHLO is accepted, then new commands and parameters are allowed.
and receiving e-mail. As we saw, e-mail is delivered by having the sender establish a TCP
when all ARPANET (and later Internet) hosts were, in fact, on-line all the time to accept TCP
However, with the advent of people who access the Internet by calling their ISP over a
e-mail and Carolyn is not currently on-line? Elinor cannot establish a TCP connection to Carolyn
and thus cannot run the SMTP protocol.
One solution is to have a message transfer agent on an ISP machine accept e-mail for its
customers and store it in their mailboxes on an ISP machine. Since this agent can be on-line
the ISP's message transfer agent? The solution to this problem is to create another protocol
ISP's machine) and allow e-mail to be copied from the ISP to the user. One such protocol is
POP3 (Post Office Protocol Version 3), which is described in RFC 1939.
the Internet) is illustrated in Fig. 7-15(a). A situation in which the sender is (currently) on-line
receiver has a dial-up connection to an ISP.
POP3 begins when the user starts the mail reader. The mail reader calls up the ISP (unless
there is already a connection) and establishes a TCP connection with the message transfer
where mail.isp.com represents the DNS name of your ISP's mail server. Telnet establishes a
TCP connection to port 110, on which the POP3 server listens. Upon accepting the TCP
connection, the server sends an ASCII message announcing that it is present. Usually, it
begins with +OK followed by a comment. An example scenario is shown in Fig. 7-16 starting
after the TCP connection has been established. As before, the lines marked C: are from the
client (user) and those marked S: are from the server (message transfer agent on the ISP's
a successful login, the client can then send over the LIST com
Then the client can retrieve messages using the RETR command and mark them for deletion
with DELE. When all messages have been retrieved (and possibly marked for deletion), the
client gives the QUIT command to terminate the transaction state and enter the update state.
When the server has deleted all the messages, it sends a reply and breaks the TCP connection.
Let us now briefly summarize how e-mail works for ISP customers. Elinor creates a message
message transfer agent sees that it is directed to carolyn@xyz.com so it uses DNS to look up
the MX record for xyz.com (where xyz.com is Carolyn's ISP). This query returns the DNS name
of xyz.com's mail server. The message transfer agent now looks up the IP address of this
machine using DNS again, for example, using gethostbyname. It then establishes a TCP
connection to the SMTP server on port 25 of this machine. Using an SMTP command sequence
TCP connection.
In due course of time, Carolyn boots up her PC, connects to her ISP, and starts her e-mail
program. The e-mail program establishes a TCP connection to the POP3 server at port 110 of
the ISP's mail server machine. The DNS name or IP address of this machine is typically
configured when the e-mail program is installed or the subscription to the ISP is made. After
the TCP connection has been established, Carolyn's e-mail program runs the POP3 protocol to
fetch the contents of the mailbox to her hard disk using commands similar to those of Fig. 716. Once all the e-mail has been transferred, the TCP connection is released. In fact, the
connection to the ISP can also be broken now, since all the e-mail is on Carolyn's hard disk. Of
course, to send a reply, the connection to the ISP will be needed again, so it is not generally
IMAP
For a user with one e-mail account at one ISP that is always accessed from one PC, POP3
home PC, from their laptop when on business trips, and from cybercafes when on so-called
This disadvantage gave rise to an alternative final delivery protocol, IMAP (Internet
Message Access Protocol), which is defined in RFC 2060. Unlike POP3, which basically
IMAP assumes that all the e-mail will remain on the server indefinitely in multiple mailboxes.
IMAP provides extensive mechanisms for reading messages or even parts of messages, a
transferred to the user's computer for permanent storage, IMAP provides mechanisms for
IMAP has many features, such as the ability to address mail not by arrival number as is done
IMAP can also accept outgoing e-mail for shipment to the destination as well as deliver
The general style of the IMAP protocol is similar to that of POP3 as shown in Fig. 7-16, except
that are there dozens of commands. The IMAP server listens to port 143. A comparison of
POP3 and IMAP is given in Fig. 7-17. It should be noted, however, that not every ISP supports
e-mail program, it is important to find out which protocol(s) it supports and make sure the ISP
Figure 7-17. A comparison of POP3 and IMAP.
Independently of whether POP3 or IMAP is used, many systems provide hooks for additional
Hi. I'm on vacation. I'll be back on the 24th of August. Have a nice summer.
personally read all his e-mail. Instead, he has produced a personal FAQ (Frequently Asked
John's FAQ gives his address, fax, and telephone numbers and tells how to contact his
maybe a personal FAQ is the ultimate status symbol.
message transfer agents listening to port 25 for incoming SMTP connections. To contact, say,
Hotmail, you have to acquire their DNS MX record, for example, by typing
on a UNIX system. Suppose that the mail server is called mx10.hotmail.com, then by typing
you can establish a TCP connection over which SMTP commands can be sent in the usual way.
attempts to get a TCP connection accepted.
7-8, only formatted as a Web page in HTML. The Web page is then sent to the browser for display.
The Web (also known as WWW) began in 1989 at CERN, the European center for nuclear
research. CERN has several accelerators at which large teams of scientists from the
The initial proposal for a web of linked documents came from CERN physicist Tim Berners-Lee
In 1994, CERN and M.I.T. signed an agreement setting up the World Wide Web Consortium
to another, now called hypertext, was invented by a visionary M.I.T. professor of electrical
Figure 7-18. (a) A Web page. (b) The page reached by clicking on
are named using URLs (Uniform Resource Locators). A typical URL is
We will explain URLs later in this chapter. For the moment, it is sufficient to know that a URL
has three parts: the name of the protocol (http), the DNS name of the machine where the
telephony that points to ITU's home page, which is http://www.itu.org/home/index.html. Let
The browser determines the URL (by seeing what was selected).
The browser asks DNS for the IP address of www.itu.org.
DNS replies with 156.106.192.32.
The browser makes a TCP connection to port 80 on 156.106.192.32.
The TCP connection is released.
the screen. In this way, when the performance is poor, the user can see if it is due to DNS not
language called HTML, which describes Web pages. We will discuss it in detail later in this
Although a browser is basically an HTML interpreter, most browsers have numerous buttons
Not all pages contain HTML. A page may consist of a formatted document in PDF format, an
icon in GIF format, a photograph in JPEG format, a song in MP3 format, a video in MPEG
format, or any one of hundreds of other file types. Since standard HTML pages may link to any
information includes the MIME type of the page (see Fig. 7-12). Pages of type text/html are
just displayed directly, as are pages in a few other built-in types. If the MIME type is not one
of the built-in ones, the browser consults its table of MIME types to tell it how to display the
page. This table associates a MIME type with a viewer.
There are two possibilities: plug-ins and helper applications. A plug-in is a code module that
Figure 7-20. (a) A browser plug-in. (b) A helper application.
plug-in's MIME type and to associate the plug-in with it. On UNIX, the installer is often a shell
exist independently of the browser, such as Adobe's Acrobat Reader for displaying PDF files or
Many helper applications use the MIME type application. A considerable number of subtypes
have been defined, for example, application/pdf for PDF files and application/msword for Word
files. In this way, a URL can point directly to a PDF or Word file, and when the user clicks on it,
Helper applications are not restricted to using the application MIME type. Adobe Photoshop
On Windows, when a program is installed on the computer, it registers the MIME types it wants
existing (MIME type, helper application) associations, capturing the type for itself. As a
On UNIX, this registration process is generally not automatic. The user must manually update
local files do not have MIME types, the browser needs some way to determine which plug-in or
handle local files, helpers can be associated with a file extension as well as with a MIME type.
will open it in Word. Some browsers use the MIME type, the file extension, and even
information taken from the file itself to guess the MIME type. In particular, Internet Explorer
relies more heavily on the file extension than on the MIME type when it can.
MIME types and extensions they are prepared to handle to allow the user to select the
the consumer market assume that the user does not have a clue what a MIME type is and
linked to a virus. A single click on a picture then causes an unknown and potentially hostile
On UNIX an analogous problem can exist with shell scripts, but that requires the user to
the user types in a URL or clicks on a line of hypertext, the browser parses the URL and
interprets the part between http:// and the next slash as a DNS name to look up. Armed with
the IP address of the server, the browser establishes a TCP connection to port 80 on that
server. Then it sends over a command containing the rest of the URL, which is the name of a
Accept a TCP connection from a client (a browser).
Release the TCP connection.
A problem with this design is that every request requires making a disk access to get the file.
accesses. A high-end SCSI disk has an average access time of around 5 msec, which limits the
Figure 7-21. A multithreaded Web server with a front end and
waiting for a disk operation to complete (and thus consuming no CPU time), other modules can
administration are far more complicated since normal blocking READ system calls cannot be
used to access the disk. With a multithreaded server, they can be used since then a READ
7. Determine the MIME type to include in the response.
a literal string. For example, consider the URL http://www.cs.vu.nl, which has an empty file
Step 7 is about determining the MIME type from the file extension, first few words of the file, a
If too many requests come in each second, the CPU will not be able to handle the processing
bottleneck. This leads to the server farm model of Fig. 7-22. A front end still accepts
Figure 7-22. A server farm.
Another problem with server farms is that the client's TCP connection terminates at the front
Sometimes a trick, called TCP handoff, is used to get around this problem. With this trick, the
TCP end point is passed to the processing node so it can reply directly to the client, shown as
Sequence when TCP handoff is used.
is assigned a URL (Uniform Resource Locator) that effectively serves as the page's
worldwide name. URLs have three parts: the protocol (also known as the scheme), the DNS
and the city of Amsterdam. The URL for the video page is
This URL consists of three parts: the protocol (http), the DNS name of the host
named index.html. Finally, ~user/ might be mapped onto user's WWW directory, and then
provide two items of information: the clickable text to be displayed and the URL of the page to
When the text is selected, the browser looks up the host name using DNS. Once it knows the
host's IP address, the browser establishes a TCP connection to the host. Over that connection,
This URL scheme is open-ended in the sense that it is straightforward to have browsers use
by Web servers. HTTP stands for HyperText Transfer Protocol. We will examine it in more
The ftp protocol is used to access files by FTP, the Internet's file transfer protocol. FTP has
been around more than two decades and is well entrenched. Numerous FTP servers all over
been placed on the FTP server. The Web does not change this; it just makes obtaining files by
FTP easier, as FTP has a somewhat arcane interface (but it is more powerful than HTTP, for
example, it allows a user on machine A to transfer a file from machine B to machine C).
simply, by just naming it. This approach is similar to using FTP but does not require having a
Long before there was an Internet, there was the USENET news system. It consists of about
a news reader. In fact, many browsers have buttons or menu items to make reading USENET
The browser then fetches the given article from its preconfigured news site using the NNTP
(Network News Transfer Protocol). We will not study NNTP in this book, but it is loosely
based on SMTP and has a similar style.
this is to click on the OPEN button and specify a URL consisting of mailto: followed by the
with FTP, news, Gopher, e-mail, and telnet as well, making all the specialized user interface
weakness in the URL scheme. A URL points to one specific host. For pages that are heavily
where it is. There is no way to say: I want page xyz, but I do not care where you get it. To
solve this problem and make it possible to replicate pages, IETF is working on a system of
URNs (Universal Resource Names). A URN can be thought of as a generalized URL. This
topic is still the subject of research, although a proposed syntax is given in RFC 2141.
and everyone else. A second example is from e-commerce. If a user wanders around an
keep track of the contents of the cart? A third example is customized Web portals such as
At first glance, one might think that servers could track users by observing their IP addresses.
especially at companies, and the IP address merely identifies the computer, not the user.
Second, and even worse, many ISPs use NAT, so all outgoing packets from all users bear the
same IP address. From the server's point of view, all the ISP's thousands of customers use the
same IP address.
something back that it may need to present later to get some work done. In this sense, a UNIX
formalized in RFC 2109.
the requested page. This information may include a cookie, which is a small (at most 4 KB) file
A cookie may contain up to five fields, as shown in Fig. 7-25. The Domain tells where the
Armed with the customer ID, the server can look up the customer's record in a database and
when the client clicks on PROCEED TO CHECKOUT, the cookie, now containing the full list of
up to 4 KB, there is plenty of room for more detailed preferences concerning newspaper
A controversial use of cookies is to secretly collect information about users' Web browsing
site owners a fee. Instead of giving the site a GIF or JPEG file to place on each page, it gives
them a URL to add to each page. Each URL it hands out contains a unique number in the file
When a user first visits a page, P, containing such an ad, the browser fetches the HTML file.
Then the browser inspects the HTML file and sees the link to the image file at
www.sneaky.com, so it sends a request there for the image. A GIF file containing an ad is
returned, along with a cookie containing a unique user ID, 3627239101 in Fig. 7-25. Sneaky
records the fact that the user with this ID visited page P. This is easy to do since the file
requested (382674902342.gif) is referenced only on page P. Of course, the actual ad may
browser has fetched the HTML file from the server, it sees the link to, say,
from the domain sneaky.com, the browser includes Sneaky's cookie containing the user ID.
user's name (although it does have his IP address, which may be enough to deduce the name
HTML—The HyperText Markup Language
Web pages are currently written in a language called HTML (HyperText Markup Language).
HTML allows users to produce Web pages that include text, graphics, and pointers to other
Web pages. HTML is a markup language, a language for describing how documents are to be
Markup languages thus contain explicit commands for formatting. For example, in HTML, <b>
By embedding all the markup commands within each HTML file and standardizing them, it
Below we will give a brief introduction to HTML, just to give an idea of what it is like. While it is
certainly possible to write HTML documents with any standard editor, and many people do, it is
also possible to use special HTML editors or word processors that do most of the work (but
A Web page consists of a head and a body, each enclosed by <html> and </html> tags
directives. Most HTML tags have this format, that is they use, <something> to mark the
VIEW SOURCE or something like that. Selecting this item displays the current page's HTML
Figure 7-26. (a) The HTML for a sample Web page. (b) The formatted
Tags can be in either lower case or upper case. Thus, <head> and <HEAD> mean the same
thing, but newer versions of the standard require lower case only. Actual layout of the HTML
document is irrelevant. HTML parsers ignore extra spaces and carriage returns since they have
added at will to make HTML documents more readable, something most of them are badly in
each tag, the HTML standard gives a list of what the permitted parameters, if any, are, and
Technically, HTML documents are written in the ISO 8859-1 Latin-1 character set, but for users
whose keyboards support only ASCII, escape sequences are present for the special characters,
Figure 7-27. A selection of common HTML tags. Some can have
HTML provides various mechanisms for making lists, including nested lists. Lists are started
source, appear with bullets (•) in front of them. A variant of this mechanism is <ol>, which is
used; most HTML authors do not even know it exists.) Finally, <hr> forces a break and draws a
HTML allows images to be included in-line on a Web page. The <img> tag specifies that an
The src parameter gives the URL of the image. The HTML standard does not specify which
graphic formats are permitted. In practice, all browsers support GIF amd JPEG files. Browsers
accustomed to a browser that supports, say, BMP files, he may include these in his Web pages
various parameters, including href (the URL) and name (the hyperlink's name). The text
As an example, consider the following HTML fragment:
<a href="http://www.nasa.gov"> NASA's home page </a>
NASA's home page
URL is http://www.nasa.gov and displays it.
<a href="http://www.nasa.gov"> <img src="shuttle.gif" alt="NASA"> </a>
switches to NASA's home page, just as clicking on the underlined text did in the previous
example. If the user has disabled automatic image display, the text NASA will be displayed
HTML keeps evolving. HTML 1.0 and HTML 2.0 did not have tables, but they were added in
HTML 3.0. An HTML table consists of one or more rows, each consisting of one or more cells.
An HTML table definition is listed in Fig. 7-28(a) and a possible rendition is shown in Fig. 728(b). This example just shows a few of the basic features of HTML tables. Tables are started
Figure 7-28. (a) An HTML table. (b) A possible rendition of this table.
In HTML 4.0, more new features were added. These include accessibility features for
site. A style sheet can be compared to an #include file in a C program: changing one macro
HTML 1.0 was basically one-way. Users could call up pages from information providers, but it
These demands led to the inclusion of forms starting in HTML 2.0. Forms contain boxes or
Figure 7-29. (a) The HTML for an order form. (b) The formatted page.
and textarea. A password box is the same as a text box, except that the characters are not
displayed as they are typed. A textarea box is also the same as a text box, except that it can
Figure 7-30. A possible response from the browser to the server with
XML and XSL
HTML, with or without forms, does not provide any structure to Web pages. It also mixes the
CD needs to analyze many Web pages looking for the item's title and price. With Web pages in
HTML, it is very difficult for a program to figure out where the title is and where the price is.
For this reason, the W3C has developed an enhancement to HTML to allow Web pages to be
purpose. First, XML (eXtensible Markup Language) describes Web content in a structured
way and second, XSL (eXtensible Style Language) describes the formatting independently
Consider the example XML document of Fig. 7-31. It defines a structure called book_list,
(e.g., multiple authors), optional fields (e.g., title of included CD-ROM), and alternative fields
(e.g., URL of a bookstore if it is in print or URL of an auction site if it is out of print).
Figure 7-31. A simple Web page in XML.
second file, book_list.xsl, containing the XSL definition. This file is a style sheet that tells how
to display the page. (There are alternatives to style sheets, such as a way to convert XML into
HTML, but these alternatives are beyond the scope of this book.)
A sample XSL file for formatting Fig. 7-31 is given in Fig. 7-32. After some necessary
declarations, including the URL of the XSL standard, the file contains tags starting with <html>
Figure 7-32. A style sheet in XSL.
far. The XML and XSL specifications are much stricter than HTML specification. They state that
Web designer meant. A browser that accepts a syntactically incorrect XML or XSL file and
is analogous to a for statement in C. It causes the browser to iterate the loop body (ended by
format, programs can analyze the XML file and easily find books published after 2000, for
example. It is worth emphasizing that even though our XSL file contained a kind of a loop,
Web pages in XML and XSL are still static since they simply contain instructions to the browser
about how to display the page, just as HTML pages do. Of course, to use XML and XSL, the
browser has to be able to interpret XML and XSL, but most of them already have this
capability. It is not yet clear whether XSL will take over from traditional style sheets.
We have not shown how to do this, but XML allows the Web site designer to make up definition
and the many other features of XML and XSL, see one of the many books on the subject. Two
Before ending our discussion of XML and XSL, it is worth commenting on a ideological battle
going on within the WWW consortium and the Web designer community. The original goal of
HTML was to specify the structure of the document, not its appearance. For example,
over how their pages appeared, so new tags were added to HTML to control appearance, such
screen resolution, it may be a complete mess. XML was in part an attempt to go back to the
original goal of specifying just the structure, not the appearance of a document. However, XSL
XML can be used for purposes other than describing Web pages. One growing use of it is as a
language for communication between application programs. In particular, SOAP (Simple
Object Access Protocol) is a way for performing RPCs between applications in a languageand system-independent way. The client constructs the request as an XML message and sends
it to the server, using the HTTP protocol (described below). The server sends back a reply as
an XML formatted message. In this way, applications on heterogeneous platforms can
XHTML—The eXtended HyperText Markup Language
HTML keeps evolving to meet new demands. Many people in the industry feel that in the
future, the majority of Web-enabled devices will not be PCs, but wireless, handheld PDA-type
somehow deal with syntactically incorrect Web pages. Thus, the next step after HTML 4 is a
language that is Very Picky. It is called XHTML (eXtended HyperText Markup Language)
rather than HTML 5 because it is essentially HTML 4 reformulated in XML. By this we mean that
tags such as <h1> have no intrinsic meaning. To get the HTML 4 effect, a definition is needed
in the XSL file. XHTML is the new Web standard and should be used for all new Web pages to
There are six major differences and a variety of minor differences between XHTML and HTML
4, Let us now go over the major differences. First, XHTML pages and browsers must strictly
conform to the standard. No more shoddy Web pages. This property was inherited from XML.
Second, all tags and attributes must be in lower case. Tags like <HTML> are not valid in XHTML.
The use of tags like <html> is now mandatory. Similarly, <img SRC="pic001.jpg"> is also
<img SRC="pic001.jpg" height=500 />
JPEG file, even though 500 is just a number.
used to be legal. In XHTML it is not. Tags must be closed in the inverse order that they were
information to look up a record in a database on the server's disk and generate a custom HTML
clicks on PROCEED TO CHECKOUT, the browser returns the cookie containing the contents of
cookie and generate an HTML page in response. The HTML page might display a form
process the information from an HTML form are illustrated in Fig. 7-33.
Figure 7-33. Steps in processing the information from an HTML form.
CGI (Common Gateway Interface). It is a standardized interface to allow Web servers to
HTML pages in response. Usually, these back-ends are scripts written in the Perl scripting
visible in the URL. Sometimes another scripting language, Python, is used instead of Perl.
As an example of how CGI often works, consider the case of a product from the Truly Great
invoked with no parameters, it sends back an HTML page containing the registration form.
parameters, makes an entry in the database for the new customer, and sends back an HTML
CGI scripts and programming in Perl. A few examples are (Hanegan, 2001; Lash, 2002; and
CGI scripts are not the only way to generate dynamic content on the server side. Another
common way is to embed little scripts inside HTML pages and have them be executed by the
server itself to generate the page. A popular language for writing these scripts is PHP (PHP:
Hypertext Preprocessor). To use it, the server has to understand PHP (just as a browser has
to understand XML to interpret Web pages written in XML). Usually, servers expect Web pages
containing PHP to have file extension php rather than html or htm.
A tiny PHP script is illustrated in Fig. 7-34; it should work with any server that has PHP
installed. It contains normal HTML, except for the PHP script inside the <?php ... ?> tag.
in a file test.php in the WWW directory at the ABCD company, then typing the URL
Figure 7-34. A sample HTML page with embedded PHP.
PHP is especially good at handling forms and is simpler than using a CGI script. As an example
HTML page with a form in it. The only unusual thing about it is the first line, which specifies
and the age in the age variable. It then starts to process the action.php file, shown in Fig. 735(b) as a reply. During the processing of this file, the PHP commands are executed. If the
user filled in ''Barbara'' and ''24'' in the boxes, the HTML file sent back will be the one given in
Fig. 7-35(c). Thus, handling forms becomes extremely simple using PHP.
Figure 7-35. (a) A Web page containing a form. (b) A PHP script for
handling the output of the form. (c) Output from the PHP script when
Although PHP is easy to use, it is actually a powerful programming language oriented toward
of the control structures found in C, but much more powerful I/O than just printf. PHP is open
about PHP, see (Valade, 2002).
We have now seen two different ways to generate dynamic HTML pages: CGI scripts and
embedded PHP. There is also a third technique, called JSP (JavaServer Pages), which is
similar to PHP, except that the dynamic part is written in the Java programming language
instead of in PHP. Pages using this technique have the file extension jsp. A fourth technique,
ASP (Active Server Pages), is Microsoft's version of PHP and JavaServer Pages. It uses
content. Pages using this technique have extension asp. The choice among PHP, JSP, and ASP
HTML.
CGI, PHP, JSP, and ASP scripts solve the problem of handling forms and interactions with
information in one or more databases, and generate HTML pages with the results. What none
purpose, it is necessary to have scripts embedded in HTML pages that are executed on the
client machine rather than the server machine. Starting with HTML 4.0, such scripts are
is not standardized and is mutating faster than a fruit fly trapped in an X-ray machine makes it
year. The body is almost the same as the PHP example, the main difference being the
of the HTML file, an area normally reserved for titles, background colors, and so on. This
HTML file, as can be seen from the various HTML tags in it. The browser then displays the
of the PHP file and executes it. The PHP script produces a new HTML page and that page is
displayed virtually instantaneously, whereas with PHP, there can be a delay of several seconds
before the resulting HTML arrives at the client. The difference between server-side scripting
Figure 7-37. (a) Server-side scripting with PHP. (b) Client-side
This difference does not mean that JavaScript is better than PHP. Their uses are completely
different. PHP (and, by implication, JSP and ASP) are used when interaction with a remote
computer. It is certainly possible (and common) to have HTML pages that use both PHP and
JavaScript is a full-blown programming language, with all the power of C or Java. It has
Figure 7-38. A JavaScript program for computing and printing
machine instructions for a virtual computer called the JVM (Java Virtual Machine). Applets
can be embedded in HTML pages (between <applet> and </applet>) and interpreted by JVMcapable browsers. Because Java applets are interpreted rather than directly executed, the Java
writers have found a nearly endless stream of bugs in the Java I/O libraries to exploit.
fastest of all. Also, since all browers implement exactly the same JVM but no two browsers
(often > 1000) pages. A few examples are (Easttom, 2001; Harris, 2001; and McFedries,
server machine. Once they are received by the browser, they are treated as normal HTML
pages and just displayed. The scripts can be written in Perl, PHP, JSP, or ASP, as shown in Fig.
XML and then converted to HTML according to an XSL file. JavaScript programs can perform
7.3.4 HTTP—The HyperText Transfer Protocol
The transfer protocol used throughout the World Wide Web is HTTP (HyperText Transfer
get back in return. Each interaction consists of one ASCII request, followed by one RFC 822
MIME-like response. All clients and all servers must obey this protocol. It is defined in RFC
The usual way for a browser to contact a server is to establish a TCP connection to port 80 on
the server's machine, although this procedure is not formally required. The value of using TCP
long messages, or acknowledgements. All of these matters are handled by the TCP
In HTTP 1.0, after the connection was established, a single request was sent over and a single
response was sent back. Then the TCP connection was released. In a world in which the typical
Web page consisted entirely of HTML text, this method was adequate. Within a few years, the
establishing a TCP connection to transport a single icon became a very expensive way to
This observation led to HTTP 1.1, which supports persistent connections. With them, it is
possible to establish a TCP connection, send a request and get a response, and then send
additional requests and get additional responses. By amortizing the TCP setup and release over
multiple requests, the relative overhead due to TCP is much less per request. It is also possible
Although HTTP was designed for use in the Web, it has been intentionally made more general
permitted SOAP to come into existence. Each request consists of one or more lines of ASCII
methods may also be available. The names are case sensitive, so GET is a legal method but
Figure 7-41. The built-in HTTP request methods.
The GET method requests the server to send the page (by which we mean object, in the most
general case, but in practice normally just a file). The page is suitably encoded in MIME. The
vast majority of requests to Web servers are GETs. The usual form of GET is
GET filename HTTP/1.1
The HEAD method just asks for the message header, without the actual page. This method can
or just to test a URL for validity.
The PUT method is the reverse of GET: instead of reading the page, it writes the page. This
the request contains the page. It may be encoded using MIME, in which case the lines
following the PUT might include Content-Type and authentication headers, to prove that the
Somewhat similar to PUT is the POST method. It, too, bears a URL, but instead of replacing the
context. In practice, neither PUT nor POST is used very much.
DELETE does what you might expect: it removes the page. As with PUT, authentication and
permission play a major role here. There is no guarantee that DELETE succeeds, since even if
the remote HTTP server is willing to delete the page, the underlying file may have a mode that
forbids the HTTP server from modifying or removing it.
The TRACE method is for debugging. It instructs the server to send back the request. This
The CONNECT method is not currently used. It is reserved for future use.
The OPTIONS method provides a way for the client to query the server about its properties or
URL or in its own cache (discussed later). The 4xx codes mean the request failed due to a
The request line (e.g., the line with the GET method) may be followed by additional lines with
can be used in either direction. A selection of the most important ones is given in Fig. 7-43.
Figure 7-43. Some HTTP message headers.
information and could produce it on demand in a PHP script. This header is used by the client
has a limited repertoire of what is acceptable. The first header specifies the MIME types that
are welcome (e.g., text/html). The second gives the character set (e.g., ISO-8859-5 or
The Host header names the server. It is taken from the URL. This header is mandatory. It is
used because some IP addresses may serve multiple DNS names and the server needs some
Although cookies are dealt with in RFC 2109 rather than RFC 2616, they also have two
(possibly incompatible) version of the HTTP protocol. It allows the client to announce what it
The Location header is used by the server to inform the client that it should try a different URL.
com domain, but which redirect clients to a national or regional page based on their IP address
Example HTTP Usage
Because HTTP is an ASCII protocol, it is quite easy for a person at a terminal (as opposed to a
browser) to directly talk to Web servers. All that is needed is a TCP connection to port 80 on
the server. Readers are encouraged to try this scenario personally (preferably from a UNIX
GET /rfc.html HTTP/1.1
This sequence of commands starts up a telnet (i.e., TCP) connection to port 80 on IETF's Web
Then comes the GET command naming the file and the protocol. The next line is the
The log can be inspected using any editor. It should start out similarly to the listing in Fig. 744, unless IETF has changed it recently.
beginning HTTP/1.1 is IETF's response saying that it is willing to talk HTTP/1.1 with you. Then
for ETag which is a unique page identifier related to caching, and X-Pad which is nonstandard
frequently overloaded. Many people have begun calling the WWW the World Wide Wait. As a
A fairly simple way to improve performance is to save pages that have been requested in case
quickly look up pages previously visited. On a company LAN, the proxy is often a machine
shared by all the machines on the LAN, so if one user looks at a certain page and then another
one on the same LAN wants the same page, it can be fetched from the proxy's cache. Many
proxy queries the LAN proxy. If that fails, the LAN proxy tries the ISP proxy. The latter must
succeed, either from its cache, a higher-level cache, or from the server itself. A scheme
involving multiple caches tried in sequence is called hierarchical caching. A possible
how long to keep each page. A common one is to base the holding time on the Last-Modified
special features of RFC 2616 that deal with cache management. One of the most useful of
These two approaches can easily be combined. For the first ∆T after fetching the page, the
proxy uses If-Modified-Since messages to check on its freshness. Choosing ∆T invariably
Web pages containing dynamic content (e.g., generated by a PHP script) should never be
for any page expected to change quickly. A variety of other cache control mechanisms are also
defined in RFC 2616.
Clearly, Web caching is far from trivial. A lot more can be said about it. In fact, entire books
A typical use of mirroring is for a company's main Web page to contain a few images along
and instructions on how to become a notary in Florida. But on Nov. 7, 2000, when the U.S.
the contract is signed, the content owner gives the CDN the contents of its Web site for
Then the CDN talks to large numbers of ISPs and offers to pay them well for permission to
a source of income, but it also provides the ISP's customers with excellent response time for
getting at the CDN's content, thereby giving the ISP a competitive advantage over other ISPs
that have not taken the free money from the CDN. Under these conditions, signing up with a
CDN is kind of a no-brainer for the ISP. As a consequence, the largest CDNs have more than
client's request to the nearest CDN server, preferably one colocated at the client's ISP. Also,
this redirection must be done without modifying DNS or any other part of the Internet's
standard infrastructure. A slightly simplified description of how Akamai, the largest CDN, does
The whole process starts when the content provider hands the CDN its Web site. The CDN then
pages that are tiny (just HTML text), but that these pages often link to large files, such as
images, audio, and video. The modified HTML pages are stored on the content provider's
CDN's servers.
When a user types in the URL www.furryvideo.com, DNS returns the IP address of Furry
Video's own Web site, allowing the main (HTML) page to be fetched in the normal way. When
any of the hyperlinks is clicked on, the browser asks DNS to look up cdn-server.com, which it
does. The browser then sends an HTTP request to this IP address, expecting to get back an
MPEG file.
That does not happen because cdn-server.com does not host any content. Instead, it is CDN's
fake HTTP server. It examines the file name and server name to find out which page at which
content provider is needed. It also examines the IP address of the incoming request and looks
determines which of CDN's content servers can give the user the best service. This decision is
Location header giving the file's URL on the CDN content server nearest to the client. For this
example, let us assume that URL is www.CDN-0420.com/furryvideo/bears.mpg. The browser
then processes this URL in the usual way to get the actual MPEG file.
to get its IP address. After that, the HTML page can be fetched and displayed in the usual way.
selected, its DNS address is looked up (step 5) and returned (step 6). When a request for
bears.mpg is sent to cdn-server (step 7), the client is told to go to CDN-0420.com instead
10). The property that makes this whole mechanism work is step 8, the fake HTTP server
redirecting the client to a CDN proxy close to the client.
Figure 7-47. Steps in looking up a URL when a CDN is used.
The CDN server to which the client is redirected is typically a proxy with a large cache
making the content server a proxy rather than a complete replica, the CDN has the ability to
hit the market: WAP and i-mode.
WAP—The Wireless Application Protocol
hundreds of members. The system is called WAP (Wireless Application Protocol).
A WAP device may be an enhanced mobile phone, PDA, or notebook computer without any
existing digital wireless infrastructure. Users can literally call up a WAP gateway over the
essence, this means that WAP 1.0 is a circuit-switched system with a fairly high per-minute
tiny screen and paying by the minute, so WAP was something of a flop (although there were
other problems as well). However, WAP and its competitor, i-mode (discussed below), appear
to be converging on a similar technology, so WAP 2.0 may yet be a big success. Since WAP 1.0
WAP is essentially a protocol stack for accessing the Web, but optimized for low-bandwidth
connections using wireless devices having a slow CPU, little memory, and a small screen.
These requirements are obviously different from those of the standard desktop PC scenario,
Figure 7-48. The WAP protocol stack.
The lowest layer supports all the existing mobile phone systems, including GSM, D-AMPS, and
CDMA. The WAP 1.0 data rate is 9600 bps. On top of this is the datagram protocol, WDP
(Wireless Datagram Protocol), which is essentially UDP. Then comes a layer for security,
obviously needed in a wireless system. WTLS is a subset of Netscape's SSL, which we will look
reliably or unreliably. This layer replaces TCP, which is not used over the air link for efficiency
reasons. Then comes a session layer, which is similar to HTTP/1.1 but with some restrictions
and extensions for optimization purposes. At the top is a microbrowser (WAE).
Besides cost, the other aspect that no doubt hurt WAP's acceptance is the fact that it does not
use HTML. Instead, the WAE layer uses a markup language called WML (Wireless Markup
Language), which is an application of XML. As a consequence, in principle, a WAP device can
only access those pages that have been converted to WML. However, since this greatly
restricts the value of WAP, the architecture calls for an on-the-fly filter from HTML to WML to
Figure 7-49. The WAP architecture.
In all fairness, WAP was probably a little ahead of its time. When WAP was first started, XML
was hardly known outside W3C and so the press reported its launch as WAP DOES NOT USE
HTML. A more accurate headline would have been: WAP ALREADY USES THE NEW HTML
STANDARD. But once the damage was done, it was hard to repair and WAP 1.0 never caught
on. We will revisit WAP after first looking at its major competitor.
I-Mode
hammering out an open standard using the most advanced version of HTML available, other
right, and in Feb. 1999 NTT DoCoMo (literally: Japanese Telephone and Telegraph Company
the fact that WAP appeared to be going nowhere. Let us now take a look at what i-mode is and
networks: the existing circuit-switched mobile phone network (somewhat comparable to DAMPS), and a new packet-switched network constructed specifically for i-mode service. Voice
mode uses the circuit switched network and is billed per minute of connection time. I-mode
uses the packet-switched network and is always on (like ADSL or cable), so there is no billing
The handsets look like mobile phones, with the addition of a small screen. NTT DoCoMo heavily
programmable, although they contain the equivalent of a 1995 PC and could probably run
Windows 95 or UNIX.
thus is seen as a big improvement over SMS (Short Message Service) with its 160-byte
URL, rather than selecting them from a menu. In a sense, the official list is like an Internet
portal that allows other Web sites to be accessed by clicking rather than by typing a URL.
NTT DoCoMo tightly controls the official services. To be allowed on the list, a service must
NTT DoCoMo (Frengle, 2002). The 40,000 Internet sites can do whatever they want.
Alternatively the customer can choose a subscription with more free packets, with the perpacket charge dropping sharply as you go from 1 MB per month to 10 MB per month. If the
entering your PIN code. Most official services cost around $1–$2 per month. NTT DoCoMo adds
each every month. If that service becomes official, NTT DoCoMo handles the billing and just
huge incentive for a service provider to become official, which generates more revenue for NTT
Despite its massive success in Japan, it is far from clear whether it will catch on in the U.S.
businesspersons) already have a large-screen PC at home, almost assuredly with an Internet
Internet-connected PC at home, in part due to lack of space, but also due to NTT's exorbitant
Second, people in the West are not used to paying $1 a month to access CNN's Web site, $1 a
mention a few dollars per MB downloaded. Most Internet providers in the West now charge a
Japan, and in the U.S. hardly anyone does. Using i-mode at home next to your computer with
a 17-inch monitor, a 1-Mbps ADSL connection, and all the free megabytes you want does not
and a new packet-switched network for data. The data network is based on CDMA and
transmits 128-byte packets at 9600 bps. A diagram of the network is given in Fig. 7-50.
Handsets talk LTP (Lightweight Transport Protocol) over the air link to a protocol
Current handsets have CPUs that run at about 100 MHz, several megabytes of flash ROM,
perhaps 1 MB of RAM, and a small built-in screen. I-mode requires the screen to be at least 72
communication, using NTT DoCoMo's proprietary LTP protocol. Above that is a simple window
manager that handles text and simple graphics (GIF files). With screens having only about 120
The fourth layer contains the Web page interpreter (i.e., the browser). I-mode does not use
full HTML, but a subset of it, called cHTML (compact HTML), based loosely on HTML 1.0. This
layer also allows helper applications and plug-ins, just as PC browsers do. One standard helper
application is an interpreter for a slightly modified version of JVM.
Let us now take a closer look at cHTML. As mentioned, it is approximately HTML 1.0, with a
Most of the basic HTML tags are allowed, including <html>, <head>, <title>, <body>, <hn >,
selecting one of them, the handset would call him or her. RFC 2806 discusses telephone URLs.
sheets, background colors, or background images. It also does not support JPEG images,
limited to 10 KB due to the slow transmission speed over the air link.
Although NTT DoCoMo removed some HTML tags, it also added some new ones. The <blink>
Although the Japanese language has tens of thousands of kanji, NTT DoCoMo invented 166
all the usual bells and whistles. It supports CGI, Perl, PHP, JSP, ASP, and everything else Web
A brief comparison of the WAP and i-mode as actually implemented in the first-generation
Figure 7-54. A comparison of first-generation WAP and i-mode.
WAP 1.0, based on recognized international standards, was supposed to be a serious tool for
people in business on the move. It failed. I-mode was an electronic toy for Japanese teenagers
something from the first generation of wireless Web. The WAP consortium learned that content
NTT DoCoMo learned that a closed, proprietary system closely tied to tiny handsets and
Both services are about to enter the second generation of wireless Web technology. WAP 2.0
came out first, so we will use that as our example. WAP 1.0 got some things right, and they
have been continued. For one thing, WAP can be carried on a variety of different networks. The
example, GPRS. For another, WAP initially was aimed at supporting a wide variety of devices,
WAP 2.0 also has some new features. The most significant ones are:
Voice and data are starting to merge, and WAP 2.0 supports them in a variety of ways. We
The huge popularity of i-mode's emoji stimulated the WAP consortium to invent 264 of its own
culture. I-mode did not have that problem since it was intended for a single country.
Providing for a storage interface does not mean that every WAP 2.0 phone will come with a
large hard disk. Flash ROM is also a storage device. A WAP-enabled wireless camera could use
the flash ROM for temporary image storage before beaming the best pictures to the Internet.
Finally, plug-ins can extend the browser's capabilities. A scripting language is also provided.
Various technical differences are also present in WAP 2.0. The two biggest ones concern the
protocol stack and the markup language. WAP 2.0 continues to support the old protocol stack
of Fig. 7-48, but it also supports the standard Internet stack with TCP and HTTP/1.1 as well.
However, four minor (but compatible) changes to TCP were made (to simplify the code): (1)
Use of a fixed 64-KB window, (2) no slow start, (3) a maximum MTU of 1500 bytes, and (4) a
slightly different retransmission algorithm. TLS is the transport-layer security protocol
standardized by IETF; we will examine it in Chap. 8. Many initial devices will probably contain
Figure 7-55. WAP 2.0 supports two protocol stacks.
The other technical difference with WAP 1.0 is the markup language. WAP 2.0 supports XHTML
Basic, which is intended for small wireless devices. Since NTT DoCoMo has also agreed to
A few words about XHTML Basic are perhaps in order. It is intended for mobile phones,
defined in XML. The modules and some example tags are listed in Fig. 7-56. We have not gone
Figure 7-56. The XHTML Basic modules and tags.
Despite the agreement on the use of XHTML Basic, a threat to WAP and i-mode is lurking in
devices that use 802.11 if they can pick up a signal and fall back to WAP if they cannot.
connections is hard enough. Even VHS-quality video over wireless is a few years away, so our
with power A and B is conventionally expressed in dB (decibels) according to the formula
Audio waves can be converted to digital form by an ADC (Analog Digital Converter). An
ADC takes an electrical voltage as input and generates a binary number as output. In Fig. 757(a) we see an example of a sine wave. To represent this signal digitally, we can sample it
every ∆T seconds, as shown by the bar heights in Fig. 7-57(b). If a sound wave is not a pure
Figure 7-57. (a) A sine wave. (b) Sampling the sine wave. (c)
to +1.00 in steps of 0.25. An 8-bit sample would allow 256 distinct values. A 16-bit sample
CD needs a bandwidth of 705.6 kbps for monaural and 1.411 Mbps for stereo. While this is
uncompressed CD quality stereo sound in real time.
CD-quality audio requires a transmission bandwidth of 1.411 Mbps, as we just saw. Clearly,
popular one is MPEG audio, which has three layers (variants), of which MP3 (MPEG audio
artists and copyright owners. MP3 belongs to the audio portion of the MPEG video compression
To make these effects more quantitative, imagine experiment 1. A person in a quiet room puts
audible looks like that of Fig. 7-58(a). A direct consequence of this curve is that it is never
First, the output bit rate is chosen. MP3 can compress a stereo rock 'n roll CD down to 96 kbps
scope of this book. A more formal mathematical introduction to the process is given in (Pan,
music on demand. In the next two, we will look at Internet radio and voice over IP,
Figure 7-59. A straightforward way to implement clickable music on a
for it to establish a TCP connection to the Web server to which the song is hyperlinked. Step 2
is to send over a GET request in HTTP to request the song. Next (steps 3 and 4), the server
Using the MIME type, for example, audio/mp3, (or the file extension), the browser looks up
is 4 MB (a typical size for an MP3 song) and the modem is 56 kbps, the user will be greeted by
Instead, it is what is called a metafile, a very short file just naming the music. A typical
metafile might be only one line of ASCII text and look like this:
reads the file and sees that it contains a URL. Then it contacts joes-audio-server and asks for
is generally not even an HTTP server, but a specialized media server. In this example, the
media server uses RTSP (Real Time Streaming Protocol), as indicated by the scheme name
rtsp. It is described in RFC 2326.
Its second job is dealing with errors. Real-time music transmission rarely uses TCP because an
actual transmission is usually done with a protocol like RTP, which we studied in Chap. 6. Like
most real-time protocols, RTP is layered on top of UDP, so packets may be lost. It is up to the
interval in one packet and all the even samples in the next one. A lost packet then does not
lost packet into lower quality rather than a time gap. However, RFC 3119 gives a scheme that
With a push server, the media player sends a PLAY request and the server just keeps pushing
opportunity to catch up if it ever gets behind. A problem here, however, is potential buffer
To operate a push server, the media player needs a remote control for it. This is what RTSP
provides. It is defined in RFC 2326 and provides the mechanism for the player to control the
server. It does not provide for the data stream, which is usually RTP. The main commands
provided for by RTSP are listed in Fig. 7-62.
Figure 7-62. RTSP commands from the player to the server.
Internet radio should use multicasting with the RTP/RTSP protocols. This is clearly the most
user establishes a TCP connection to the station and the feed is sent over the TCP connection.
The reason TCP unicasting is used instead of RTP multicasting is threefold. First, few ISPs
support multicasting, so that is not a practical option. Second, RTP is less well known than TCP
system administrators configure their firewall to protect their LAN from unwelcome visitors.
They usually allow TCP connections from remote port 25 (SMTP for e-mail), UDP packets from
remote port 53 (DNS), and TCP connections from remote port 80 (HTTP for the Web). Almost
everything else may be blocked, including RTP. Thus, the only way to get the radio signal
through the firewall is for the Web site to pretend it is an HTTP server, at least to the firewall,
and use HTTP servers, which speak TCP. These severe measures, while providing only minimal
format for Internet radio. A newcomer is Vorbis, which is technically similar to MP3 but open
A typical Internet radio station has a Web page listing its schedule, information about its DJs
supports (or just LISTEN NOW if only one format is supported). These icons or LISTEN NOW
MIME type or file extension to determine the appropriate helper (i.e., media player) for the
hands it the name of the scratch file. The media player reads the scratch file, sees the URL
illustrated in Fig. 7-63. The basis of the station is an ordinary PC with a sound card and a
Figure 7-63. A student radio station.
which handles distributing it to large numbers of TCP connections. The server typically
TCP feed. There are commercial software packages for managing all the pieces, as well as
7.4.5 Voice over IP
the number of data bits moved equaled the number of voice bits (since voice is in PCM on the
telephony (also known as voice over IP), was born.
H.323
parties got together under ITU auspices to work out standards. In 1996 ITU issued
recommendation H.323 entitled ''Visual Telephone Systems and Equipment for Local Area
would think of such a name. The recommendation was revised in 1998, and this revised H.323
H.323 is more of an architectural overview of Internet telephony than a specific protocol. It
network. It speaks the H.323 protocols on the Internet side and the PSTN protocols on the
telephone side. The communicating devices are called terminals. A LAN may have a
Figure 7-64. The H.323 architectural model for Internet telephony.
A telephone network needs a number of protocols. To start with, there is a protocol for
encoding and decoding speech. The PCM system we studied in Chap. 2 is defined in ITU
recommendation G.711. It encodes a single voice channel by sampling 8000 times per second
with an 8-bit sample to give uncompressed speech at 64 kbps. All H.323 systems must support
G.711. However, other speech compression protocols are also permitted (but not required).
bandwidth. For example, G.723.1 takes a block of 240 samples (30 msec of speech) and uses
terminals to negotiate which one they are going to use. This protocol is called H.245. It also
negotiates other aspects of the connection such as the bit rate. RTCP is need for the control of
the RTP channels. Also required is a protocol for establishing and releasing connections,
providing dial tones, making ringing sounds, and the rest of the standard telephony. ITU
Q.931 is used here. The terminals need a protocol for talking to the gatekeeper (if present).
For this purpose, H.225 is used. The PC-to-gatekeeper channel it manages is called the RAS
Finally, a protocol is needed for the actual data transmission. RTP is used for this purpose. It is
managed by RTCP, as usual. The positioning of all these protocols is shown in Fig. 7-65.
Figure 7-65. The H.323 protocol stack.
To see how these protocols fit together, consider the case of a PC terminal on a LAN (with a
gatekeeper) calling a remote telephone. The PC first has to discover the gatekeeper, so it
broadcasts a UDP gatekeeper discovery packet to port 1718. When the gatekeeper responds,
the PC learns the gatekeeper's IP address. Now the PC registers with the gatekeeper by
sending it a RAS message in a UDP packet. After it has been accepted, the PC sends the
gatekeeper a RAS admission message requesting bandwidth. Only after bandwidth has been
The PC now establishes a TCP connection to the gatekeeper to begin call setup. Call setup uses
existing telephone network protocols, which are connection oriented, so TCP is needed. In
contrast, the telephone system has nothing like RAS to allow telephones to announce their
presence, so the H.323 designers were free to use either UDP or TCP for RAS, and they chose
the lower-overhead UDP.
Now that it has bandwidth allocated, the PC can send a Q.931 SETUP message over the TCP
connection. This message specifies the number of the telephone being called (or the IP address
and port, if a computer is being called). The gatekeeper responds with a Q.931 CALL
PROCEEDING message to acknowledge correct receipt of the request. The gatekeeper then
forwards the SETUP message to the gateway.
the called telephone and also sends back a Q.931 ALERT message to tell the calling PC that
sends back a Q.931 CONNECT message to signal the PC that it has a connection.
gateway's IP address. At this point, we just have a bare tube running between the two parties.
The H.245 protocol is now used to negotiate the parameters of the call. It uses the H.245
example, whether it can handle video (H.323 can handle video) or conference calls, which
can begin using RTP. It is managed using RTCP, which plays a role in congestion control. If
video is present, RTCP handles the audio/video synchronization. The various channels are
shown in Fig. 7-66. When either party hangs up, the Q.931 call signaling channel is used to
When the call is terminated, the calling PC contacts the gatekeeper again with a RAS message
voice over IP a success. The reason is that QoS falls outside the scope of H.323. If the
underlying network is capable of producing a stable, jitterfree connection from the calling PC
will be good; otherwise it will not be. The telephone part uses PCM and is always jitter free.
SIP—The Session Initiation Protocol
H.323 was designed by ITU. Many people in the Internet community saw it as a typical telco
product: large, complex, and inflexible. Consequently, IETF set up a committee to design a
simpler and more modular way to do voice over IP. The major result to date is the SIP
(Session Initiation Protocol), which is described in RFC 3261. This protocol describes how to
H.323, which is a complete protocol suite, SIP is a single module, but it has been designed to
SIP can establish two-party sessions (ordinary telephone calls), multiparty sessions (where
games, for example. SIP just handles setup, management, and termination of sessions. Other
protocols, such as RTP/RTCP, are used for data transport. SIP is an application-layer protocol
and can run over UDP or TCP.
SIP supports a variety of services, including locating the callee (who may not be at his home
setup and termination. In the simplest case, SIP sets up a session from the caller's computer
Telephone numbers in SIP are represented as URLs using the sip scheme, for example,
sip:ilse@cs.university.edu for a user named Ilse at the host specified by the DNS name
cs.university.edu. SIP URLs may also contain IPv4 addresses, IPv6 address, or actual
The SIP protocol is a text-based protocol modeled on HTTP. One party sends a message in
ASCII text consisting of a method name on the first line, followed by additional lines containing
headers for passing parameters. Many of the headers are taken from MIME to allow SIP to
Figure 7-67. The SIP methods defined in the core specification.
To establish a session, the caller either creates a TCP connection with the callee and sends an
INVITE message over it or sends the INVITE message in a UDP packet. In both cases, the
it responds with an HTTP-type reply code (a three-digit number using the groups of Fig. 7-42,
Connection is done using a three-way handshake, so the caller responds with an ACK message
Either party may request termination of a session by sending a message containing the BYE
The OPTIONS method is used to query a machine about its own capabilities. It is typically used
before a session is initiated to find out if that machine is even capable of voice over IP or
The REGISTER method relates to SIP's ability to track down and connect to a user who is away
from home. This message is sent to a SIP location server that keeps track of who is where.
is illustrated in Fig. 7-68. Here the caller sends the INVITE message to a proxy server to hide
the possible redirection. The proxy then looks up where the user is and sends the INVITE
handshake. The LOOKUP and REPLY messages are not part of SIP; any convenient protocol can
Figure 7-68. Use a proxy and redirection servers with SIP.
SIP has a variety of other features that we will not describe here, including call waiting, call
Comparison of H.323 and SIP
H.323 and SIP have many similarities but also some differences. Both allow two-party and
negotiation, encryption, and the RTP/RTCP protocols. A summary of the similarities and
Figure 7-69. Comparison of H.323 and SIP
Although the feature sets are similar, the two protocols differ widely in philosophy. H.323 is a
In contrast, SIP is a typical Internet protocol that works by exchanging short lines of ASCII
with existing telephone system signaling protocols. Because the IETF model of voice over IP is
Voice over IP is an up-and-coming topic. Consequently, there are several books on the subject
already. A few examples are (Collins, 2001; Davidson and Peters, 2000; Kumar et al., 2001;
receiver is shown in Fig. 7-70. (As an aside, CCD cameras integrate rather than scan, but
Figure 7-70. The scanning pattern used for NTSC video and television.
approximate a rectangular image on the original round CRTs). Only 483 of the 525 NTSC scan
lines (and 576 of the 625 PAL/SECAM scan lines) are displayed. The beam is turned off during
One beam is used for each of the three additive primary colors: red, green, and blue (RGB).
incompatible. (Note that these choices have nothing to do with VHS versus Betamax versus
Consequently, the simplest scheme, just encoding the RGB signals separately, was not
acceptable. RGB is also not the most efficient scheme.
Standards Committee, which lent its acronym to the standard: NTSC. Color television was
are called SECAM (SEquentiel Couleur Avec Memoire), which is used in France and Eastern
Europe, and PAL (Phase Alternating Line) used in the rest of Europe. The difference in color
quality between the NTSC and PAL/SECAM has led to an industry joke that NTSC really stands
linearly combine the RGB signals into a luminance (brightness) signal and two chrominance
the RGB signals. Oddly enough, the eye is much more sensitive to the luminance signal than to
In the past few years, there has been considerable interest in HDTV (High Definition
The United States, Europe, and Japan have all developed HDTV systems, all different and all
mutually incompatible. Did you expect otherwise? The basic principles of HDTV in terms of
RGB colors, although nearly all systems mix these into composite video for transmission. While
second. These two parameters are different. A still image painted at 20 frames/sec will not
next one appears. A movie with 20 different frames per second, each of which is painted four
472 Mbps. It would take a SONET OC-12 carrier to manage this, and running an OC-12 SONET
even less attractive. A better solution is to transmit 25 frames/sec and have the computer
be stored in RAM without conversion to digital form first, which requires extra hardware. As a
A second asymmetry is that the encode/decode process need not be invertible. That is, when
The JPEG Standard
A video is just a sequence of images (plus sound). If we could find a good algorithm for
study of video compression there. The JPEG (Joint Photographic Experts Group) standard
photographic experts working under the joint auspices of ITU, ISO, and IEC, another standards
for moving pictures, MPEG, is just the JPEG encoding of each frame separately, plus some
extra features for interframe compression and motion detection. JPEG is defined in
JPEG has four modes and many options. It is more like a shopping list than a single algorithm.
illustrated in Fig. 7-71. Furthermore, we will concentrate on the way JPEG is normally used to
encode 24-bit RGB video images and will leave out some of the minor details for the sake of
Figure 7-71. The operation of JPEG in lossy sequential mode.
Step 1 of encoding an image with JPEG is block preparation. For the sake of specificity, let us
assume that the JPEG input is a 640 x 480 RGB image with 24 bits/pixel, as shown in Fig. 772(a). Since using luminance and chrominance gives better compression, we first compute the
luminance, Y, and the two chrominances, I and Q (for NTSC), according to the following
Figure 7-72. (a) RGB input data. (b) After block preparation.
For PAL, the chrominances are called U and V and the coefficients are different, but the idea is
the same. SECAM is different from both NTSC and PAL.
Separate matrices are constructed for Y, I, and Q, each with elements in the range 0 to 255.
Next, square blocks of four pixels are averaged in the I and Q matrices to reduce them to 320
middle of the range. Finally, each matrix is divided up into 8 x 8 blocks. The Y matrix has 4800
Step 2 of JPEG is to apply a DCT (Discrete Cosine Transformation) to each of the 7200
blocks separately. The output of each DCT is an 8 x 8 matrix of DCT coefficients. DCT element
present at each spatial frequency. In theory, a DCT is lossless, but in practice, using floatingpoint numbers and transcendental functions always introduces some roundoff error that results
Figure 7-73. (a) One block of the Y matrix. (b) The DCT coefficients.
Once the DCT is complete, JPEG moves on to step 3, called quantization,in which the less
important DCT coefficients are wiped out. This (lossy) transformation is done by dividing each
of the coefficients in the 8 x 8 DCT matrix by a weight taken from a table. If all the weights are
An example of this step is given in Fig. 7-74. Here we see the initial DCT matrix, the
quantization table, and the result obtained by dividing each DCT element by the corresponding
quantization table element. The values in the quantization table are not part of the JPEG
Figure 7-74. Computation of the quantized DCT coefficients.
from the other values. The (0, 0) values are referred to as the DC components; the other
values are the AC components.
JPEG may seem complicated, but that is because it is complicated. Still, since it often produces
a 20:1 compression or better, it is widely used. Decoding a JPEG image requires running the
algorithm backward. JPEG is roughly symmetric: decoding takes as long as encoding. This
The MPEG Standard
Finally, we come to the heart of the matter: the MPEG (Motion Picture Experts Group)
international standards since 1993. Because movies contain both images and sound, MPEG can
The first standard to be finalized was MPEG-1 (International Standard 11172). Its goal was to
produce video-recorder-quality output (352 x 240 for NTSC) using a bit rate of 1.2 Mbps. A
to 1.2 Mbps is not entirely trivial. A factor of 40 compression is needed. MPEG-1 can be
transmitted over twisted pair transmission lines for modest distances. MPEG-1 is also used for
storing movies on CD-ROM.
The next standard in the MPEG family was MPEG-2 (International Standard 13818), which was
NTSC or PAL broadcast channel. Later, MPEG-2 was expanded to support higher resolutions,
including HDTV. It is very common now, as it forms the basis for DVD and digital satellite
The basic principles of MPEG-1 and MPEG-2 are similar, but the details are different. To a first
approximation, MPEG-2 is a superset of MPEG-1, with additional features, frame formats, and
encoding options. We will first discuss MPEG-1, then MPEG-2.
MPEG-1 has three parts: audio, video, and system, which integrates the other two, as shown
Now let us consider MPEG-1 video compression. Two kinds of redundancies exist in movies:
spatial and temporal. MPEG-1 uses both. Spatial redundancy can be utilized by simply coding
each frame separately with JPEG. This approach is occasionally used, especially when random
over simply encoding each frame separately with JPEG.
subtracting each frame from the previous one and running JPEG on the difference would do
What is needed is some way to compensate for this motion. This is precisely what MPEG does;
it is the main difference between MPEG and JPEG.
MPEG-1 output consists of four kinds of frames:
I (Intracoded) frames: Self-contained JPEG-encoded still pictures.
P (Predictive) frames: Block-by-block difference with the last frame.
B (Bidirectional) frames: Differences between the last and next frame.
D (DC-coded) frames: Block averages used for fast forward.
I-frames are just still pictures coded using a variant of JPEG, also using full-resolution
luminance and half-resolution chrominance along each axis. It is necessary to have I-frames
appear in the output stream periodically for three reasons. First, MPEG-1 can be used for a
decoding would be possible. Third, without I-frames, while doing a fast forward or rewind, the
one it stopped on. For these reasons, I-frames are inserted into the output once or twice per
P-frames, in contrast, code interframe differences. They are based on the idea of
space. A macroblock is encoded by searching the previous frame for it or something only
An example of where P-frames would be useful is given in Fig. 7-77. Here we see three
The MPEG-1 standard does not specify how to search, how far to search, or how good a match
just as with JPEG. The value for the macroblock in the output stream is then the motion vector
current value is encoded with JPEG, just as in an I-frame.
macroblock, no matter where it moved to. This approach will minimize the encoded MPEG-1
always produce compliant MPEG-1. No matter what search algorithm is used, the final output
is either the JPEG encoding of the current macroblock or the JPEG encoding of the difference
So far, decoding MPEG-1 is straightforward. Decoding I-frames is the same as decoding JPEG
images. Decoding P-frames requires the decoder to buffer the previous frame and then build
B-frames are similar to P-frames, except that they allow the reference macro-block to be in
To do B-frame encoding, the encoder needs to hold three decoded frames in memory at once:
the past one, the current one, and the future one. Although B-frames give the best
D-frames are only used to make it possible to display a low-resolution image when doing a
rewind or fast forward. Doing the normal MPEG-1 decoding in real time is difficult enough.
asking a bit much. Instead, the D-frames are used to produce low-resolution images. Each Dframe entry is just the average value of one block, with no further encoding, making it easy to
speed in search of a particular scene. The D-frames are generally placed just before the
corresponding I-frames so if fast forwarding is stopped, it will be possible to start viewing at
Having finished our treatment of MPEG-1, let us now move on to MPEG-2. MPEG-2 encoding is
fundamentally similar to MPEG-1 encoding, with I-frames, P-frames, and B-frames. D-frames
MPEG-2 is targeted at broadcast television as well as DVD, it supports both progressive and
interlaced images, in contrast to MPEG-1, which supports only progressive images. Other
Instead of supporting only one resolution level, MPEG-2 supports four: low (352 x 240), main
and backward compatibility with MPEG-1. Main is the normal one for NTSC broadcasting. The
other two are for HDTV. For high-quality output, MPEG-2 usually runs at 4–8 Mbps.
these nonstop. A user wanting to see a popular video may have to wait up to 10 minutes for it
distribution networks, such as cable TV or telephone company distribution systems. The local
mower). Sports, news, reruns of ''I Love Lucy,'' WWW access, and innumerable other
65,000 (Minoli, 1995). When compressed in MPEG-2, a normal movie occupies roughly 4 GB of
been the case and probably always will be. An Ultrium tape can store 200 GB (50 movies) at a
shows that not all items are equally popular. Experimentally, when N movies are available, the
fraction of all requests being for the kth most popular one is approximately C/k. Here C is
Figure 7-79. A video server storage hierarchy.
An alternative to tape is optical storage. Current DVDs hold 4.7 GB, good for one movie, but
MB/sec for SCSI 320), and substantial capacities (> 100 GB), which makes them well suited to
At the top of the pyramid of Fig. 7-79 is RAM. RAM is the fastest storage medium, but also the
most expensive. When RAM prices drop to $50/GB, a 4-GB movie will occupy $200 dollars
worth of RAM, so having 100 movies in RAM will cost $20,000 for the 200 GB of memory. Still,
for a video server feeding out 100 movies, just keeping all the movies in RAM is beginning to
Since a video server is really just a massive real-time I/O device, it needs a different hardware
and software architecture than a PC or a UNIX workstation. The hardware architecture of a
CPUs, each with some local memory, a shared main memory, a massive RAM cache for popular
normally an optical interface to a SONET or ATM backbone at OC-12 or higher. These
subsystems are connected by an extremely high speed bus (at least 1 GB/sec).
The CPU software also defines the nature of the interface that the server presents to the
server can have a file system modeled after that of UNIX.
UNIX model is that once a PLAY command is given, the server just keeps pumping out data at
organization is the disk array or RAID (Redundant Array of Inexpensive Disks), in which
A striped disk array has several advantages over a disk farm. First, all n drives can be running
adding an extra drive to each group of n, where the redundant drive contains the block-byblock exclusive OR of the other drives, to allow full data recovery in the event one drive fails.
stream being served, a buffer of, say, 10 sec worth of video (5 MB) is kept in RAM. It is filled
by a disk process and emptied by a network process. With 500 MB of RAM, 100 streams can be
fed directly from RAM. Of course, the disk subsystem must have a sustained data rate of 50
MB/sec to keep the buffers full, but a RAID built from high-end SCSI disks can handle this
was also a requirement, but with even the smallest PC now able to buffer 10 sec of highquality MPEG-2 video, low jitter is not a requirement anymore.
different regions. Telephone companies, cable TV companies, and new entrants, such as power
demand go by the acronyms ADSL, FTTC, FTTH, and HFC. We will now explain each of these in
ADSL is the first telephone industry's entrant in the local distribution sweepstakes. We studied
ADSL in Chap. 2 and will not repeat that material here. The idea is that virtually every house in
The problem, of course, is that these wires cannot support even MPEG-1 over their typical 10km length, let alone MPEG-2. High-resolution, full-color, full motion video needs 4–8 Mbps,
depending on the quality desired. ADSL is not really fast enough except for very short local
The second telephone company design is FTTC (Fiber To The Curb). In FTTC, the telephone
in a device called an ONU (Optical Network Unit). On the order of 16 copper local loops can
terminate in an ONU. These loops are now so short that it is possible to run full-duplex T1 or
T2 over them, allowing MPEG-1 and MPEG-2 movies, respectively. In addition,
videoconferencing for home workers and small businesses is now possible because FTTC is
The third telephone company solution is to run fiber into everyone's house. It is called FTTH
(Fiber To The Home). In this scheme, everyone can have an OC-1, OC-3, or even higher
carrier if that is required. FTTH is very expensive and will not happen for years but clearly will
of the family operating his or her own personal television station? ADSL, FTTC, and FTTH are
A completely different approach is HFC (Hybrid Fiber Coax), which is the preferred solution
currently being installed by cable TV providers. It is illustrated in Fig. 2-47(a). The story goes
The 50 new channels will each be modulated using QAM-256, which provides about 40 Mbps
MPEG-2 movie.
short, replace the entire cable TV system. Consequently, the amount of new infrastructure
here is comparable to what the telephone companies need for FTTC. In both cases the local
terminates at an optoelectrical converter. In FTTC, the final segment is a point-to-point local
loop using twisted pairs. In HFC, the final segment is a shared coaxial cable. Technically, these
Nevertheless, there is one real difference that is worth pointing out. HFC uses a shared
any subscriber without further ado. FTTC, which is fully switched, does not have this property.
As a result, HFC operators want video servers to send out encrypted streams so customers
who have not paid for a movie cannot see it. FTTC operators do not especially want encryption
encrypt or not? A server operated by a telephone company or one of its subsidiaries or
but really to cause economic losses to its HFC competitors.
viewing on a Tuesday or Thursday evening before 6 P.M, or after 11 P.M. get a 27 percent
discount. Movies ordered on the first Sunday of the month before 8 A.M. for viewing on a
operational since early 1992. Many scientific conferences, especially IETF meetings, have been
broadcast, as well as newsworthy scientific events, such as space shuttle launches. A Rolling
six islands, A through F, connected by seven tunnels. Each island (typically a LAN or group of
of these are actually normal routers, but most are just UNIX workstations running special userlevel software (but as the root). The mrouters are logically connected by tunnels. MBone
packets are encapsulated within IP packets and sent as regular unicast packets to the
destination mrouter's IP address.
automatically reroute all the IP traffic between them via other lines.
When a new island appears and wishes to join MBone, such as G in Fig. 7-81, its administrator
DVMRP (Distance Vector Multicast Routing Protocol) based on the Bellman-Ford distance
vector algorithm. For example, in Fig. 7-81, island C can route to A either via B or via E (or
conceivably via D). It makes its choice by taking the values those nodes give it about their
respective distances to A and then adding its distance to them. In this way, every island
program, a source must first acquire a class D multicast address, which acts like a station
frequency or channel number. Class D addresses are reserved by a program that looks in a
Periodically, each mrouter sends out an IGMP broadcast packet limited to its island asking who
send another IGMP packet back in response. These responses are staggered in time, to avoid
overloading the local LAN. Each mrouter keeps a table of which channels it must put out onto
its LAN, to avoid wasting bandwidth by multicasting channels that nobody wants.
in Fig. 7-81, if C's tables tell it to use B to get to A, then when a multicast packet from A
reaches C via B, the packet is copied to D and E. However, when a multicast packet from A
reaches C via E (not the best path), it is simply discarded. This algorithm is just the reverse
In addition to using reverse path forwarding to prevent flooding the Internet, the IP Time to
(determined by the source). Each tunnel is assigned a weight. A packet is passed through a
routing. In particular, an IETF working group modified OSPF to make it suitable for
multicasting within a single autonomous system. The resulting multicast OSPF is called MOSPF
(Moy, 1994). What the modifications do is have the full map built by MOSPF keep track of
A second area of research is inter-AS routing. Here an algorithm called PIM (Protocol
Independent Multicast) was developed by another IETF working group. PIM comes in two
instead of creating an overlay topology as DVMRP and MOSPF do.
In PIM-DM (dense mode), the idea is to prune useless paths. Pruning works as follows. When a
PIM-SM (spare mode), described in RFC 2362, works differently. The idea here is to prevent
class D address. PIM-SM works by setting up rendezvous points. Each of the sources in a PIMSM multicast group send their packets to the rendezvous points. Any site interested in joining
up asks one of the rendezvous points to set up a tunnel to it. In this way, all PIM-SM traffic is
transported by unicast instead of by multicast. PIM-SM is becoming more popular, and the
MBone is migrating toward its use. As PIM-SM becomes more widely used, MOSPF is gradually
Naming in the Internet uses a hierarchical scheme called the domain name system (DNS). At
country domains. DNS is implemented as a distributed database system with servers all over
the world. DNS holds records with IP addresses, mail exchanges, and other information. By
querying a DNS server, a process can map an Internet domain name onto the IP address used
E-mail is one of the two killer apps for the Internet. Everyone from small children to
RFCs 2821 and 2822. Messages sent in this system use system ASCII headers to define
message properties. Many kinds of content can be sent using MIME. Messages are sent using
SMTP, which works by making a TCP connection from the source host to the destination host
and directly delivering the e-mail over the TCP connection.
hypertext documents. Originally, each document was a page written in HTML with hyperlinks
to other documents. Nowadays, XML is gradually starting to take over from HTML. Also, a large
amount of content is dynamically generated, using server-side scripts (PHP, JSP, and ASP), as
well as clientside scripts (notably JavaScript). A browser can display a document by
establishing a TCP connection to its server, asking for the document, and then closing the
The wireless Web is just getting started. The first systems are WAP and i-mode, each with
further along. Streaming audio, Internet radio, and voice over IP are a reality now, with new
2. According to the information given in Fig. 7-3, is little-sister.cs.vu.nl on a class A, B, or
C network?
4. Make a guess about what the smiley :-X (sometimes written as :-#) might mean.
5. DNS uses UDP instead of TCP. If a DNS packet is lost, there is no automatic recovery.
6. In addition to being subject to loss, UDP packets have a maximum length, potentially as
low as 576 bytes. What happens when a DNS name to be looked up exceeds this
7. Can a machine with a single DNS name have multiple IP addresses? How could this
8. Can a computer have two DNS names that fall in different top-level domains? If so, give
12. A person's e-mail address is his or her login name @ the name of a DNS domain with
an MX record. Login names can be first names, last names, initials, and all kinds of
fix this problem without changing DNS? If so, give a proposal and explain how it works.
13. A binary file is 3072 bytes long. How long will it be if encoded using base64 encoding,
with a CR+LF pair inserted after every 80 bytes sent and at the end?
14. Consider the quoted-printable MIME encoding scheme. Mention a problem not discussed
15. Name five MIME types not listed in the book. You can check your browser or the
16. Suppose that you want to send an MP3 file to a friend, but your friend's ISP limits the
amount of incoming mail to 1 MB and the MP3 file is 4 MB. Is there a way to handle this
situation by using RFC 822 and MIME?
18. In any standard, such as RFC 822, a precise grammar of what is allowed is needed so
carefully. The SMTP headers allow white space between the tokens. Give two plausible
21. From an ISP's point of view, POP3 and IMAP differ in an important way. POP3 users
generally empty their mailboxes every day. IMAP users keep their mail on the server
indefinitely. Imagine that you were called in to advise an ISP on which protocol it
22. Does Webmail use POP3, IMAP, or neither? If one of these, why was that one chosen? If
23. When Web pages are sent out, they are prefixed by MIME headers. Why?
helper to be started, even though the MIME type returned in both cases is identical?
26. A multithreaded Web server is organized as shown in Fig. 7-21. It takes 500 µsec to
have to keep the CPU busy all the time (assuming the disk is not a bottleneck)?
27. The standard http URL assumes that the Web server is listening on port 80. However, it
a URL accessing a file on a nonstandard port.
28. Although it was not mentioned in the text, an alternative form for a URL is to use the IP
address instead of its DNS name. An example of using an IP address is
following the scheme is a DNS name or an IP address?
29. Imagine that someone in the CS Department at Stanford has just written a new
program that he wants to distribute by FTP. He puts the program in the FTP directory
ftp/pub/freebies/newprog.c. What is the URL for this program likely to be?
30. In Fig. 7-25, www.aportal.com keeps track of user preferences in a cookie. A
disadvantage of this scheme is that cookies are limited to 4 KB, so if the preferences
for multiple cities, specials in numerous product categories, and more, the 4-KB limit
containing a customer ID number. In this way, the customer does not have to identify
32. In Fig. 7-26, the ALT parameter is set in the <img> tag. Under what conditions does
33. How do you make an image clickable in HTML? Give an example.
34. Show the <a> tag that is needed to make the string ''ACM'' be a hyperlink to
the submit button, the server returns their sum. Write the server side as a PHP script.
better to use a PHP script or JavaScript and why.
syntax as C and Java. The modulo operator is %. If you need the square root of x, use
39. An HTML page is as follows:
If the user clicks on the hyperlink, a TCP connection is opened and a series of lines is
HTML. Do you think the effectiveness of this technique is better or worse for JPEG
images as compared to HTML? Think carefully about what ''effectiveness'' means and
44. Does it make sense for a single ISP to function as a CDN? If so, how would that work?
45. Under what conditions is using a CDN a bad idea?
Devise a scheme for transmitting English text efficiently over a wireless link to a WAP
device. You may assume that the terminal has several megabytes of ROM and a
moderately powerful CPU. Hint: think about how you transmit Japanese, in which each
47. A compact disc holds 650 MB of data. Is compression used for audio CDs? Explain your
outputs at 1 Mbps. If the media player has a 1-MB buffer, what can you say about the
52. Does voice over IP have the same problems with firewalls that streaming audio does?
54. Can a 1-bit error in an MPEG frame affect more than the frame in which the error
per month. Half the movies are served at 8 P.M. How many movies does the server
many OC-12 connections does the server need to the network?
58. Numerous people have registered DNS names that consist of a www.word.com where
60. Write a POP3 server that accepts the following commands: USER, PASS, LIST, RETR,
DELE, and QUIT.
61. Rewrite the server of Fig. 6-6 as a true Web server using the GET command for HTTP
purportedly from the IRS saying: Pay by Friday or else is really from the IRS and not from the
benefit, get attention, or to harm someone. A few of the most common perpetrators are listed
In the network layer, firewalls can be installed to keep good packets and bad packets out. IP
random branch of a bank with an ATM slip he found on the street claiming to have forgotten
his PIN and get a new one on the spot (in the name of good customer relations), all the
Professionals make a distinction between ciphers and codes. A cipher is a character-forcharacter or bit-for-bit transformation, without regard to the linguistic structure of the
was used by the U.S. armed forces during World War II in the Pacific. They simply had Navajo
the U.S. broke the Japanese code but the Japanese never broke the Navajo code played a
use C = EK(P) to mean that the encryption of the plaintext P using key K gives the ciphertext
C. Similarly, P = DK(C) represents the decryption of C to get the plaintext again. It then follows
This notation suggests that E and D are just mathematical functions, which they are. The only
A fundamental rule of cryptography is that one must assume that the cryptanalyst knows the
encryption method, E, and decryption, D,of Fig. 8-2 work in detail. The amount of effort
this, but the key is secret. A key length of two digits means that there are 100 possibilities. A
as: What is the encryption of ABCDEFGHIJKL?
Julius Caesar. In this method, a becomes D, b becomes E, c becomes F, ... , and z becomes C.
For example, attack becomes DWWDFN. In examples, plaintext will be given in lower case
A slight generalization of the Caesar cipher allows the ciphertext alphabet to be shifted by k
ciphertext: Q W E R T Y U I O P A S D F G H J K L Z X C V B N M
the key above, the plaintext attack would be transformed into the ciphertext QZZQEA.
A cryptanalyst trying to break a monoalphabetic cipher would start out by counting the relative
common one of the form tXe, which strongly suggests that X is h. Similarly, if the pattern thYt
occurs frequently, the Y probably stands for a. With this information, he can look for a
CTBMN BYCTC BTJDS QXBNS GSTJC BTSWX CTQTZ CQVUJ
QJSGS TJQZZ MNQJS VLNSX VSZJU JDSTS JQUUS JUBXJ
DSKSU JSNTK BGAQJ ZBGYQ TLCTZ BNYBN QJSW
A likely word in a message from an accounting firm is financial. Using our knowledge that
word or phrase not containing any repeated letters. In this example, MEGABUCK is the key.
Figure 8-3. A transposition cipher.
transposition cipher. By looking at the frequency of E, T, A, O, I, N, etc., it is easy to see if
that digrams MO, IL, LL, LA, IR and OS occur in the ciphertext as a result of this phrase
wrapping around. The ciphertext letter O follows the ciphertext letter M (i.e., they are
distance equal to the key length. If a key of length seven had been used, the digrams MD, IO,
LL, LL, IA, OR, and NS would have occurred instead. In fact, for each key length, a different
string, for example by using its ASCII representation. Finally, compute the XOR (eXclusive OR)
An example of how one-time pads are used is given in Fig. 8-4. First, message 1, ''I love you.''
is converted to 7-bit ASCII. Then a one-time pad, pad 1, is chosen and XORed with the
message to get the ciphertext. A cryptanalyst could try all possible one-time pads to see what
subject beyond the scope of this book). In fact, for every 11-character ASCII plaintext, there is
applications. The source of the key could be a special DVD that contains several gigabytes of
information and if transported in a DVD movie box and prefixed by a few minutes of video,
DVD every 30 sec could become tedious. And the DVDs must be personally carried from the
A user, Alice, wants to establish a one-time pad with a second user, Bob. Alice and Bob are
vertical filter and a horizontal filter. This choice is called a rectilinear basis. A basis (plural:
needed. Consider a mail-order company, The Couch Potato (TCP), with 60,000 products.
Thinking they are being very efficient, TCP's programmers decide that ordering messages
very long key known only by the customer and TCP.
recently-fired employee wants to punish TCP for firing her. Just before leaving, she takes the
random numbers in the last 3 bytes, and sends hundreds of orders off to TCP.
When these messages arrive, TCP's computer uses the customer's name to locate the key and
decrypt the message. Unfortunately for TCP, almost every 3-byte message is valid, so the
competitor, The Sofa Tuber, would dearly love to know how many sandboxes TCP is selling.
Consequently, they have tapped TCP's telephone line. In the original scheme with 3-byte
predictable results, making the cryptanalysts' job easier. A CRC polynomial is much better than
taken, our ex-employee could tap TCP's phone line and just keep repeating previously sent
electrical circuits. Figure 8-6(a) shows a device, known as a P-box (P stands for permutation),
as 01234567, the output of this particular P-box is 36071245. By appropriate internal wiring, a
P-box can be made to perform any transposition and do it at practically the speed of light since
Figure 8-6. Basic elements of product ciphers. (a) P-box. (b) S-box. (c)
Substitutions are performed by S-boxes, as shown in Fig. 8-6(b). In this example a 3-bit
a P-box. The third stage encodes the selected input line in binary again. With the wiring
by 4, etc. Again, by appropriate wiring of the P-box inside the S-box, any substitution can be
propagation time across the P-box may well be less than 1 picosecond.
to have the second stage be an S-box that mapped a 12-bit number onto another 12-bit
Typically, k is 64 to 256. A hardware implementation usually has at least 18 physical stages,
instead of just seven as in Fig. 8-6(c). A software implementation is programmed as a loop
with at least 8 iterations, each one performing S-box-type substitutions on subblocks of the
64- to 256-bit data block, followed by a permutation that mixes the outputs of the S-boxes.
8.2.1 DES—The Data Encryption Standard
In January 1977, the U.S. Government adopted a product cipher developed by IBM as its
official standard for unclassified information. This cipher, DES (Data Encryption Standard),
original form, but in a modified form it is still useful. We will now explain how DES works.
An outline of DES is shown in Fig. 8-7(a). Plaintext is encrypted in blocks of 64 bits, yielding
Detail of one iteration. The circled + means exclusive OR.
input. The right output is the bitwise XOR of the left input and a function of the right input and
The function consists of four steps, carried out in sequence. First, a 48-bit number, E, is
rule. Second, E and Ki are XORed together. This output is then partitioned into eight groups of
6 bits each, each of which is fed into a different S-box. Each of the 64 possible inputs to an Sbox is mapped onto a 4-bit output. Finally, these 8 x 4 bits are passed through a P-box.
number. Ki is derived from this rotated key by applying yet another 56-bit transposition to it. A
A technique that is sometimes used to make DES stronger is called whitening. It consists of
XORing a random 64-bit key with each plaintext block before feeding it into DES and then
DES has been enveloped in controversy since the day it was launched. It was based on a
cipher developed and patented by IBM, called Lucifer, except that IBM's cipher used a 128-bit
key instead of a 56-bit key. When the U.S. Federal Government wanted to standardize on one
cipher for unclassified use, it ''invited'' IBM to ''discuss'' the matter with NSA, the U.S.
cryptologists. NSA is so secret that an industry joke goes:
Q1: What does NSA stand for?
Actually, NSA stands for National Security Agency.
After these discussions took place, IBM reduced the key from 128 bits to 56 bits and decided
to keep secret the process by which DES was designed. Many people suspected that the key
length was reduced to make sure that NSA could just break DES, but no organization with a
could make it even easier for NSA to break DES. When an NSA employee discreetly told IEEE
comfortable. NSA denied everything.
machine to break DES and estimated that it could be built for 20 million dollars. Given a small
Triple DES
As early as 1979, IBM realized that the DES key length was too short and devised a way to
keys and three stages are used. In the first stage, the plaintext is encrypted using DES in the
usual way with K1. In the second stage, DES is run in decryption mode, using K2 as the key.
Finally, another DES encryption is done with K1.
Figure 8-8. (a) Triple encryption using DES. (b) Decryption.
of three? Second, why is EDE (Encrypt Decrypt Encrypt) used, instead of EEE (Encrypt
with existing single-key DES systems. Both the encryption and decryption functions are
mappings are equally strong. By using EDE, however, instead of EEE, a computer using triple
cryptographers, but of considerable importance to IBM and its customers.
8.2.2 AES—The Advanced Encryption Standard
As DES began approaching the end of its useful life, even with triple DES, NIST (National
Institute of Standards and Technology), the agency of the U.S. Dept. of Commerce
charged with approving standards for the U.S. Federal Government, decided that the
government needed a new cryptographic standard for unclassified use. NIST was keenly aware
of all the controversy surrounding DES and well knew that if it just announced a new standard,
everyone knowing anything about cryptography would automatically assume that NSA had
built a back door into it so NSA could read everything encrypted with it. Under these
So NIST took a surprisingly different approach for a government bureaucracy: it sponsored a
invited to submit proposals for a new standard, to be called AES (Advanced Encryption
1998, NIST selected five finalists primarily on the basis of their security, efficiency, simplicity,
were held and more pot-shots taken. A nonbinding vote was taken at the last conference. The
RC6 (from RSA Laboratories, 23 votes).
MARS (from IBM, 13 votes).
In October 2000, NIST announced that it, too, voted for Rijndael, and in November 2001
Rijndael became a U.S. Government standard published as Federal Information Processing
Standard FIPS 197. Due to the extraordinary openness of the competition, the technical
cryptographers (who are unlikely to have built in a back door just to please NSA), it is
key length and block length may be chosen independently. However, AES specifies that the
that anyone will ever use 192-bit keys, so de facto, AES has two variants: a 128-bit block with
is likely to become the commercial norm. A 128-bit key gives a key space of 2128
keys. Even if NSA manages to build a machine with 1 billion parallel processors, each being
provable security properties. However, it can also be viewed as C code, without getting into
Like DES, Rijndael uses substitution and permutations, and it also uses multiple rounds. The
number of rounds depends on the key size and block size, being 10 for 128-bit keys with 128bit blocks and moving up to 14 for the largest key or the largest block. However, unlike DES,
maintained in a byte array, state, whose size is NROWS x NCOLS. For 128-bit blocks, this
byte. In other words each of the 16 bytes in state is replaced by the XOR of itself and the
does a byte-for-byte substitution on state. Each byte in turn is used as an index into an S-box
to replace its value by the contents of that S-box entry. This step is a straight monoalphabetic
substitution cipher. Unlike DES, which has multiple S-boxes, Rijndael has only one S-box.
matrix, with the multiplication done using the finite Galois field, GF(28). Although this may
computed using two table lookups and three XORs (Daemen and Rijmen, 2002, Appendix E).
The algorithm has been designed not only for great security, but also for great speed. A good
700 Mbps, which is fast enough to encrypt over 100 MPEG-2 videos in real time. Hardware
Despite all this complexity, AES (or DES or any block cipher for that matter) is basically a
monoalphabetic substitution cipher using big characters (128-bit characters for AES and 64-bit
characters for DES). Whenever the same plaintext block goes in the front end, the same
the same DES key, you get the same ciphertext 100 times. An intruder can exploit this
cipher, we will use (triple) DES because it is easier to depict 64-bit blocks than 128-bit blocks,
but AES has exactly the same problem. The straightforward way to use DES to encrypt a long
need be. This technique is known as ECB mode (Electronic Code Book mode) in analogy
(triple) DES.
Figure 8-11. The plaintext of a file encrypted as 16 DES blocks.
with a randomly chosen IV (Initialization Vector), which is transmitted (in plaintext) along
start out by computing C0 = E(P0 XOR IV). Then we compute C1 = E(P1 XOR C0), and so on.
Decryption also uses XOR to reverse the process, with P0 = IV XOR D(C0), and so on. Note that
plaintext generates different ciphertext depending on where it occurs. A transformation of the
unsuitable. For byte-by-byte encryption, cipher feedback mode, using (triple) DES is used,
as shown in Fig. 8-13. For AES the idea is exactly the same, only a 128-bit shift register is
DES algorithm operates on the 64-bit shift register to generate a 64-bit ciphertext. The
A problem with cipher feedback mode is that if one bit of the ciphertext is accidentally inverted
ciphertext, as shown in Fig. 8-14(a). Note that the IV is used only on the first step. After that,
Figure 8-14. A stream cipher. (a) Encryption. (b) Decryption.
keystream depends only on the IV and the key, it is not affected by transmission errors in the
It is essential never to use the same (key, IV) pair twice with a stream cipher because doing
with the keystream to get P0 XOR K0. Later, a second plaintext block, Q0, is encrypted with the
same keystream to get Q0 XOR K0. An intruder who captures both of these ciphertext blocks
can simply XOR them together to get P0 XOR Q0, which eliminates the key. The intruder now
has the XOR of the two plaintext blocks. If one of them is known or can be guessed, the other
can also be found. In any event, the XOR of two plaintext streams can be attacked by using
character in the stream will probably be the XOR of two spaces, followed by the XOR of space
and the letter ''e'', etc. In short, equipped with the XOR of two plaintexts, the cryptanalyst has
the same key, K, is used again in the future (with a different plaintext but the same IV) and an
ciphers. All the cryptanalyst has to do is to XOR the two ciphertexts together to eliminate all
the cryptographic protection and just get the XOR of the plaintexts. This weakness does not
IV is different each time, the plaintext is safe.
DES and Rijndael are the best-known symmetric-key, cryptographic algorithms. However, it is
these are embedded inside various products. A few of the more common ones are listed in Fig.
DES with only 243 known plaintexts. It works by XORing certain bits in the plaintext and
CPU's power and ground pins, can precisely monitor the power consumed by each machine
their proposal, the (keyed) encryption algorithm, E, and the (keyed) decryption algorithm, D,
1. D(E(P)) = P.
2. It is exceedingly difficult to deduce D from E.
3. E cannot be broken by a chosen plaintext attack.
The first requirement says that if we apply D to an encrypted message, E(P), we get the
original plaintext message, P, back. Without this property, the legitimate receiver could not
The method works like this. A person, say, Alice, wanting to receive secret messages, first
public key on her home page on the Web, for example. We will use the notation EA to mean
algorithm parameterized by Alice's private key is DA. Bob does the same thing, publicizing EB
but keeping DB secret.
Bob, who have never had any previous contact. Both Alice's encryption key, EA, and Bob's
encryption key, EB, are assumed to be in publicly readable files. Now Alice takes her first
message, P, computes EB(P), and sends it to Bob. Bob then decrypts it by applying his secret
key DB [i.e., he computes DB(EB(P)) = P]. No one else can read the encrypted message, EB(P),
because the encryption system is assumed strong and because it is too difficult to derive DB
from the publicly known EB. To send a reply, R, Bob transmits EA(R). Alice and Bob can now
A note on terminology is perhaps useful here. Public-key cryptography requires each user to
8.3.1 RSA
a group at M.I.T. (Rivest et al., 1978). It is known by the initials of the three discoverers
(Rivest, Shamir, Adleman): RSA. It has survived all attempts to break it for more than a
The RSA method is based on some principles from number theory. We will now summarize how
plaintext (regarded as a bit string) into blocks, so that each plaintext message, P, falls in the
P < n. Do that by grouping the plaintext into blocks of k bits, where k is the
To encrypt a message, P, compute C = Pe (mod n). To decrypt C, compute P = Cd (mod n). It
can be proven that for all P in the specified range, the encryption and decryption functions are
A trivial pedagogical example of how the RSA algorithm works is given in Fig. 8-17. For this
example we have chosen p = 3 and q = 11, giving n = 33 and z = 20. A suitable value for d is
the equation 7e = 1 (mod 20), which yields e = 3. The ciphertext, C, for a plaintext message,
P, is given by C = P3 (mod 33). The ciphertext is decrypted by the receiver by making use of
the rule P = C7 (mod 33). The figure shows the encryption of the plaintext ''SUZANNE'' as an
Figure 8-17. An example of the RSA algorithm.
Because the primes chosen for this example are so small, P must be less than 33, so each
for DES and 16 characters for AES.
It should be pointed out that using RSA as we have described is similar to using a symmetric
algorithm in ECB mode—the same input block gives the same output block. Therefore, some
form of chaining is needed for data encryption. However, in practice, most RSA-based systems
symmetric-key algorithm such as AES or triple DES. RSA is too slow for actually encrypting
Although RSA is widely used, it is by no means the only public-key algorithm known. The first
so he offered a $100 reward to anyone who could break it. Adi Shamir (the ''S'' in RSA)
and offered a $1000 reward to anyone who could break the new one. Ronald Rivest (the ''R'' in
RSA) promptly broke the new one and collected the reward. Merkle did not dare offer $10,000
for the next version, so ''A'' (Leonard Adleman) was out of luck. Nevertheless, the knapsack
A few other schemes exist, such as those based on elliptic curves (Menezes and Vanstone,
buys the ton of gold, and immediately thereafter the price of gold drops sharply. A dishonest
whom everyone trusts, say Big Brother (BB). Each user then chooses a secret key and carries
it by hand to BB's office. Thus, only Alice and BB know Alice's secret key, KA, and so on.
When Alice wants to send a signed plaintext message, P, to her banker, Bob, she generates
KA(B, RA, t, P), where B is Bob's identity, RA is a random number chosen by Alice, t is a
timestamp to ensure freshness, and KA(B, RA, t, P) is the message encrypted with her key, KA.
Then she sends it as depicted in Fig. 8-18. BB sees that the message is from Alice, decrypts it,
message and also the signed message KBB (A, t, P). Bob now carries out Alice's request.
BB will not accept a message from Alice unless it is encrypted with KA, so there is no possibility
of Trudy sending BB a false message from Alice without BB detecting it immediately.
Bob then dramatically produces Exhibit A: KBB (A, t, P). Bob says that this is a message signed
by BB which proves Alice sent P to Bob. The judge then asks BB (whom everyone trusts) to
decrypt Exhibit A. When BB testifies that Bob is telling the truth, the judge decides in favor of
check all recent messages to see if RA was used in any of them. If so, the message is discarded
against instant replay attacks, Bob just checks the RA of every incoming message to see if such
A structural problem with using symmetric-key cryptography for digital signatures is that
E(D(P)) = P in addition, of course, to the usual property that D(E(P)) = P. (RSA has this
send a signed plaintext message, P, to Bob by transmitting EB(DA(P)). Note carefully that Alice
knows her own (private) key, DA, as well as Bob's public key, EB, so constructing this message
DA(P), as shown in Fig. 8-19. He stores this text in a safe place and then applies EA to get the
the message P to Bob. When the case comes up in court, Bob can produce both P and DA(P).
The judge can easily verify that Bob indeed has a valid message encrypted by DA by simply
applying EA to it. Since Bob does not know what Alice's private key is, the only way Bob could
algorithm. For one thing, Bob can prove that a message was sent by Alice only as long as DA
message to Bob, Alice runs to the police claiming that her home was burglarized and the PC
case later arises, as described above, the judge will apply the current EA to DA(P) and discover
that it does not produce P. Bob will look pretty stupid at this point.
standard is the RSA algorithm. Many security products use it. However, in 1991, NIST
Standard (DSS). El Gamal gets its security from the difficulty of computing discrete
DSS was criticized for being
secret (NSA designed the protocol for using El Gamal).
slow (10 to 40 times slower than RSA for checking signatures).
piece of plaintext and from it computes a fixed-length bit string. This hash function, MD, often
Given P, it is easy to compute MD(P).
Given MD(P), it is effectively impossible to find P.
Given P no one can find P' such that MD (P') = MD(P).
A change to the input of even 1 bit produces a very different output.
again. Instead of signing P with KBB (A, t, P), BB now computes the message digest by
applying MD to P, yielding MD(P). BB then encloses KBB (A, t, MD(P)) as the fifth item in the list
encrypted with KB that is sent to Bob, instead of KBB (A, t, P).
If a dispute arises, Bob can produce both P and KBB (A, t, MD(P)). After Big Brother has
decrypted it for the judge, Bob has MD(P), which is guaranteed to be genuine, and the alleged
P. However, since it is effectively impossible for Bob to find any other message that gives this
both the signed digest and the plaintext to Bob. If Trudy replaces P underway, Bob will see this
when he computes MD(P) himself.
A variety of message digest functions have been proposed. The most widely used ones are
MD5 (Rivest, 1992) and SHA-1 (NIST, 1993). MD5 is the fifth in a series of message digests
back door through which only he can enter. Remember that IBM's refusal to disclose the
principles behind the design of the S-boxes in DES led to a great deal of speculation about
SHA-1
The other major message digest function is SHA-1 (Secure Hash Algorithm 1), developed
by NSA and blessed by NIST in FIPS 180-1. Like MD5, SHA-1 processes input data in 512-bit
blocks, only unlike MD5, it generates a 160-bit message digest. A typical way for Alice to send
is fed into the SHA-1 algorithm to get a 160-bit SHA-1 hash. Alice then signs the hash with her
RSA private key and sends both the plaintext message and the signed hash to Bob.
Figure 8-21. Use of SHA-1 and RSA for signing nonsecret messages.
After receving the message, Bob computes the SHA-1 hash himself and also applies Alice's
public key to the signed hash to get the original hash, H. If the two agree, the message is
in transit and produce a new one that hashes to H, Bob can easily detect any changes Trudy
Now let us briefly see how SHA-1 works. It starts out by padding the message by adding a 1
as the SPARC, but SHA-1 always pads the end of the message, no matter which endian
Figure 8-22. (a) A message padded out to a multiple of 512 bits. (b)
During the computation, SHA-1 maintains five 32-bit variables, H0 through H4, where the hash
words are first copied into the start of an auxiliary 80-word array, W, as shown in Fig. 8-22(c).
Then the other 64 words in W are filled in using the formula
where Sb(W) represents the left circular rotation of the 32-bit word, W, by b bits. Now five
scratch variables, A through E are initialized from H0 through H4, respectively.
The actual calculation can be expressed in pseudo-C as
temp = S5(A) + fi (B, C, D) + E + Wi +Ki;
E=D; D=C; C=S30(B); B = A; A = temp;
When all 80 iterations of the loop are completed, A through E are added to H
through H 4,
Now that the first 512-bit block has been processed, the next one is started. The W array is
reinitialized from the new block, but H is left as it was. When this block is finished, the next
When the last block has been finished, the five 32-bit words in the H array are output as the
160-bit cryptographic hash. The complete C code for SHA-1 is given in RFC 3174.
New versions of SHA-1 are under development for hashes of 256, 384, and 512 bits,
candidate | up] for tenure [now | this year]. I have [known | worked with] Prof. Wilson for
[important | essential] to both of us. I strongly urge you to grant him tenure.
candidate | up] for tenure [now | this year]. I have [known | worked with] Tom for [about |
such as your State 2000 program. Unfortunately, under these [conditions | circumstances] I
finds a match. Call the ''good'' letter A and the ''bad'' one B.
Ellen now e-mails letter A to Marilyn for her approval. Letter B she keeps completely secret,
B to the Dean (not letter A, as she is supposed to).
algorithm on letter B, sees that it agrees with what Marilyn sent him, and fires Tom. The Dean
course, with 5000 computers working in parallel, 500 years becomes 5 weeks. SHA-1 is better
does she do it? She starts by typing in Bob's URL. Her browser then looks up the DNS address
of Bob's home page and sends it a GET request, as shown in Fig. 8-23. Unfortunately, Trudy
encrypts her first message with ET, Trudy decrypts it, reads it, reencrypts it with Bob's public
Figure 8-23. A way for Trudy to subvert public-key encryption.
organizations. An organization that certifies public keys is now called a CA (Certification
him securely. He can go to the CA with his public key along with his passport or driver's license
and ask to be certified. The CA then issues a certificate similar to the one in Fig. 8-24 and
signs its SHA-1 hash with the CA's private key. Bob then pays the CA's fee and gets a floppy
Figure 8-24. A possible certificate and its signed hash.
certificate and the signature block (the signed SHA-1 hash of the certificate).
replacing Bob's public key with her own. However, when Alice runs the SHA-1 algorithm on the
CA's well-known public key to the signature block. Since Trudy does not have the CA's private
not Trudy's or someone else's. And as we promised, this scheme does not require the CA to be
8.5.2 X.509
If everybody who wanted something signed went to the CA with a different kind of certificate,
standard for certificates has been devised and approved by ITU. The standard is called X.509
X.509 has been heavily influenced by the OSI world, borrowing some of its worst features
(e.g., naming and encoding). Surprisingly, IETF went along with X.509, even though in nearly
every other area, from machine addresses to transport protocols to e-mail formats, IETF
generally ignored OSI and tried to do it right. The IETF version of X.509 is described in RFC
At its core, X.509 is a way to describe certificates. The primary fields in a certificate are listed
For additional information, please consult the standard itself or RFC 2459.
Figure 8-25. The basic fields of an X.509 certificate.
For example, if Bob works in the loan department of the Money Bank, his X.500 address might
/C=US/O=MoneyBank/OU=Loan/CN=Bob/
where C is for country, O is for organization, OU is for organizational unit, and CN is for
common name. CAs and other entities are named in a similar way. A substantial problem with
X.500 names is that if Alice is trying to contact bob@moneybank.com and is given a certificate
with an X.500 name, it may not be obvious to her that the certificate refers to the Bob she
wants. Fortunately, starting with version 3, DNS names are now permitted instead of X.500
Certificates are encoded using the OSI ASN.1 (Abstract Syntax Notation 1), which can be
thought of as being like a struct in C, except with a very peculiar and verbose notation. More
information about X.509 can be found in (Ford and Baum, 2000).
Having a single CA to issue all the world's certificates obviously would not work. It would
collapse under the load and be a central point of failure as well. A possible solution might be to
key leakage. If there were dozens of servers spread around the world, all holding the CA's
infrastructure, having a single central CA is very risky.
In addition, which organization would operate the CA? It is hard to imagine any authority that
general name of PKI (Public Key Infrastructure). In this section we will summarize how it
A PKI has multiple components, including users, CAs, certificates, and directories. What the
PKI does is provide a way of structuring these components and define standards for the
various documents and protocols. A particularly simple form of PKI is a hierarchy of CAs, as
be fewer or more. The top-level CA, the root, certifies second-level CAs, which we call RAs
different levels of the tree. These in turn certify the real CAs, which issue the X.509 certificates
to organizations and individuals. When the root authorizes a new RA, it generates an X.509
certificate stating that it has approved the RA, includes the new RA's public key in it, signs it,
and hands it to the RA. Similarly, when an RA approves a new CA, it produces and signs a
certificate stating its approval and containing the CA's public key.
Figure 8-26. (a) A hierarchical PKI. (b) A chain of certificates.
Our PKI works like this. Suppose that Alice needs Bob's public key in order to communicate
with him, so she looks for and finds a certificate containing it, signed by CA 5. But Alice has
never heard of CA 5. For all she knows, CA 5 might be Bob's 10-year-old daughter. She could
go to CA 5 and say: Prove your legitimacy. CA 5 responds with the certificate it got from RA 2,
which contains CA 5's public key. Now armed with CA 5's public key, she can verify that Bob's
certificate was indeed signed by CA 5 and is thus legal.
Unless RA 2 is Bob's 12-year-old son. So the next step is for her to ask RA 2 to prove it is
legitimate. The response to her query is a certificate signed by the root and containing RA 2's
is going to have to check out CA 5 and RA 2, so to save her some trouble, he collects the two
attempts to tamper with their contents. A chain of certificates going back to the root like this is
Another issue for any PKI is where certificates (and their chains back to some known trust
detection), it is also inconvenient. One alternative that has been proposed is to use DNS as a
certificate directory. Before contacting Bob, Alice probably has to look up his IP address using
DNS, so why not have DNS return Bob's entire certificate chain along with his IP address?
whose only job is managing X.509 certificates. Such directories could provide lookup services
by using properties of the X.500 names. For example, in theory such a directory service could
departments anywhere in the U.S. or Canada.'' LDAP might be a candidate for holding such
worse yet, the CA's private key has been compromised. Thus, a PKI needs to deal with the
A first step in this direction is to have each CA periodically issue a CRL (Certificate
certificates contain expiry times, the CRL need only contain the serial numbers of certificates
acquire the CRL to see if the certificate has been revoked. If it has been, it should not be used.
was published. Thus, the only way to really be sure is to ask the CA. And on the next use of
the same certificate, the CA has to be asked again, since the certificate might have been
namely, that they can be used without having to contact a CA.
Where should CRLs be stored? A good place would be the same place the certificates
themselves are stored. One strategy is for the CA to actively push out CRLs periodically and
around the network. Since a CRL is itself a signed document, if it is tampered with, that
are issued every 3 months. A standard way to deal with long CRLs is to issue a master list
IETF has known for years that security was lacking in the Internet. Adding it was not easy
The result of this war was a design called IPsec (IP security), which is described in RFCs
for its simplicity, ease of implementation, and great speed in RFC 2410.
The reason for having multiple granularities is to make it possible to protect a single TCP
One slightly surprising aspect of IPsec is that even though it is in the IP layer, it is connection
connections amortize the setup costs over many packets. A ''connection'' in the context of
IPsec is called an SA (security association). An SA is a simplex connection between two end
The other part, ISAKMP (Internet Security Association and Key Management Protocol)
deals with establishing keys. We will not deal with ISAKMP further because (1) it is extremely
complex and (2) its main protocol, IKE (Internet Key Exchange), is deeply flawed and
just after the IP header. The Protocol field in the IP header is changed to indicate that an IPsec
header follows the normal IP header (before the TCP header). The IPsec header contains
security information, primarily the SA identifier, a new sequence number, and possibly an
In tunnel mode, the entire IP packet, header and all, is encapsulated in the body of a new IP
packet with a completely new IP header. Tunnel mode is useful when the tunnel ends at a
machine, the machines on the company LAN do not have to be aware of IPsec. Only the
Tunnel mode is also useful when a bundle of TCP connections is aggregated and handled as
an extra IP header, thus increasing packet size substantially. In contrast, transport mode does
The first new header is AH (Authentication Header). It provides integrity checking and
antireplay security, but not secrecy (i.e., no data encryption). The use of AH in transport mode
is illustrated in Fig. 8-27. In IPv4 it is interposed between the IP header (including any
options) and the TCP header. In IPv6 it is just another extension header and treated as such.
Let us now examine the AH header. The Next header field is used to store the previous value
that the IP Protocol field had before it was replaced with 51 to indicate that an AH header
follows. In most cases, the code for TCP (6) will go here. The Payload length is the number of
32-bit words in the AH header minus 2.
invented by ITU rather than IETF, this field would have been called Virtual circuit number.
The Sequence number field is used to number all the packets sent on an SA. Every packet gets
different number here than the original (even though its TCP sequence number is the same).
around. If all 232 are exhausted, a new SA must be established to continue communication.
payload's digital signature. When the SA is established, the two sides negotiate which
negotiate a shared key before setting up an SA, the shared key is used in the signature
shared key is not transmitted, of course. A scheme like this is called an HMAC (Hashed
Message Authentication Code). It is much faster to compute than first running SHA-1 and
then running RSA on the result.
The AH header does not allow encryption of the data, so it is mostly useful when integrity
checking is needed but secrecy is not needed. One noteworthy feature of AH is that the
integrity check covers some of the fields in the IP header, namely, those that do not change as
example, so it cannot be included in the integrity check. However, the IP source address is
The alternative IPsec header is ESP (Encapsulating Security Payload). Its use for both
Figure 8-28. (a) ESP in transport mode. (b) ESP in tunnel mode.
The ESP header consists of two 32-bit words. They are the Security parameters index and
Sequence number fields that we saw in AH. A third word that generally follows them (but is
ESP also provides for HMAC integrity checks, as does AH, but rather than being included in the
header, they come after the payload, as shown in Fig. 8-28. Putting the HMAC at the end has
an advantage in a hardware implementation. The HMAC can be calculated as the bits are going
have their CRCs in a trailer, rather than in a header. With AH, the packet has to be buffered
Given that ESP can do everything AH can do and more and is more efficient to boot, the
question arises: Why bother having AH at all? The answer is mostly historical. Originally, AH
handled only integrity and ESP handled only secrecy. Later, integrity was added to ESP, but
the people who designed AH did not want to let it die after all that work. Their only real
argument, however, is that AH checks part of the IP header, which ESP does not, but it is a
weak argument. Another weak argument is that a product supporting AH but not ESP might
have less trouble getting an export license because it cannot do encryption. AH is likely to be
does nothing to keep digital pests and intruders from getting onto the company LAN. To see
over a single drawbridge, where they could be inspected by the I/O police. With networks, the
Figure 8-29. A firewall consisting of two packet filters and an
In Fig. 8-29, most likely the packet filter on the inside LAN checks outgoing packets and the
one on the outside LAN checks incoming packets. Packets crossing the first hurdle go to the
In the common case of a TCP/IP setting, a source or destination consists of an IP address and
a port. Ports indicate which service is desired. For example, TCP port 23 is for telnet, TCP port
79 is for finger, and TCP port 119 is for USENET news. A company could block incoming
packets for all IP addresses combined with one of these ports. In this way, no one outside the
the company would be spared from having employees spend all day reading USENET news.
services, such as FTP (File Transfer Protocol), port numbers are assigned dynamically. In
addition, although blocking TCP connections is difficult, blocking UDP packets is even harder
to simply ban UDP traffic altogether.
packets, the gateway operates at the application level. A mail gateway, for example, can be
photograph them and ship the photos as JPEG files, which bypasses any word filters. And we
collapses under the load. For example, to cripple a Web site, an intruder can send a TCP SYN
send a SYN + ACK packet in reply. If the intruder does not respond, the table slot will be tied
and if enough requests per second arrive, the CPU will spend all its time dealing with them.
companies still do this. A network built up from company computers and leased telephone lines
Figure 8-30. (a) A leased-line private network. (b) A virtual private
Although VPNs can be implemented on top of ATM (or frame relay), an increasingly popular
approach is to build VPNs directly over the Internet. A common design is to equip each office
traffic between any two pairs of offices onto a single authenticated, encrypted SA, thus
SA, including the services, modes, algorithms, and keys. Many firewalls have VPN capabilities
with ESP in tunnel mode are a natural combination and widely used in practice.
a packet traveling along a VPN tunnel is just an ordinary packet. The only thing unusual about
it is the presence of the IPsec header after the IP header, but since these extra headers have
A key advantage of organizing a VPN this way is that it is completely transparent to all user
The 802.11 standard prescribes a data link-level security protocol called WEP (Wired
Equivalent Privacy), which is designed to make the security of a wireless LAN as good as
that of a wired LAN. Since the default for wired LANs is no security at all, this goal is easy to
achieve, and WEP achieves it, as we shall see.
WEP encryption uses a stream cipher based on the RC4 algorithm. RC4 was designed by
(which was not the goal with RC4). In WEP, RC4 generates a keystream that is XORed with the
checksummed using the CRC-32 polynomial and the checksum appended to the payload to
keystream its own size. The result is the ciphertext. The IV used to start RC4 is sent along with
generates the keystream from the shared secret key and the IV it just got, and XORs the
Figure 8-31. Packet encryption using WEP.
But even if each user has a distinct key, WEP can still be attacked. Since keys are generally
stable for long periods of time, the WEP standard recommends (but does not mandate) that IV
Unfortunately, many 802.11 cards for notebook computers reset IV to 0 when the card is
remove and reinsert these cards, packets with low IV values are common. If Trudy can collect
several packets sent by the same user with the same IV value (which is itself sent in plaintext
along with each packet), she can compute the XOR of two plaintext values and probably break
But even if the 802.11 card picks a random IV for each packet, the IVs are only 24 bits, so
minutes, she is almost sure to capture two packets with the same IV and same key. By XORing
the ciphertexts she is able to obtain the XOR of the plaintexts. This bit sequence can be
that IV can also be obtained. Trudy can continue working like this for a while and compile a
dictionary of keystreams for various IVs. Once an IV has been broken, all the packets sent with
Furthermore, since IVs are used at random, once Trudy has determined a valid (IV,
of packets suddenly all have the same IV, but (1) WEP allows this, and (2) nobody checks for
Finally, the CRC is not worth much, since it is possible for Trudy to change the payload and
make the corresponding change to the CRC, without even having to remove the encryption In
attack on WEP was published (Fluhrer et al., 2001). This one found cryptographic weaknesses
In contrast, when a summer student and two researchers at AT&T Labs learned about the
week they had broken their first 128-bit key on a production 802.11 LAN, and most of the
When they announced their results, CNN ran a story entitled ''Off-the-Shelf Hack Breaks
in WEP and 802.11.
On September 7, 2001, IEEE responded to the fact that WEP was now completely broken by
We told you that WEP security was no better than Ethernet's.
A much bigger threat is forgetting to enable security at all.
Encryption uses a stream cipher called E0; integrity control uses SAFER+. Both are traditional
symmetric-key block ciphers. SAFER+ was submitted to the AES bake-off, but was eliminated
before the AES cipher was chosen; otherwise it would most likely have used Rijndael.
with the keystream to generate the ciphertext. Unfortunately, E 0 itself (like RC4) may have
writing, its similarities to the A5/1 cipher, whose spectacular failure compromises all GSM
link-level security, some security may remain, especially for applications that require a PIN
WAP 2.0 Security
For the most part, the WAP Forum learned its lesson from having a nonstandard protocol stack
in WAP 1.0. WAP 2.0 largely uses standard protocols in all layers. Security is no exception.
Since it is IP based, it supports full use of IPsec in the network layer. In the transport layer,
TCP connections can be protected by TLS, an IETF standard we will study later in this chapter.
Higher still, it uses HTTP client authentication, as defined in RFC 2617. Application-layer crypto
libraries provide for integrity control and nonrepudiation. All in all, since WAP 2.0 is based on
a file server and says: I am Scott's process and I want to delete the file cookbook.old. From
message either to Bob or to a trusted KDC (Key Distribution Center), which is expected to
(typically AES or triple DES), although public-key cryptography is widely used for the
key, KAB . This shared key might have been agreed upon on the telephone or in person, but, in
A, B are the identities of Alice and Bob.
KS is the session key.
The message sequence for our first shared-key authentication protocol is illustrated in Fig. 832. In message 1, Alice sends her identity, A, to Bob in a way that Bob understands. Bob, of
chooses a challenge, a large random number, RB, and sends it back to ''Alice'' as message 2, in
the ciphertext, KAB (RB), back in message 3. When Bob sees this message, he immediately
knows that it came from Alice because Trudy does not know KAB and thus could not have
generated it. Furthermore, since RB was chosen randomly from a large space (say, 128-bit
random numbers), it is very unlikely that Trudy would have seen RB and its response from an
knows, Trudy might have intercepted message 1 and sent back RB in response. Maybe Bob
died last night. To find out to whom she is talking, Alice picks a random number, RA and sends
it to Bob as plaintext, in message 4. When Bob responds with KAB (RA), Alice knows she is
talking to Bob. If they wish to establish a session key now, Alice can pick one, KS, and send it
to Bob encrypted with KAB.
Figure 8-33. A shortened two-way authentication protocol.
sending RT. Bob responds, as usual, with his own challenge, RB. Now Trudy is stuck. What can
she do? She does not know KAB (RB).
She can open a second session with message 3, supplying the RB taken from message 2 as her
challenge. Bob calmly encrypts it and sends back KAB (RB)in message 4. We have shaded the
two shared keys, KAB and K'AB .
Figure 8-35. A reflection attack on the protocol of Fig. 8-32.
challenge, and sends the RA she got in message 3. Alice kindly responds to it in message 5,
been stopped. A detailed discussion of these kind of attacks and how to thwart them is given in
The new authentication protocol is shown in Fig. 8-36 (Bird et al., 1993). It uses an HMAC of
the type we saw when studying IPsec. Alice starts out by sending Bob a nonce, RA as message
1. Bob responds by selecting his own nonce, RB, and sending it back along with an HMAC. The
HMAC is formed to building a data structure consisting of the Alice's nonce, Bob's nonce, their
identities, and the shared secret key, KAB. This data structured is then hashed into the HMAC,
for example using SHA-1. When Alice receives message 2, she now has RA (which she picked
herself), RB, which arrives as plaintext, the two identities, and the secret key, KAB, which has
known all along, so she can compute the HMAC herself. If it agrees with the HMAC in the
message, she knows she is talking to Bob because Trudy does not know KAB and thus cannot
figure out which HMAC to send. Alice responds to Bob with an HMAC containing just the two
instead of computing the HMAC over a series of items is to encrypt the items sequentially
(because so far there is no universally accepted PKI for signing and distributing certificates).
the phone, but he would probably start out by saying: How do I know you are Alice and not
A different approach is to introduce a trusted key distribution center (KDC). In this model,
each user has a single key shared with the KDC. Authentication and session key management
now goes through the KDC. The simplest known KDC authentication protocol involving two
parties and a trusted KDC is depicted in Fig. 8-39.
Figure 8-39. A first attempt at an authentication protocol using a KDC.
The idea behind this protocol is simple: Alice picks a session key, KS, and tells the KDC that
she wants to talk to Bob using KS. This message is encrypted with the secret key Alice shares
(only) with the KDC, KA. The KDC decrypts this message, extracting Bob's identity and the
and sends this message to Bob. This encryption is done with KB, the secret key Bob shares
with the KDC. When Bob decrypts the message, he learns that Alice wants to talk to him and
The authentication here happens for free. The KDC knows that message 1 must have come
Similarly, Bob knows that message 2 must have come from the KDC, whom he trusts, since no
A more sophisticated approach to mutual authentication is to use a multiway challengeresponse protocol. A well-known example of such a protocol is the Needham-Schroeder
The protocol begins with Alice telling the KDC that she wants to talk to Bob. This message
contains a large random number, RA, as a nonce. The KDC sends back message 2 containing
random number, RA, is to assure Alice that message 2 is fresh, and not a replay. Bob's identity
is also enclosed in case Trudy gets any funny ideas about replacing B in message 1 with her
own identity so the KDC will encrypt the ticket at the end of message 2 with KT instead of KB.
The ticket encrypted with KB is included inside the encrypted message to prevent Trudy from
session key, KS. In message 4, Bob sends back KS(RA2 - 1) to prove to Alice that she is talking
to the real Bob. Sending back KS(RA2) would not have worked, since Trudy could just have
In the Otway-Rees protocol, Alice starts out by generating a pair of random numbers, R, which
will be used as a common identifier, and RA, which Alice will use to challenge Bob. When Bob
and an analogous one of his own. Both the parts encrypted with KA and KB identify Alice and
The KDC checks to see if the R in both parts is the same. It might not be because Trudy
tampered with R in message 1 or replaced part of message 2. If the two Rs match, the KDC
random number, as proof that the KDC, and not Trudy, generated the message. At this point
identical copy of KS, so the authentication is then complete.
out). Kerberos was designed at M.I.T. to allow workstation users to access network resources
Authentication Server (AS): verifies users during login
Ticket-Granting Server (TGS): issues ''proof of identity tickets''
AS is similar to a KDC in that it shares a secret password with every user. The TGS's job is to
issue tickets that can convince the real servers that the bearer of a TGS ticket really is who he
workstation sends her name to the AS in plaintext, as shown in Fig. 8-42. What comes back is
a session key and a ticket, KTGS(A, KS), intended for the TGS. These items are packaged
used to generate KA in order to decrypt message 2 and obtain the session key and TGS ticket
The workstation then sends message 3 to the TGS asking for a ticket to use with Bob. The key
element in this request is KTGS(A, KS), which is encrypted with the TGS's secret key and used
as proof that the sender really is Alice. The TGS responds by creating a session key, KAB, for
Alice to use with Bob. Two versions of it are sent back. The first is encrypted with only KS, so
Alice can read it. The second is encrypted with Bob's key, KB, so Bob can read it.
because she does not know KS, the session key Alice uses to talk to the TGS. Even if Trudy
Now Alice can send KAB to Bob to establish a session with him. This exchange is also
After this series of exchanges, Alice can communicate with Bob under cover of KAB. If she later
decides she needs to talk to another server, Carol, she just repeats message 3 to the TGS,
only now specifying C instead of B. The TGS will promptly respond with a ticket encrypted with
KC that Alice can send to Carol and that Carol will accept as proof that it came from Alice.
server, they made provision for having multiple realms, each with its own AS and TGS. To get
a ticket for a server in a distant realm, Alice would ask her own TGS for a ticket accepted by
the TGS in the distant realm. If the distant TGS has registered with the local TGS (the same
way local servers do), the local TGS will give Alice a ticket valid at the distant TGS. She can
that for parties in two realms to do business, each one must trust the other's TGS.
Kerberos V5 is fancier than V4 and has more overhead. It also uses OSI ASN.1 (Abstract
postdated tickets. In addition, at least in theory, it is not DES dependent, as V4 is, and
needs to get Bob's public key. If a PKI exists with a directory server that hands out certificates
message 2, is an X.509 certificate containing Bob's public key. When Alice verifies that the
soon gets (message 5). He then sends Alice a message containing Alice's RA, his own nonce,
RB, and a proposed session key, KS, as message 6.
When Alice gets message 6, she decrypts it using her private key. She sees RA in it, which
way of determining RA. Furthermore, it must be fresh and not a replay, since she just sent Bob
RA. Alice agrees to the session by sending back message 7. When Bob sees RB encrypted with
the session key he just generated, he knows Alice got message 6 and verified RA.
probing Alice, but Alice will see an RA that she did not send and will not proceed further. Trudy
cannot forge message 7 back to Bob because she does not know RB or KS and cannot determine
8.8 E-Mail Security
e-mail. In the following sections we will study a widely-used secure e-mail system, PGP, and
then briefly mention two others, PEM and S/MIME. For additional information about secure email, see (Kaufman et al., 2002; and Schneier, 1995).
8.8.1 PGP—Pretty Good Privacy
Our first example, PGP (Pretty Good Privacy) is essentially the brainchild of one person, Phil
is: If privacy is outlawed, only outlaws will have privacy. Released in 1991, PGP is a complete
easy availability on UNIX, Linux, Windows, and Mac OS platforms, it is widely used today.
PGP encrypts data by using a block cipher called IDEA (International Data Encryption
Algorithm), which uses 128-bit keys. It was devised in Switzerland at a time when DES was
seen as tainted and AES had not yet been invented. Conceptually, IDEA is similar to DES and
AES: it mixes up the bits in a series of rounds, but the details of the mixing functions are
different from DES and AES. Key management uses RSA and data integrity uses MD5, topics
PGP has also been embroiled in controversy since day 1 (Levy, 1993). Because Zimmermann
did nothing to stop other people from placing PGP on the Internet, where people all over the
world could get it, the U.S. Government claimed that Zimmermann had violated U.S. laws
prohibiting the export of munitions. The U.S. Government's investigation of Zimmermann went
not place PGP on the Internet himself, so his lawyer claimed that he never exported anything
the other hand, when someone published the complete PGP source code, in C, as a book (in a
Another problem PGP ran into involved patent infringement. The company holding the RSA
patent, RSA Security, Inc., alleged that PGP's use of the RSA algorithm infringed on its patent,
but that problem was settled with releases starting at 2.6. Furthermore, PGP uses another
patented encryption algorithm, IDEA, whose use caused some problems at first.
Since PGP is open source, various people and groups have modified it and produced a number
liberalized (otherwise products using AES would not have been exportable from the U.S.), and
the RSA patent expired in September 2000, the legacy of all these problems is that several
incompatible versions of PGP are in circulation, under various names. The discussion below
focuses on classic PGP, which is the oldest and simplest version. Another popular version,
Open PGP, is described in RFC 2440. Yet another is the GNU Privacy Guard.
PGP intentionally uses existing cryptographic algorithms rather than inventing new ones. It is
PGP supports text compression, secrecy, and digital signatures and also provides extensive key
then be e-mailed, of course. Some PGP implementations call a user agent as the final step to
To see how PGP works, let us consider the example of Fig. 8-44. Here, Alice wants to send a
signed plaintext message, P, to Bob in a secure way. Both Alice and Bob have private (DX) and
public (EX) RSA keys. Let us assume that each one knows the other's public key; we will cover
PGP key management shortly.
Figure 8-44. PGP in operation for sending a message.
Alice starts out by invoking the PGP program on her computer. PGP first hashes her message,
P, using MD5, and then encrypts the resulting hash using her private RSA key, DA. When Bob
and compressed using the ZIP program, which uses the Ziv-Lempel algorithm (Ziv and Lempel,
1977). Call the output of this step P1.Z.
Next, PGP prompts Alice for some random input. Both the content and the typing speed are
used to generate a 128-bit IDEA message key, KM (called a session key in the PGP literature,
but this is really a misnomer since there is no session). KM is now used to encrypt P1.Z with
IDEA in cipher feedback mode. In addition, KM is encrypted with Bob's public key, EB. These
section on MIME in Chap. 7. The resulting message then contains only letters, digits, and the
symbols +, /, and =, which means it can be put into an RFC 822 body and be expected to
When Bob gets the message, he reverses the base64 encoding and decrypts the IDEA key
using his private RSA key. Using this key, he decrypts the message to get P1.Z. After
that P is the correct message and that it came from Alice.
It is worth noting that RSA is only used in two places here: to encrypt the 128-bit MD5 hash
and to encrypt the 128-bit IDEA key. Although RSA is slow, it has to encrypt only 256 bits, not
key is correct. The heavyduty encryption is done by IDEA, which is orders of magnitude faster
than RSA. Thus, PGP provides security, compression, and a digital signature and does so in a
PGP supports four RSA key lengths. It is up to the user to select the one that is most
Since RSA is only used for two small computations, everyone should use alien strength keys all
The format of a classic PGP message is shown in Fig. 8-45. Numerous other formats are also in
use. The message has three parts, containing the IDEA key, the signature, and the message,
Figure 8-45. A PGP message.
Key management has received a large amount of attention in PGP as it is the Achilles heel of
sets PGP apart from centralized PKI schemes.
this reason, after X.509 was standardized, PGP supported these certificates as well as the
traditional PGP public key ring mechanism. All current versions of PGP have X.509 support.
8.8.2 PEM—Privacy Enhanced Mail
In contrast to PGP, which was initially a one-man show, our second example, PEM (Privacy
four RFCs: RFC 1421 through RFC 1424. Very roughly, PEM covers the same territory as PGP:
privacy and authentication for RFC 822-based e-mail systems. Nevertheless, it also has some
differences from PGP in approach and technology.
Messages sent using PEM are first converted to a canonical form so they all have the same
DES. In light of the known weakness of a 56-bit key, this choice is certainly suspect. The
As in PGP, each message is encrypted with a one-time key that is enclosed along with the
message. The key can be protected either with RSA or with triple DES using EDE.
Key management is more structured than in PGP. Keys are certified by X.509 certificates
The only problem with PEM is that nobody ever used it and it has long-since gone to that big
any one company with the security of the whole system. The most serious candidate, RSA
this idea. In particular, the U.S. Government is allowed to use all U.S. patents for free, and
companies outside the U.S. had become accustomed to using the RSA algorithm for free (the
company forgot to patent it outside the U.S.). Neither was enthusiastic about suddenly having
to pay RSA Security, Inc., for doing something that they had always done for free. In the end,
no root could be found and PEM collapsed.
8.8.3 S/MIME
IETF's next venture into e-mail security, called S/MIME (Secure/MIME), is described in RFCs
2632 through 2643. Like PEM, it provides authentication, data integrity, secrecy, and
surprisingly, given the name, S/MIME integrates well with MIME, allowing all kinds of messages
to be protected. A variety of new MIME headers are defined, for example, for holding digital
IETF definitely learned something from the PEM experience. S/MIME does not have a rigid
considered valid. S/MIME uses the standard algorithms and protocols we have been examining
people ''crackers.'') Sites that have been cracked include Yahoo, the U.S. Army, the CIA,
NASA, and the New York Times. In most cases, the crackers just put up some funny text and
the C.E.O. was resigning immediately. Within hours, the company's stock dropped by 60%,
URL into her browser and a few seconds later, a Web page appears. But is it Bob's? Maybe yes
intercepting all of Alice's outgoing packets and examining them. When she captures an HTTP
GET request headed to Bob's Web site, she could go to Bob's Web site herself to get the page,
DNS Spoofing
For example, suppose Trudy is able to crack the DNS system, maybe just the DNS cache at
Alice's ISP, and replace Bob's IP address (say, 36.1.2.3) with her (Trudy's) IP address (say,
Fig. 8-46(a). Here (1) Alice asks DNS for Bob's IP address, (2) gets it, (3) asks Bob for his
home page, and (4) gets that, too. After Trudy has modified Bob's DNS record to contain her
own IP address instead of Bob's, we get the situation of Fig. 8-46(b). Here, when Alice looks
up Bob's IP address, she gets Trudy's, so all her traffic intended for Bob goes to Trudy. Trudy
phone lines. Instead, she has to break into a DNS server and change one record, a much
DNS and modifying Bob's record.
How might Trudy fool DNS? It turns out to be relatively easy. Briefly summarized, Trudy can
trick the DNS server at Alice's ISP into sending out a query to look up Bob's address.
Unfortunately, since DNS uses UDP, the DNS server has no real way of checking who supplied
false IP address into the DNS server's cache. For simplicity, we will assume that Alice's ISP
Trudy starts the attack by sending a lookup request to Alice's ISP asking for the IP address of
bob.com. Since there is no entry for this DNS name, the cache server queries the top-level
sends back a false reply saying: ''bob.com is 42.9.9.9,'' where that IP address is hers. If her
false reply gets back to Alice's ISP first, that one will be cached and the real reply will be
rejected as an unsolicited reply to a query no longer outstanding. Tricking a DNS server into
installing a false IP address is called DNS spoofing. A cache that holds an intentionally false
IP address like this is called a poisoned cache.
Actually, things are not quite that simple. First, Alice's ISP checks to see that the reply bears
the correct IP source address of the top-level server. But since Trudy can put anything she
wants in that IP field, she can defeat that test easily since the IP addresses of the top-level
Second, to allow DNS servers to tell which reply goes with which request, all requests carry a
sequence number. To spoof Alice's ISP, Trudy has to know its current sequence number. The
say, trudy-the-intruder.com. Let us assume its IP address is also 42.9.9.9. She also creates a
DNS server for her newly-hatched domain, dns.trudy-the-intruder.com. It, too, uses Trudy's
42.9.9.9 IP address, since Trudy has only one computer. Now she has to make Alice's ISP
aware of her DNS server. That is easy to do. All she has to do is ask Alice's ISP for
foobar.trudy-the-intruder.com, which will cause Alice's ISP to find out who serves Trudy's new
With dns.trudy-the-intruder.com safely in the cache at Alice's ISP, the real attack can start.
Trudy now queries Alice's ISP for www.trudy-the-intruder.com. The ISP naturally sends Trudy's
DNS server a query asking for it. This query bears the sequence number that Trudy is looking
for. Quick like a bunny, Trudy asks Alice's ISP to look up Bob. She immediately answers her
own question by sending the ISP a forged reply, allegedly from the top-level com server
only way to spoof DNS. There are many other ways as well.
Figure 8-47. How Trudy spoofs Alice's ISP.
Secure DNS
This one specific attack can be foiled by having DNS servers use random IDs in their queries
up. The real problem is that DNS was designed at a time when the Internet was a research
environment has changed radically over the years, so in 1994 IETF set up a working group to
make DNS fundamentally secure. This project is known as DNSsec (DNS security); its output
is presented in RFC 2535. Unfortunately, DNSsec has not been fully deployed yet, so numerous
DNS servers are still vulnerable to spoofing attacks.
DNSsec is conceptually extremely simple. It is based on public-key cryptography. Every DNS
zone (in the sense of Fig. 7-4) has a public/private key pair. All information sent by a DNS
secrecy is not an offered service since all the information in DNS is considered public. Since
DNS records are grouped into sets called RRSets (Resource Record Sets), with all the
contain multiple A records, for example, if a DNS name resolves to a primary IP address and a
secondary IP address. The RRSets are extended with several new record types (discussed
below). Each RRSet is cryptographically hashed (e.g., using MD5 or SHA-1). The hash is signed
by the zone's private key (e.g., using RSA). The unit of transmission to clients is the signed
DNSsec introduces several new record types. The first of these is the KEY record. This records
naked. X.509 certificates are not used due to their bulk. The algorithm field holds a 1 for
MD5/RSA signatures (the preferred choice), and other values for other combinations. The
The second new record type is the SIG record. It holds the signed hash according to the
algorithm specified in the KEY record The signature applies to all the records in the RRSet,
including any KEY records present, but excluding itself. It also holds the times when the
the contents of a zone's database can be manually transported (e.g., on CD-ROM) to a
and the SIG records thus produced can be conveyed back to the zone's primary server on CDROM. In this way, the private key can be stored on a CD-ROM locked in a safe except when it
completed, all copies of the key are erased from memory and the disk and the CD-ROM are
needed to store all the keys and signatures in the DNS databases. Some records will increase
the top-level domains. If Alice now wants to visit Bob's Web site, she can ask DNS for the
RRSet of bob.com, which will contain his IP address and a KEY record containing Bob's public
Figure 8-48. An example RRSet for bob.com. The KEY record is Bob's
public key. The SIG record is the top-level com server's signed hash of
the A and KEY records to verify their authenticity.
Now armed with a verified copy of Bob's public key, Alice can ask Bob's DNS server (run by
Bob) for the IP address of www.bob.com. This RRSet will be signed by Bob's private key, so
SIG record contained in it will be incorrect.
server, she cannot forge a response to a query Alice's ISP sent there. She can certainly get her
DNSsec also supports a few other record types. For example, the CERT record can be used for
storing (e.g., X.509) certificates. This record has been provided because some people want to
turn DNS into a PKI. Whether this actually happens remains to be seen. We will stop our
discussion of DNSsec here. For more details, please consult RFC 2535.
Secure DNS is not the only possibility for securing names. A completely different approach is
a secure, scalable, worldwide file system, without modifying (standard) DNS and without using
certificates or assuming the existence of a PKI. In this section we will show how their ideas
the idea is that each URL contains a cryptographic hash of the server's name and public key as
part of the URL. For example, in Fig. 8-49 we see the URL for Bob's photo. It starts out with
the usual http scheme followed by the DNS name of the server (www.bob.com). Then comes a
hash, this is a standard URL. With the hash, it is a self-certifying URL.
Figure 8-49. A self-certifying URL containing a hash of server's name
DNS name of the server with the server's public key and running the result through the SHA-1
available, each one can encode a 5-bit string. A string of 32 characters can hold the 160-bit
SHA-1 hash. Actually, it is not necessary to use a hash; the key itself could be used. The
URL, the browser is sure it has Bob's public key. After all, due to the properties of SHA-1, even
containing a proposed AES session key, a nonce, and a timestamp. She then encrypts the
the AES key. Upon receiving the correct AES-encrypted nonce, Alice knows she is talking to
Bob. Also, Alice and Bob now have an AES session key for subsequent GET requests and
type in the full URL again. Furthermore, the URLs embedded in Web pages can also be self
present in X.509 certificates signed by CAs.
typing in its self-certifying URL (the first time) and going through the same protocol as
Let us now see how well this approach stands up to Trudy's DNS spoofing. If Trudy manages to
poison the cache of Alice's ISP, Alice's request may be falsely delivered to Trudy rather than to
it immediately because the SHA-1 hash will not match the self-certifying URL. If Trudy returns
AES key and nonce. Either way, all spoofing DNS can do is provide a denial-of-service attack.
8.9.3 SSL—The Secure Sockets Layer
SSL (Secure Sockets Layer) to meet this demand. This software and its protocol is now
SSL builds a secure connection between two sockets, including
The positioning of SSL in the usual protocol stack is illustrated in Fig. 8-50. Effectively, it is a
from the browser and sending them down to TCP for transmission to the server. Once the
secure connection has been established, SSL's main job is handling compression and
encryption. When HTTP is used over SSL, it is called HTTPS (Secure HTTP), even though it is
the standard HTTP protocol. Sometimes it is available at a new port (443) instead of the
standard port (80), though. As an aside, SSL is not restricted to being used only with Web
SSL.
The SSL protocol has gone through several versions. Below we will discuss only version 3,
which is the most widely used version. SSL supports a variety of different algorithms and
order to get an export license from the U.S. Government.
SSL consists of two subprotocols, one for establishing a secure connection and one for using it.
a request to Bob to establish a connection. The request specifies the SSL version Alice has and
nonce, RA, to be used later.
Figure 8-51. A simplified version of the SSL connection establishment
Alice can support and sends his own nonce, RB. Then in message 3, he sends a certificate
SSL. Once it has been accomplished, by whatever means, data transport can begin.
As mentioned above, SSL supports multiple cryptographic algorithms. The strongest one uses
triple DES with three separate keys for encryption and SHA-1 for message integrity. This
browser are first broken into units of up to 16 KB. If compression is enabled, each unit is then
hashing algorithm (usually MD5). This hash is appended to each fragment as the MAC. The
compressed fragment plus MAC is then encrypted with the agreed-on symmetric encryption
attached and the fragment is transmitted over the TCP connection.
Figure 8-52. Data transmission using SSL.
A word of caution is in order, however. Since it has been shown that RC4 has some weak keys
that can be easily cryptanalyzed, the security of SSL using RC4 is on shaky ground (Fluhrer et
triple DES with 168-bit keys and SHA-1 all the time, even though this combination is slower
Another problem with SSL is that the principals may not have certificates and even if they do,
In 1996, Netscape Communications Corp. turned SSL over to IETF for standardization. The
result was TLS (Transport Layer Security). It is described in RFC 2246.
The changes made to SSL were relatively small, but just enough that SSL version 3 and TLS
and nonces was changed to make the key stronger (i.e., harder to cryptanalyze). The TLS
version is also known as SSL version 3.1. The first implementations appeared in 1999, but it is
not clear yet whether TLS will replace SSL in practice, even though it is slightly stronger. The
In the early days, when Web pages were just static HTML files, they did not contain executable
JVM (Java Virtual Machine). They can be placed on a Web page for downloading along with
the page. After the page is loaded, the applets are inserted into a JVM interpreter inside the
disk and then erase the flash ROM so the computer can never again be booted, and if the
Do people have a right to privacy? Good question. The Fourth Amendment to the U.S.
U.S.
PGP and who uses a well-guarded alien-strength key can be fairly sure that nobody in the
France was not alone. In April 1993, the U.S. Government announced its intention to make a
A large amount of information about electronic privacy is available at the Electronic Frontier
PGP, SSL, and other technologies make it possible for two parties to establish secure,
group posted their views to a USENET newsgroup via an anonymous remailer. This server
server was located. A court case followed and the server operator was compelled to turn over
A substantial segment of the Internet community was outraged by this breach of
an e-mail message, complete with RFC 822 headers (except From:, of course), encrypts it with
the remailer's public key, and sends it to the remailer. There the outer RFC 822 headers are
Valentine's Day card, so she uses three remailers. She composes the message, M, and puts a
The user configures his browser to use the anonymizer as a proxy. Henceforth, all HTTP
Privacy relates to individuals wanting to restrict what other people can see about them. A
violates French law. Yahoo appealed to a U.S. court, which sided with it, but the issue of whose
A relevant comment from John Gilmore is: ''The net interprets censorship as damage and
systems are Freenet (Clarke et al., 2002), PASIS (Wylie et al., 2000), and Publius (Waldman et
U.K., which has a centuries-long tradition of freedom of speech, is now seriously considering
The Merchant of Venice, and Julius Caesar. Together, these plays total over 700 KB of text.
steganographic encoding method uses the low-order bit of each RGB color value as a covert
compressed to about 274 KB using a standard compression algorithm. The compressed output
was then encrypted using IDEA and inserted into the low-order bits of each color value. As can
in an HTML file can carry information.
Privacy and censorship are just two areas where technology meets public policy. A third one is
copyright. Copyright is the granting to the creators of IP (Intellectual Property), including
others, the exclusive right to exploit their IP for some period of time, typically the life of the
works (e.g., by Shakespeare, Twain, Dickens) on the Web. In 1998, the U.S. Congress
extended copyright in the U.S. by another 20 years at the request of Hollywood, which claimed
are copyrighted. Assume that everyone is on-line all the time via ADSL or cable. Each machine
might find it? If you have an unlocked cabin in the country and a IP thief sneaks in carrying a
1998, Congress passed the DMCA (Digital Millennium Copyright Act) which makes it a
works, many people think that the DMCA completely shifts the balance between the copyright
A case in point. In September 2000, a music industry consortium charged with building an
break the system (which is precisely the right thing to do with any new security system). A
submitted it to a USENIX security conference, where it underwent peer review and was
Industry Association of America which threatened to sue the authors under the DMCA if they
withdrawn, the paper was published (Craver et al., 2001). A new confrontation is virtually
A related issue is the extent of the fair use doctrine, which has been established by court
and (3) the effect of the copying on sales of the work. Since the DMCA and similar laws within
prohibit legal fair use. In effect, the DMCA takes away historical rights from users to give
content sellers more power. A major show-down is inevitable.
Another development in the works that dwarfs even the DMCA in its shifting of the balance
between copyright owners and users is the TCPA (Trusted Computing Platform Alliance)
led by Intel and Microsoft. The idea is to have the CPU chip and operating system carefully
the key to turn the plaintext into the ciphertext. Triple DES and Rijndael (AES) are the most
properties make it possible to publish the public key. The main public-key algorithm is RSA,
Commonly, messages to be signed are hashed using algorithms such as MD5 or SHA-1, and
wireless networks need good security and 802.11's WEP does not provide it, although 802.11i
E-mail security can be achieved by a combination of the techniques we have studied in this
chapter. PGP, for example, compresses messages, then encrypts them using IDEA. It sends
the IDEA key encrypted with the receiver's public key. In addition, it also hashes the message
to prevent DNS spoofing, as do self-certifying names. Most e-commerce Web sites use SSL to
6. A fundamental cryptographic principle states that all messages must have redundancy.
7. In Fig. 8-6, the P-boxes and S-boxes alternate. Although this arrangement is
esthetically pleasing, is it any more secure than first having all the P-boxes and then all
the S-boxes?
8. Design an attack on DES based on the knowledge that the plaintext consists exclusively
of upper case ASCII letters, plus space, comma, period, semicolon, carriage return, and
version of AES. However, current machines might have 1024 processors and take 1
obtain the AES-breaking machine. If Moore's law (computing power doubles every 18
10. AES supports a 256-bit key. How many keys does AES-256 have? See if you can find
11. Suppose that a message has been encrypted using DES in ciphertext block chaining
14. Using the RSA public key cryptosystem, with a = 1, b = 2, etc.,
15. Suppose a user, Maria, discovers that her private RSA key (d 1, n 1) is same as the
public RSA key (e 2, n 2) of another user, Frances. In other words, d 1 = e 2 and n 1 =
16. Consider the use of counter mode, as shown in Fig. 8-15, but with IV = 0. Does the use
lose the contents of his RAM. What problems does this cause and what can he do to
18. In Fig. 8-20, we see how Alice can send Bob a signed message. If Trudy replaces P, Bob
can detect it. But what happens if Trudy replaces both P and the signature?
transactions, a contract might be drawn up and the user asked to sign its SHA-1 hash.
20. A math class has 20 students. What is the probability that at least two students have
it to her in plaintext along with an X.509 certificate signed by the root CA. Alice already
has the public key of the root CA. What steps does Alice carry out to verify that she is
24. Suppose that a system uses PKI based on a tree-structured hierarchy of CAs. Alice
wants to communicate with Bob, and receives a certificate from Bob signed by a CA X
X. What steps does Alice take to verify that she is talking to Bob?
25. Can IPsec using AH be used in transport mode if one of the machines is behind a NAT
26. Give one advantage of HMACs over using RSA to sign SHA-1 hashes.
28. The WEP packet format is shown in Fig. 8-31. Suppose that the checksum is 32 bits,
weaknesses and that IV's are extended to 128 bits. Is there any way for an intruder to
29. Suppose an organization uses VPN to securely connect its sites over the Internet. Is
33. In the protocol of Fig. 8-39, why is A sent in plaintext along with the encrypted session
random number, effectively a second secret key known only to its user and the KDC.
34. In the Needham-Schroeder protocol, Alice generates two challenges, RA and RA2. This
service availability, what is the effect if AS or TGS goes down?
36. In the public-key authentication protocol of Fig. 8-43, in message 7, RB is encrypted
with KS. Is this encryption necessary, or would it have been adequate to send it back in
37. Point-of-sale terminals that use magnetic-stripe cards and PIN codes have a fatal flaw:
information on the card as well as the PIN code in order to post additional (fake)
with a complete CPU, keyboard, and tiny display on the card. Devise a protocol for this
38. Give two reasons why PGP compresses messages.
39. Assuming that everyone on the Internet used PGP, could a PGP message be sent to an
41. It has been proposed to foil DNS spoofing using ID prediction by having the server put
in a random ID rather than using a counter. Discuss the security aspects of this
42. The SSL data transport protocol involves two nonces as well as a premaster key. What
43. The image of Fig. 8-55(b) contains the ASCII text of five plays by Shakespeare. Would
48. Write a procedure that computes the SHA-1 hash of a block of data. The procedure
output buffer. To see the exact specification of SHA-1, search the Internet for FIPS 1801, which is the full specification.
frequently publish papers in this area are IEEE Transactions on Communications, IEEE Journal
IEEE also publishes three magazines—IEEE Internet Computing, IEEE Network Magazine, and
IEEE Communications Magazine—that contain surveys, tutorials, and case studies on
papers on networks and distributed systems, in particular, SIGCOMM Annual Conference, The
Most of these are tutorials or surveys on the subject. A few are chapters from textbooks.
A new century, a new technology. Sounds good. After some history of wireless, the major
IEEE Internet Computing, Jan.-Feb. 2000
The first issue of IEEE Internet Computing in the new millennium did exactly what you would
Kyas and Crawford, ATM Networks
ATM was once touted as the networking protocol of the future, and is still important within the
telephone system. This book is an up-to-date guide to ATM's current status, with detailed
information on ATM protocols and how they can integrate with IP-based networks.
Kwok, "A Vision for Residential Broadband Service"
Naughton, A Brief History of the Future
happened, and in a witty and charming way, replete with anecdotes, such as AT&T's
Wetteroth, OSI Reference Model for Telecommunications
Though the OSI protocols themselves are not used any more, the seven-layer model has
become very well-known. As well as explaining more about OSI, this book applies the model to
the inventor of the ALOHA system discusses numerous channel allocation methods that can be
used for VSAT systems.
The telephone system, fiber, ADSL, cable networks, satellites, even power lines are covered
digital switching, fiber optics, mobile telephony, and DSL.
fourth-generation wireless networks. These networks are expected to provide IP service
Cable TV has gone from simple CATV to a complex distribution system for TV, Internet, and
of cable plant, standards, and marketing, with an emphasis on DOCSIS, this article is worth
Farserotu and Prasad, "A Survey of Future Broadband Multimedia Satellite Systems, Issues,
A variety of data communication satellites are in the sky or on the drawing board, including
Hu and Li, "Satellite-Based Internet: A Tutorial"
Joel, "Telecommunications and the IEEE Communications Society"
telephones, analog and digital switching, submarine cables, digital transmission, ATM,
television broadcasting, satellites, cable TV, optical communications, mobile phones, packet
switching, the ARPANET, and the Internet.
generation will be, this is a good place to look. Topics covered include GPRS, IS-95B, WCDMA,
Carlson, PPP Design, Implementation and Debugging, 2nd ed.
If you are interested in detailed information on all the protocols that make up the PPP suite,
including CCP (compression) and ECP (encryption), this book is a good reference. There is a
particular focus on ANU PPP-2.3, a popular implementation of PPP.
Peterson and Davie, Computer Networks: A Systems Approach
stop-and-wait protocols, sliding window protocols, and IEEE 802 LANs.
data link protocols, including stop-and-wait and go back n. The HDLC-type protocols are also
Crow et al., "IEEE 802.11 Wireless Local Area Networks"
start. The emphasis is on the MAC sublayer. Both distributed control and centralized control
Eklund et al., "IEEE Standard 802.16: A Technical Overview of the Wireless MAN Air Interface
The wireless local loop standardized by IEEE in 2002 as 802.16 may revolutionize telephone
Miller and Cummins, LAN Technologies Explained
Need to know more about the technologies that can be used in a LAN? This book covers most
of them, including FDDI and token ring as well as the everpopular Ethernet. While new
networks are still common (e.g., SONET).
Perlman's book is the place to look. The author designed the algorithms used in the IEEE 802
The emphasis in the technology section is on the physical layer, including topics such as TDD
versus FDD, adaptive versus fixed modulation, and number of carriers.
Bhatti and Crowcroft, "QoS Sensitive Flows: Issues in IP Packet Handling"
Comer, Internetworking with TCP/IP, Vol. 1, 4th ed.
Comer has written the definitive work on the TCP/IP protocol suite. Chapters 4 through 11 deal
with IP and related protocols in the network layer. The other chapters deal primarily with the
for you. Both pronounceable algorithms (e.g., RIP, CIDR, and MBONE) and unpronounceable
algorithms (e.g., OSPF, IGRP, EGP, and BGP) are treated in great detail. New features, such as
multicast, mobile IP, and resource reservation, are also here.
Malhotra, IP Routing
For a detailed guide to IP routing, this book contains a lot of material. The protocols covered
include RIP, RIP-2, IGRP, EIGRP, OSPF, and BGP-4.
Metz, "IP Routers: New Tool for Gigabit Networking"
Nemeth et al., UNIX System Administration Handbook
Perkins, "Mobile Networking through Mobile IP"
As mobile computing devices become more and more common, Mobile IP is becoming more
Royer and Toh, "A Review of Current Routing Protocols for Ad-Hoc Mobile Wireless Networks"
The AODV ad hoc routing algorithm that we discussed in Chap. 5 is not the only one known. A
variety of other ones, including DSDV, CGSR, WRP, DSR, TORA, ABR, DRP, and SRP, are
Stevens, TCP/IP Illustrated, Vol. 1
Chapters 3-10 provide a comprehensive treatment of IP and related protocols (ARP, RARP, and
ICMP) illustrated by examples.
Striegel and Manimaran, "A Survey of QoS Multicasting Issues"
Yang and Reddy, "A Taxonomy for Congestion Control Algorithms in Packet Switching
Comer, Internetworking with TCP/IP, Vol. 1, 4th ed.
As mentioned above, Comer has written the definitive work on the TCP/IP protocol suite. Chap.
12 is about UDP; Chap. 13 is about TCP.
If you like your information straight from the source, this is the place to learn more about TCP.
After all, Cerf co-invented it. Chapter 7 is a good reference on TCP, showing how to interpret
cover UDP, IGMP, ICMP and ARP.
Kurose and Ross, Computer Networking: A Top-Down Approach Featuring the Internet
Chapter 3 is about the transport layer and contains a fair amount of material on UDP and TCP.
Mogul, "IP Network Performance"
Despite the title of this article, it is at least, if not more, about TCP and network performance
in general, than about IP performance in particular. It is full of useful guidelines and rules of
Peterson and Davie, Computer Networks: A Systems Approach
Chapter 5 is about UDP, TCP, and a few related protocols. Network performance is also
Stevens, TCP/IP Illustrated, Vol. 1
Chapters 17-24 provide a comprehensive treatment of TCP illustrated by examples.
Bergholz, "Extending Your Markup: An XML Tutorial"
A short and straightforward introduction to XML for beginners.
A perspective on the Web and where it is going by the person who invented it and some of his
colleagues at CERN. The article focuses on the Web architecture, URLs, HTTP, and HTML, as
Collins, "Carrier Grade Voice over IP"
over IP using H.323, this is a good place to look. Although the book is long and detailed, it is
Davison, "A Web Caching Primer"
Shahabi et al. "Yima: A Second-Generation Continuous Media Server"
Multimedia servers are complex systems that have to manage CPU scheduling, disk file
Tittel et al., Mastering XHTML
there's a text describing XHTML, focusing mostly on how it differs from regular HTML. Then
XHTML 1.0.
Varshney et al., "Voice over IP"
How does voice over IP work and is it going to replace the public switched telephone network?
breaking DES on their PCs. The real problems range from dishonest employees (a bank clerk's
changing a customer's mailing address to his own to intercept the bank card and PIN number)
to programming errors (giving all customers the same PIN code). What is especially interesting
warns that without PKI and encryption, the Internet could become a large-scale surveillance
message hashes, authentication, Kerberos, PKI, IPsec, SSL/TLS, and e-mail security are all
to protect a single PC to the advanced firewall appliances that sit between a private network
This monumental compendium is NSA's worst nightmare: a single book that describes every
the book contains most of the algorithms as runnable programs (in C). Furthermore, over
ABRAMSON, N.: "Internet Access Using VSATs," IEEE Commun. Magazine, vol. 38, pp. 60-68,
ABRAMSON,N.: "Development of the ALOHANET," IEEE Trans. on Information Theory, vol. IT31, pp. 119-123, March 1985.
ADAMS, M., and DULCHINOS, D.: "OpenCable," IEEE Commun. Magazine, vol. 39, pp. 98-105,
ALKHATIB, H.S., BAILEY, C., GERLA, M., and MCRAE, J.: "Wireless Data Networks: Reaching
ANDERSON, R.J.: "Free Speech Online and Office," Computer, vol. 25, pp. 28-30, June 2002.
ANDERSON, R.J.: Security Engineering, New York: Wiley, 2001.
ANDERSON, R.J.: "The Eternity Service," Proc. First Int'l Conf. on Theory and Appl. of
Cryptology, CTU Publishing House, 1996.
ANDERSON, R.J.: "Why Cryptosystems Fail," Commun. of the ACM, vol. 37, pp. 32-40, Nov.
ARTZ, D.: "Digital Steganography," IEEE Internet Computing, vol. 5, pp. 75-80, 2001.
AZZAM, A.A., and RANSOM, N.: Broadband Access Technologies, New York: McGraw-Hill,
BAKNE, A., and BADRINATH, B.R.: "I-TCP: Indirect TCP for Mobile Hosts," Proc. 15th Int'l Conf.
on Distr. Computer Systems, IEEE, pp. 136-143, 1995.
BALAKRISHNAN, H., SESHAN, S., and KATZ, R.H.: "Improving Reliable Transport and Handoff
Performance in Cellular Wireless Networks," Proc. ACM Mobile Computing and Networking
Conf., ACM, pp. 2-11, 1995.
BALLARDIE, T., FRANCIS, P., and CROWCROFT, J.: "Core Based Trees (CBT)," Proc. SIGCOMM
'93 Conf., ACM, pp. 85-95, 1993.
BARAKAT, C., ALTMAN, E., and DABBOUS, W.: "On TCP Performance in a Heterogeneous
Network: A Survey," IEEE Commun. Magazine, vol. 38, pp. 40-46, Jan. 2000.
BELLAMY, J.: Digital Telephony, 3rd ed., New York: Wiley, 2000.
BELLMAN, R.E.: Dynamic Programming, Princeton, NJ: Princeton University Press, 1957.
BELSNES, D.: "Flow Control in the Packet Switching Networks," Communications Networks,
BENNET, C.H., and BRASSARD, G.: "Quantum Cryptography: Public Key Distribution and Coin
BEREZDIVIN, R., BREINIG, R., and TOPP, R.: "Next-Generation Wireless Communication
Concepts and Technologies," IEEE Commun. Magazine, vol. 40, pp. 108-116, March 2002.
BERGHEL, H.L.: "Cyber Privacy in the New Millennium," Computer, vol. 34, pp. 132-134, Jan.
BERGHOLZ, A.: "Extending Your Markup: An XML Tutorial," IEEE Internet Computing, vol. 4,
BERNERS-LEE, T., CAILLIAU, A., LOUTONEN, A., NIELSEN, H.F., and SECRET, A.: "The World
Wide Web," Commun. of the ACM, vol. 37, pp. 76-82, Aug. 1994.
BERTSEKAS, D., and GALLAGER, R.: Data Networks, 2nd ed., Englewood Cliffs, NJ: Prentice
BHAGWAT, P.: "Bluetooth: Technology for Short-Range Wireless Apps," IEEE Internet
BHARGHAVAN, V., DEMERS, A., SHENKER, S., and ZHANG, L.: "MACAW: A Media Access
Protocol for Wireless LANs," Proc. SIGCOMM '94 Conf., ACM, pp. 212-225, 1994.
BHATTI, S.N., and CROWCROFT, J.: "QoS Sensitive Flows: Issues in IP Packet Handling," IEEE
BI, Q., ZYSMAN, G.I., and MENKES, H.: "Wireless Mobile Communications at the Start of the
21st Century," IEEE Commun. Magazine, vol. 39, pp. 110-116, Jan, 2001.
BIHAM, E., and SHAMIR, A.: "Differential Cryptanalysis of the Data Encryption Standard," Proc.
17th Ann. Int'l Cryptology Conf., Berlin: Springer-Verlag LNCS 1294, pp. 513-525, 1997.
BIRD, R., GOPAL, I., HERZBERG, A., JANSON, P.A., KUTTEN, S., MOLVA, R, and YUNG, M.:
"Systematic Design of a Family of Attack-Resistant Authentication Protocols," IEEE J. on
BIRRELL, A.D., and NELSON, B.J.: "Implementing Remote Procedure Calls," ACM Trans. on
BIRYUKOV, A., SHAMIR, A., and WAGNER, D.: "Real Time Cryptanalysis of A5/1 on a PC,"
Proc. Seventh Int'l Workshop on Fast Software Encryption, Berlin: Springer-Verlag LNCS 1978,
BISDIKIAN, C.: "An Overview of the Bluetooth Wireless Technology," IEEE Commun. Magazine,
BLAZE, M.: "Protocol Failure in the Escrowed Encryption Standard," Proc. Second ACM Conf. on
Computer and Commun. Security, ACM, pp. 59-67, 1994.
BLAZE, M., and BELLOVIN, S.: "Tapping on My Network Door," Commun. of the ACM, vol. 43,
BOGINENI, K., SIVALINGAM, K.M., and DOWD, P.W.: "Low-Complexity Multiple Access
Protocols for Wavelength-Division Multiplexed Photonic Networks," IEEE Journal on Selected
BOLCSKEI, H., PAULRAJ, A.J., HARI, K.V.S., and NABAR, R.U.: "Fixed Broadband Wireless
Access: State of the Art, Challenges, and Future Directions," IEEE Commun. Magazine, vol. 39,
BORISOV, N., GOLDBERG, I., and WAGNER, D.: "Intercepting Mobile Communications: The
Insecurity of 802.11," Seventh Int'l Conf. on Mobile Computing and Networking, ACM, pp. 180188, 2001.
BRANDS, S.: Rethinking Public Key Infrastructures and Digital Certificates, Cambridge, MA:
M.I.T. Press, 2000.
BRAY, J., and STURMAN, C.F.: Bluetooth 1.1: Connect without Cables, 2nd ed., Upper Saddle
River, NJ: Prentice Hall, 2002.
BREYER, R., and RILEY, S.: Switched, Fast, and Gigabit Ethernet, Indianapolis, IN: New Riders,
BROWN, S.: Implementing Virtual Private Networks, New York: McGraw-Hill, 1999.
BROWN, L., KWAN, M., PIEPRZYK, J., and SEBERRY, J.: "Improving Resistance to Differential
Cryptanalysis and the Redesign of LOKI," ASIACRYPT '91 Abstracts, pp. 25-30, 1991.
BURNETT, S., and PAINE, S.: RSA Security's Official Guide to Cryptography, Berkeley, CA:
CAPETANAKIS, J.I.: "Tree Algorithms for Packet Broadcast Channels," IEEE Trans. on
Information Theory, vol. IT-25, pp. 505-515, Sept. 1979.
CARDELLINI, V., CASALICCHIO, E., COLAJANNI, M., and YU, P.S.: "The State-of-the-Art in
Locally Distributed Web-Server Systems," ACM Computing Surveys, vol. 34, pp. 263-311, June
CARLSON, J.: PPP Design, Implementation and Debugging, 2nd ed., Boston: Addison-Wesley,
CERF, V., and KAHN, R.: "A Protocol for Packet Network Interconnection," IEEE Trans. on
Commun., vol. COM-22, pp. 637-648, May 1974.
CHAKRABARTI, S.: "QoS Issues in Ad Hoc Wireless Networks," IEEE Commun. Magazine, vol.
CHASE, J.S., GALLATIN, A.J., and YOCUM, K.G.: "End System Optimizations for High-Speed
TCP," IEEE Commun. Magazine, vol. 39, pp. 68-75, April 2001.
CHEN, B., JAMIESON, K., BALAKRISHNAN, H., and MORRIS, R.: "Span: An Energy-Efficient
Coordination Algorithm for Topology Maintenance in Ad Hoc Wireless Networks," ACM Wireless
CHEN, K.-C.: "Medium Access Control of Wireless LANs for Mobile Computing," IEEE Network
CHOUDBURY, A.K., MAXEMCHUK, N.F., PAUL, S., and SCHULZRINNE, H.G.: "Copyright
Protection for Electronic Publishing on Computer Networks," IEEE Network Magazine, vol. 9,
CHU, Y., RAO, S.G., and ZHANG, H.: "A Case for End System Multicast," Proc. Int'l Conf. on
Measurements and Modeling of Computer Syst., ACM, pp. 1-12, 2000.
CLARK, D.D.: "The Design Philosophy of the DARPA Internet Protocols," Proc. SIGCOMM '88
Conf., ACM, pp. 106-114, 1988.
CLARK, D.D.: "Window and Acknowledgement Strategy in TCP," RFC 813, July 1982.
CLARK, D.D., DAVIE, B.S., FARBER, D.J., GOPAL, I.S., KADABA, B.K., SINCOSKIE, W.D.,
SMITH, J.M., and TENNENHOUSE, D.L.: "The Aurora Gigabit Testbed," Computer Networks and
ISDN Systems, vol. 25, pp. 599-621, Jan. 1993.
CLARK, D.D., JACOBSON, V., ROMKEY, J., and SALWEN, H.: "An Analysis of TCP Processing
Overhead," IEEE Commun. Magazine, vol. 27, pp. 23-29, June 1989.
CLARK, D.D., LAMBERT, M., and ZHANG, L.: "NETBLT: A High Throughput Transport Protocol,"
Proc. SIGCOMM '87 Conf., ACM, pp. 353-359, 1987.
CLARKE, A.C.: "Extra-Terrestrial Relays," Wireless World, 1945.
CLARKE, I., MILLER, S.G., HONG, T.W., SANDBERG, O., and WILEY, B.: "Protecting Free
Expression Online with Freenet," IEEE Internet Computing, vol. 6, pp. 40-49, Jan.-Feb. 2002.
COLLINS, D.: Carrier Grade Voice over IP, New York: McGraw-Hill, 2001.
COLLINS, D., and SMITH, C.: 3G Wireless Networks, New York: McGraw-Hill, 2001.
COMER, D.E.: The Internet Book, Englewood Cliffs, NJ: Prentice Hall, 1995.
COMER, D.E.: Internetworking with TCP/IP, vol. 1, 4th ed., Englewood Cliffs, NJ: Prentice Hall,
COSTA, L.H.M.K., FDIDA, S., and DUARTE, O.C.M.B.: "Hop by Hop Multicast Routing Protocol,"
Commun., ACM, pp. 249-259, 2001.
CRAVER, S.A., WU, M., LIU, B., STUBBLEFIELD, A., SWARTZLANDER, B., WALLACH, D.W.,
DEAN, D., and FELTEN, E.W.: "Reading Between the Lines: Lessons from the SDMI Challenge,"
Proc. 10th USENIX Security Symp., USENIX, 2001.
CRESPO, P.M., HONIG, M.L., and SALEHI, J.A.: "Spread-Time Code-Division Multiple Access,"
IEEE Trans. on Commun., vol. 43, pp. 2139-2148, June 1995.
CROW, B.P., WIDJAJA, I, KIM, J.G., and SAKAI, P.T.: "IEEE 802.11 Wireless Local Area
Networks," IEEE Commun. Magazine, vol. 35, pp. 116-126, Sept. 1997.
CROWCROFT, J., WANG, Z., SMITH, A., and ADAMS, J.: "A Rough Comparison of the IETF and
ATM Service Models," IEEE Network Magazine, vol. 9, pp. 12-16, Nov./Dec. 1995.
DABEK, F., BRUNSKILL, E., KAASHOEK, M.F., KARGER, D., MORRIS, R., STOICA, R., and
BALAKRISHNAN, H.: "Building Peer-to-Peer Systems With Chord, a Distributed Lookup
Service," Proc. 8th Workshop on Hot Topics in Operating Systems, IEEE, pp. 71-76, 2001a.
DABEK, F., KAASHOEK, M.F., KARGER, D., MORRIS, R., and STOICA, I.: "Wide-Area
Cooperative Storage with CFS," Proc. 18th Symp. on Operating Systems Prin., ACM, pp. 20215 , 2001b.
DAEMEN, J., and RIJMEN, V.: The Design of Rijndael, Berlin: Springer-Verlag, 2002.
DANTHINE, A.A.S.: "Protocol Representation with Finite-State Models," IEEE Trans. on
Commun., vol. COM-28, pp. 632-643, April 1980.
DAVIDSON, J., and PETERS, J.: Voice over IP Fundamentals, Indianapolis, IN: Cisco Press,
DAVIE, B., and REKHTER, Y.: MPLS Technology and Applications, San Francisco: Morgan
DAVIS, P.T., and MCGUFFIN, C.R.: Wireless Local Area Networks, New York: McGraw-Hill,
DAVISON, B.D.: "A Web Caching Primer," IEEE Internet Computing, vol. 5, pp. 38-45, JulyAug. 2001.
DAY, J.D.: "The (Un)Revised OSI Reference Model," Computer Commun. Rev., vol. 25, pp. 3955, Oct. 1995.
DAY, J.D., and ZIMMERMANN, H.: "The OSI Reference Model," Proc. of the IEEE, vol. 71, pp.
DE VRIENDT, J., LAINE, P., LEROUGE, C, and XU, X.: "Mobile Network Evolution: A Revolution
on the Move," IEEE Commun. Magazine, vol. 40, pp. 104-111, April 2002.
DEERING, S.E.: "SIP: Simple Internet Protocol," IEEE Network Magazine, vol. 7, pp. 16-28,
DEMERS, A., KESHAV, S., and SHENKER, S.: "Analysis and Simulation of a Fair Queueing
DENNING, D.E., and SACCO, G.M.: "Timestamps in Key Distribution Protocols," Commun. of
the ACM, vol. 24, pp. 533-536, Aug. 1981.
DIFFIE, W., and HELLMAN, M.E.: "Exhaustive Cryptanalysis of the NBS Data Encryption
DIFFIE, W., and HELLMAN, M.E.: "New Directions in Cryptography," IEEE Trans. on Information
Theory, vol. IT-22, pp. 644-654, Nov. 1976.
DIJKSTRA, E.W.: "A Note on Two Problems in Connexion with Graphs," Numer. Math., vol. 1,
DOBROWSKI, G., and GRISE, D.: ATM and SONET Basics, Fuquay-Varina, NC: APDG Telecom
DONALDSON, G., and JONES, D.: "Cable Television Broadband Network Architectures," IEEE
DORFMAN, R.: "Detection of Defective Members of a Large Population," Annals Math.
DOUFEXI, A., ARMOUR, S., BUTLER, M., NIX, A., BULL, D., MCGEEHAN, J., and KARLSSON, P.:
"A Comparison of the HIPERLAN/2 and IEEE 802.11A Wireless LAN Standards," IEEE Commun.
DURAND, A.: "Deploying IPv6," IEEE Internet Computing, vol. 5, pp. 79-81, Jan.-Feb. 2001.
DUTCHER, B.: The NAT Handbook, New York: Wiley, 2001.
DUTTA-ROY, A.: "An Overview of Cable Modem Technology and Market Perspectives," IEEE
EASTTOM, C.: Learn JavaScript, Ashburton, U.K.: Wordware Publishing, 2001.
EL GAMAL, T.: "A Public-Key Cryptosystem and a Signature Scheme Based on Discrete
Logarithms," IEEE Trans. on Information Theory, vol. IT-31, pp. 469-472, July 1985.
ELHANANY, I., KAHANE, M., and SADOT, D.: "Packet Scheduling in Next-Generation
ELMIRGHANI, J.M.H., and MOUFTAH, H.T.: "Technologies and Architectures for Scalable
Dynamic Dense WDM Networks," IEEE Commun. Magazine, vol. 38, pp. 58-66, Feb. 2000.
FARSEROTU, J., and PRASAD, R.: "A Survey of Future Broadband Multimedia Satellite
Systems, Issues, and Trends," IEEE Commun. Magazine, vol. 38, pp. 128-133, June 2000.
FIORINI, D., CHIANI, M., TRALLI, V., and SALATI., C.: "Can we Trust HDLC?," Computer
FLOYD, S., and JACOBSON, V.: "Random Early Detection for Congestion Avoidance," IEEE/ACM
FLUHRER, S., MANTIN, I., and SHAMIR, A.: "Weakness in the Key Scheduling Algorithm of
FORD, L.R., Jr., and FULKERSON, D.R.: Flows in Networks, Princeton, NJ: Princeton University
FORD, W., and BAUM, M.S.: Secure Electronic Commerce, Upper Saddle River, NJ: Prentice
FORMAN, G.H., and ZAHORJAN, J.: "The Challenges of Mobile Computing," Computer, vol. 27,
FRANCIS, P.: "A Near-Term Architecture for Deploying Pip," IEEE Network Magazine, vol. 7,
FRASER, A.G.: "Towards a Universal Data Transport System," in Advances in Local Area
Networks, Kummerle, K., Tobagi, F., and Limb, J.O. (Eds.), New York: IEEE Press, 1987.
FRENGLE, N.: I-Mode: A Primer, New York: Hungry Minds, 2002.
GADECKI, C., and HECKERT, C.: ATM for Dummies, New York: Hungry Minds, 1997.
GARBER, L.: "Will 3G Really Be the Next Big Wireless Technology?," Computer, vol. 35, pp. 2632, Jan. 2002.
GARFINKEL, S., with SPAFFORD, G.: Web Security, Privacy, and Commerce, Sebastopol, CA:
O'Reilly, 2002.
GEIER, J.: Wireless LANs, 2nd ed., Indianapolis, IN: Sams, 2002.
GEVROS, P., CROWCROFT, J., KIRSTEIN, P., and BHATTI, S.: "Congestion Control Mechanisms
and the Best Effort Service Model," IEEE Network Magazine, vol. 15, pp. 16-25, May-June
GHANI, N., and DIXIT, S.: "TCP/IP Enhancements for Satellite Networks," IEEE Commun.
GINSBURG, D.: ATM: Solutions for Enterprise Networking, Boston: Addison-Wesley, 1996.
GOODMAN, D.J.: "The Wireless Internet: Promises and Challenges," Computer, vol. 33, pp.
GORALSKI, W.J.: Optical Networking and WDM, New York: McGraw-Hill, 2001.
GORALSKI, W.J.: SONET, 2nd ed., New York: McGraw-Hill, 2000.
GORALSKI, W.J.: Introduction to ATM Networking, New York: McGraw-Hill, 1995.
GOSSAIN, H., DE MORAIS CORDEIRO, and AGRAWAL, D.P.: "Multicast: Wired to Wireless,"
IEEE Commun. Mag., vol. 40, pp. 116-123, June 2002.
GRAVANO, S.: Introduction to Error Control Codes, Oxford, U.K.: Oxford University Press,
GUO, Y., and CHASKAR, H.: "Class-Based Quality of Service over Air Interfaces in 4G Mobile
Networks," IEEE Commun. Magazine, vol. 40, pp. 132-137, March 2002.
HAARTSEN, J.: "The Bluetooth Radio System," IEEE Personal Commun. Magazine, vol. 7, pp.
HAC, A.: "Wireless and Cellular Architecture and Services," IEEE Commun. Magazine, vol. 33,
HAC, A., and GUO, L.: "A Scalable Mobile Host Protocol for the Internet," Int'l J. of Network
HALL, E., and CERF, V.: Internet Core Protocols: The Definitive Guide, Sebastopol, CA:
O'Reilly, 2000.
HAMMING, R.W.: "Error Detecting and Error Correcting Codes," Bell System Tech. J., vol. 29,
HANEGAN, K.: Custom CGI Scripting with Perl, New York: Wiley, 2001.
HARRIS, A.: JavaScript Programming for the Absolute Beginner, Premier Press, 2001.
HARTE, L., KELLOGG, S., DREHER, R., and SCHAFFNIT, T.: The Comprehensive Guide to
Wireless Technology, Fuquay-Varina, NC: APDG Publishing, 2000.
HARTE, L., LEVINE, R., and KIKTA, R.: 3G Wireless Demystified, New York: McGraw-Hill, 2002.
HAWLEY, G.T.: "Historical Perspectives on the U.S. Telephone System," IEEE Commun.
HECHT, J.: "Understanding Fiber Optics," Upper Saddle River, NJ: Prentice Hall, 2001.
HEEGARD, C., COFFEY, J.T., GUMMADI, S., MURPHY, P.A., PROVENCIO, R., ROSSIN, E.J.,
SCHRUM, S., and SHOEMAKER, M.B.: "High-Performance Wireless Ethernet," IEEE Commun.
HELD, G.: The Complete Modem Reference, 2nd ed., New York: Wiley, 1994.
HELLMAN, M.E.: "A Cryptanalytic Time-Memory Tradeoff," IEEE Trans. on Information Theory,
vol. IT-26, pp. 401-406, July 1980.
HILLS, A.: "Large-Scale Wireless LAN Design," IEEE Commun. Magazine, vol. 39, pp. 98-104,
HOLZMANN, G.J.: Design and Validation of Computer Protocols, Englewood Cliffs, NJ: Prentice
HU, Y., and LI, V.O.K.: "Satellite-Based Internet Access," IEEE Commun. Magazine, vol. 39,
HU, Y.-C., and JOHNSON, D.B.: "Implicit Source Routes for On-Demand Ad Hoc Network
Routing," Proc. ACM Int'l Symp. on Mobile Ad Hoc Networking & Computing, ACM, pp. 1-10,
HUANG, V., and ZHUANG, W.: "QoS-Oriented Access Control for 4G Mobile Multimedia CDMA
Communications," IEEE Commun. Magazine, vol. 40, pp. 118-125, March 2002.
HUBER, J.F., WEILER, D., and BRAND, H.: "UMTS, the Mobile Multimedia Vision for IMT-2000:
A Focus on Standardization," IEEE Commun. Magazine, vol. 38, pp. 129-136, Sept. 2000. nr u
HUI, J.: "A Broadband Packet Switch for Multi-rate Services," Proc. Int'l Conf. on Commun.,
IEEE, pp. 782-788, 1987.
HUITEMA, C.: Routing in the Internet, Englewood Cliffs, NJ: Prentice Hall, 1995.
HULL, S.: Content Delivery Networks, Berkeley, CA: Osborne/McGraw-Hill, 2002.
HUMBLET, P.A., RAMASWAMI, R., and SIVARAJAN, K.N.: "An Efficient Communication Protocol
for High-Speed Packet-Switched Multichannel Networks," Proc. SIGCOMM '92 Conf., ACM, pp.
HUNTER, D.K., and ANDONOVIC, I.: "Approaches to Optical Internet Packet Switching," IEEE
HUSTON, G.: "TCP in a Wireless World," IEEE Internet Computing, vol. 5, pp. 82-84, MarchApril, 2001.
IBE, O.C.: Essentials of ATM Networks and Services, Boston: Addison-Wesley, 1997.
IRMER, T.: "Shaping Future Telecommunications: The Challenge of Global Standardization,"
IEEE Commun. Magazine, vol. 32, pp. 20-28, Jan. 1994.
IZZO, P.: Gigabit Networks, New York: Wiley, 2000.
JACOBSON, V.: "Congestion Avoidance and Control," Proc. SIGCOMM '88 Conf., ACM, pp. 314329, 1988.
JAIN, R.: "Congestion Control and Traffic Management in ATM Networks: Recent Advances and
a Survey," Computer Networks and ISDN Systems, vol. 27, Nov. 1995.
JAIN, R.: FDDI Handbook—High-Speed Networking Using Fiber and Other Media, Boston:
JAIN, R.: "Congestion Control in Computer Networks: Issues and Trends," IEEE Network
JAKOBSSON, M., and WETZEL, S.: "Security Weaknesses in Bluetooth," Topics in Cryptology:
CT-RSA 2001, Berlin: Springer-Verlag LNCS 2020, pp. 176-191, 2001.
JOEL, A.: "Telecommunications and the IEEE Communications Society," IEEE Commun.
JOHANSSON, P., KAZANTZIDIS, M., KAPOOR, R., and GERLA, M.: "Bluetooth: An Enabler for
Personal Area Networking," IEEE Network Magazine, vol. 15, pp. 28-37, Sept.-Oct 2001.
JOHNSON, D.B.: "Scalable Support for Transparent Mobile Host Internetworking," Wireless
JOHNSON, H.W.: Fast Ethernet—Dawn of a New Network, Englewood Cliffs, NJ: Prentice Hall,
JOHNSON, N.F., and JAJODA, S.: "Exploring Steganography: Seeing the Unseen," Computer,
KAHN, D.: "Cryptology Goes Public," IEEE Commun. Magazine, vol. 18, pp. 19-28, March 1980.
KAHN, D.: The Codebreakers, 2nd ed., New York: Macmillan, 1995.
KAMOUN, F., and KLEINROCK, L.: "Stochastic Performance Evaluation of Hierarchical Routing
KAPP, S.: "802.11: Leaving the Wire Behind," IEEE Internet Computing, vol. 6, pp. 82-85,
KARN, P.: "MACA—A New Channel Access Protocol for Packet Radio," ARRL/CRRL Amateur
KARTALOPOULOS, S.: Introduction to DWDM Technology: Data in a Rainbow, New York, NY:
IEEE Communications Society, 1999.
KASERA, S.K., HJALMTYSSON, G., TOWLSEY, D.F., and KUROSE, J.F.: "Scalable Reliable
Multicast Using Multiple Multicast Channels," IEEE/ACM Trans. on Networking, vol. 8, pp. 294310, 2000.
KATZ, D., and FORD, P.S.: "TUBA: Replacing IP with CLNP," IEEE Network Magazine, vol. 7,
KATZENBEISSER, S., and PETITCOLAS, F.A.P.: Information Hiding Techniques for
KAUFMAN, C., PERLMAN, R., and SPECINER, M.: Network Security, 2nd ed., Englewood Cliffs,
NJ: Prentice Hall, 2002.
KELLERER, W., VOGEL, H.-J., and STEINBERG, K.-E.: "A Communication Gateway for
Infrastructure-Independent 4G Wireless Access," IEEE Commun. Magazine, vol. 40, pp. 126131, March 2002.
KERCKHOFF, A.: "La Cryptographie Militaire," J. des Sciences Militaires, vol. 9, pp. 5-38, Jan.
KIM, J.B., SUDA, T., and YOSHIMURA, M.: "International Standardization of B-ISDN,"
Computer Networks and ISDN Systems, vol. 27, pp. 5-27, Oct. 1994.
KIPNIS, J.: "Beating the System: Abuses of the Standards Adoptions Process," IEEE Commun.
KLEINROCK, L.: "On Some Principles of Nomadic Computing and Multi-Access
Communications," IEEE Commun. Magazine, vol. 38, pp. 46-50, July 2000.
KLEINROCK, L., and TOBAGI, F.: "Random Access Techniques for Data Transmission over
KRISHNAMURTHY, B., and REXFORD, J.: Web Protocols and Practice, Boston: Addison-Wesley,
KUMAR, V., KORPI, M., and SENGODAN, S.: IP Telephony with H.323, New York: Wiley, 2001.
KUROSE, J.F., and ROSS, K.W.: Computer Networking: A Top-Down Approach Featuring the
KWOK, T.: "A Vision for Residential Broadband Service: ATM to the Home," IEEE Network
KYAS, O., and CRAWFORD, G.: ATM Networks, Upper Saddle River, NJ: Prentice Hall, 2002.
LAM, C.K.M., and TAN, B.C.Y.: "The Internet Is Changing the Music Industry," Commun. of the
ACM, vol. 44, pp. 62-66, Aug. 2001.
LANSFORD, J., STEPHENS, A, and NEVO, R.: "Wi-Fi (802.11b) and Bluetooth: Enabling
Coexistence," IEEE Network Magazine, vol. 15, pp. 20-27, Sept.-Oct 2001.
LASH, D.A.: The Web Wizard's Guide to Perl and CGI, Boston: Addison-Wesley, 2002.
LAUBACH, M.E., FARBER, D.J., and DUKES, S.D.: Delivering Internet Connections over Cable,
LEE, J.S., and MILLER, L.E.: CDMA Systems Engineering Handbook, London: Artech House,
LEEPER, D.G.: "A Long-Term View of Short-Range Wireless," Computer, vol. 34, pp. 39-44,
LEINER, B.M., COLE, R., POSTEL, J., and MILLS, D.: "The DARPA Internet Protocol Suite," IEEE
LEVINE, D.A., and AKYILDIZ, I.A.: "PROTON: A Media Access Control Protocol for Optical
Networks with Star Topology," IEEE/ACM Trans. on Networking, vol. 3, pp. 158-168, April
LEVY, S.: "Crypto Rebels," Wired, pp. 54-61, May/June 1993.
LI, J., BLAKE, C., DE COUTO, D.S.J., LEE, H.I., and MORRIS, R.: "Capacity of Ad Hoc Wireless
Networks," Proc. 7th Int'l Conf. on Mobile Computing and Networking, ACM, pp. 61-69, 2001.
LIN, F., CHU, P., and LIU, M.: "Protocol Verification Using Reachability Analysis: The State
Space Explosion Problem and Relief Strategies," Proc. SIGCOMM '87 Conf., ACM, pp. 126-135,
LIN, Y.-D., HSU, N.-B., and HWANG, R.-H.: "QoS Routing Granularity in MPLS Networks" , IEEE
LISTANI, M., ERAMO, V., and SABELLA, R.: "Architectural and Technological Issues for Future
Optical Internet Networks," IEEE Commun. Magazine, vol. 38, pp. 82-92, Sept. 2000.
LIU, C.L., and LAYLAND, J.W.: "Scheduling Algorithms for Multiprogramming in a Hard RealTime Environment," Journal of the ACM, vol. 20, pp. 46-61, Jan. 1973.
LIVINGSTON, D.: Essential XML for Web Professionals, Upper Saddle River, NJ: Prentice Hall,
LOSHIN, P.: IPv6 Clearly Explained, San Francisco: Morgan Kaufmann, 1999.
LOUIS, P.J.: Broadband Crash Course, New York: McGraw-Hill, 2002.
LU, W.: Broadband Wireless Mobile: 3G and Beyond, New York: Wiley, 2002.
MACEDONIA, M.R.: "Distributed File Sharing," Computer, vol. 33, pp. 99-101, 2000.
MADRUGA, E.L., and GARCIA-LUNA-ACEVES, J.J.: "Scalable Multicasting: the Core-Assisted
MALHOTRA, R.: IP Routing, Sebastopol, CA: O'Reilly, 2002.
MATSUI, M.: "Linear Cryptanalysis Method for DES Cipher," Advances in Cryptology—
Eurocrypt '93 Proceedings, Berlin: Springer-Verlag LNCS 765, pp. 386-397, 1994.
MAUFER, T.A.: IP Fundamentals, Upper Saddle River, NJ: Prentice Hall, 1999.
MAZIERES, D., and KAASHOEK, M.F.: "The Design, Implementation, and Operation of an Email
Pseudonym Server," Proc. Fifth Conf. on Computer and Commun. Security, ACM, pp. 27-36,
MAZIERES, D., KAMINSKY, M., KAASHOEK, M.F., and WITCHEL, E.: "Separating Key
Management from File System Security," Proc. 17th Symp. on Operating Systems Prin., ACM,
MCFEDRIES, P: Using JavaScript, Indianapolis, IN: Que, 2001.
MCKENNEY, P.E., and DOVE, K.F.: "Efficient Demultiplexing of Incoming TCP Packets," Proc.
SIGCOMM '92 Conf., ACM, pp. 269-279, 1992.
MELTZER, K., and MICHALSKI, B.: Writing CGI Applications with Perl, Boston: Addison-Wesley,
MENEZES, A.J., and VANSTONE, S.A.: "Elliptic Curve Cryptosystems and Their
MERKLE, R.C.: "Fast Software Encryption Functions," Advances in Cryptology— CRYPTO '90
Proceedings, Berlin: Springer-Verlag LNCS 473, pp. 476-501, 1991.
MERKLE, R.C., and HELLMAN, M.: "On the Security of Multiple Encryption," Commun. of the
ACM, vol. 24, pp. 465-467, July 1981.
MERKLE, R.C., and HELLMAN, M.: "Hiding and Signatures in Trapdoor Knapsacks," IEEE Trans.
on Information Theory, vol. IT-24, pp. 525-530, Sept. 1978.
METCALFE, R.M.: "On Mobile Computing," Byte, vol. 20, p. 110, Sept. 1995.
METCALFE, R.M.: "Computer/Network Interface Design: Lessons from Arpanet and Ethernet,"
IEEE Journal on Selected Areas in Commun., vol. 11, pp. 173-179, Feb. 1993.
METCALFE, R.M., and BOGGS, D.R.: "Ethernet: Distributed Packet Switching for Local
Computer Networks," Commun. of the ACM, vol. 19, pp. 395-404, July 1976.
METZ, C: "Interconnecting ISP Networks," IEEE Internet Computing, vol. 5, pp. 74-80, MarchApril 2001.
METZ, C.: "Differentiated Services," IEEE Multimedia Magazine, vol. 7, pp. 84-90, July-Sept.
METZ, C.: "IP Routers: New Tool for Gigabit Networking," IEEE Internet Computing, vol. 2, pp.
MILLER, B.A., and BISDIKIAN, C.,: Bluetooth Revealed, Upper Saddle River, NJ: Prentice Hall,
MILLER, P., and CUMMINS, M.: LAN Technologies Explained, Woburn, MA: ButterworthHeinemann, 2000.
MINOLI, D.: Video Dialtone Technology, New York: McGraw-Hill, 1995.
MINOLI, D., and VITELLA, M.: ATM & Cell Relay for Corporate Environments, New York:
MISHRA, P.P., and KANAKIA, H.: "A Hop by Hop Rate-Based Congestion Control Scheme,"
Proc. SIGCOMM '92 Conf., ACM, pp. 112-123, 1992.
MISRA, A., DAS, S., DUTTA, A., MCAULEY, A., and DAS, S.: "IDMP-Based Fast Handoffs and
Paging in IP-Based 4G Mobile Networks," IEEE Commun. Magazine, vol. 40, pp. 138-145,
MOGUL, J.C.: "IP Network Performance," in Internet System Handbook, Lynch, D.C. and Rose,
M.T. (eds.), Boston: Addison-Wesley, pp. 575-675, 1993.
MOK, A.K., and WARD, S.A.: "Distributed Broadcast Channel Access," Computer Networks, vol.
MOY, J.: "Multicast Routing Extensions," Commun. of the ACM, vol. 37, pp. 61-66, AUg. 1994.
MULLINS, J.: "Making Unbreakable Code," IEEE Spectrum, pp. 40-45, May 2002.
NAGLE, J.: "On Packet Switches with Infinite Storage," IEEE Trans. on Commun., vol. COM-35,
NAGLE, J.: "Congestion Control in TCP/IP Internetworks," Computer Commun. Rev., vol. 14,
NARAYANASWAMI, C., KAMIJOH, N., RAGHUNATH, M., INOUE, T., CIPOLLA, T., SANFORD, J.,
SCHLIG, E., VENTKITESWARAN, S., GUNIGUNTALA, D., KULKARNI, V., and YAMAZAKI, K.:
"IBM's Linux Watch: The Challenge of Miniaturization," Computer, vol. 35, pp. 33-41, Jan.
NAUGHTON, J.: "A Brief History of the Future," Woodstock, NY: Overlook Press, 2000.
NEEDHAM, R.M., and SCHROEDER, M.D.: "Authentication Revisited," Operating Systems Rev.,
NEEDHAM, R.M., and SCHROEDER, M.D.: "Using Encryption for Authentication in Large
Networks of Computers," Commun. of the ACM, vol. 21, pp. 993-999, Dec. 1978.
NELAKUDITI, S., and ZHANG, Z.-L.: "A Localized Adaptive Proportioning Approach to QoS
Routing," IEEE Commun. Magazine vol. 40, pp. 66-71, June 2002.
NEMETH, E., SNYDER, G., SEEBASS, S., and HEIN, T.R.: UNIX System Administration
Handbook, 3rd ed., Englewood Cliffs, NJ: Prentice Hall, 2000.
NICHOLS, R.K., and LEKKAS, P.C.: Wireless Security, New York: McGraw-Hill, 2002.
NIST: "Secure Hash Algorithm," U.S. Government Federal Information Processing Standard
O'HARA, B., and PETRICK, A.: 802.11 Handbook: A Designer's Companion, New York: IEEE
OTWAY, D., and REES, O.: "Efficient and Timely Mutual Authentication," Operating Systems
OVADIA, S.: Broadband Cable TV Access Networks: from Technologies to Applications, Upper
Saddle River, NJ: Prentice Hall, 2001.
PALAIS, J.C.: Fiber Optic Commun., 3rd ed., Englewood Cliffs, NJ: Prentice Hall, 1992.
PAN, D.: "A Tutorial on MPEG/Audio Compression," IEEE Multimedia Magazine, vol. 2, pp.6074, Summer 1995.
PANDYA, R.: "Emerging Mobile and Personal Communication Systems," IEEE Commun.
PARAMESWARAN, M., SUSARLA, A., and WHINSTON, A.B.: "P2P Networking: An InformationSharing Alternative," Computer, vol. 34, pp. 31-38, July 2001.
PARK, J.S., and SANDHU, R.: "Secure Cookies on the Web," IEEE Internet Computing, vol. 4,
PARTRIDGE, C., HUGHES, J., and STONE, J.: "Performance of Checksums and CRCs over Real
Data," Proc. SIGCOMM '95 Conf., ACM, pp. 68-76, 1995.
PAXSON, V.: "Growth Trends in Wide-Area TCP Connections," IEEE Network Magazine, vol. 8,
PAXSON, V., and FLOYD, S.: "Wide-Area Traffic: The Failure of Poisson Modeling," Proc.
SIGCOMM '94 Conf., ACM, pp. 257-268, 1995.
PEPELNJAK, I., and GUICHARD, J.: MPLS and VPN Architectures, Indianapolis, IN: Cisco Press,
PERKINS, C.E.: RTP: Audio and Video for the Internet, Boston: Addison-Wesley, 2002.
PERKINS, C.E. (ed.): Ad Hoc Networking, Boston: Addison-Wesley, 2001.
PERKINS, C.E.: Mobile IP Design Principles and Practices, Upper Saddle River, NJ: Prentice
PERKINS, C.E.: "Mobile Networking in the Internet," Mobile Networks and Applications, vol. 3,
PERKINS, C.E.: "Mobile Networking through Mobile IP," IEEE Internet Computing, vol. 2, pp.
PERKINS, C.E., and ROYER, E.: "The Ad Hoc On-Demand Distance-Vector Protocol," in Ad Hoc
Networking, edited by C. Perkins, Boston: Addison-Wesley, 2001.
PERKINS, C.E., and ROYER, E.: "Ad-hoc On-Demand Distance Vector Routing," Proc. Second
Ann. IEEE Workshop on Mobile Computing Systems and Applications, IEEE, pp. 90-100, 1999.
PERLMAN, R.: Interconnections, 2nd ed., Boston: Addison-Wesley, 2000.
PERLMAN, R.: Network Layer Protocols with Byzantine Robustness, Ph.D. thesis, M.I.T., 1988.
PERLMAN, R., and KAUFMAN, C.: "Key Exchange in IPsec," IEEE Internet Computing, vol. 4,
PETERSON, L.L., and DAVIE, B.S.: Computer Networks: A Systems Approach, San Francisco:
PETERSON, W.W., and BROWN, D.T.: "Cyclic Codes for Error Detection," Proc. IRE, vol. 49, pp.
PICKHOLTZ, R.L., SCHILLING, D.L., and MILSTEIN, L.B.: "Theory of Spread Spectrum
Communication—A Tutorial," IEEE Trans. on Commun., vol. COM-30, pp. 855-884, May 1982.
PIERRE, G., KUZ, I., VAN STEEN, M., TANENBAUM, A.S.: "Differentiated Strategies for
PIERRE, G., VAN STEEN, M., and TANENBAUM, A.S.: "Dynamically Selecting Optimal
Distribution Strategies for Web Documents," IEEE Trans. on Computers, vol. 51, pp., June
PISCITELLO, D.M., and CHAPIN, A.L.: Open Systems Networking: TCP/IP and OSI, Boston:
PITT, D.A.: "Bridging—The Double Standard," IEEE Network Magazine, vol. 2, pp. 94-95, Jan.
PIVA, A., BARTOLINI, F., and BARNI, M.: "Managing Copyrights in Open Networks," IEEE
POHLMANN, N.: Firewall Systems, Bonn, Germany: MITP-Verlag, 2001.
PUZMANOVA, R.: Routing and Switching: Time of Convergence?, London: AddisonWesley,
RABINOVICH, M., and SPATSCHECK, O,: Web Caching and Replication, Boston: AddisonWesley, 2002.
RAJU, J., and GARCIA-LUNA-ACEVES, J.J.: "Scenario-based Comparison of Source-Tracing and
Dynamic Source Routing Protocols for Ad-Hoc Networks," ACM Computer Communications
RAMANATHAN, R., and REDI, J.: "A Brief Overview of Ad Hoc Networks: Challenges and
Directions," IEEE Commun. Magazine, 50th Anniversary Issue, pp. 20-22, May 2002.
RATNASAMY, S., FRANCIS, P., HANDLEY, M., KARP, R., and SHENKER, S.: "A Scalable
Content-Addressable Network," Proc. SIGCOMM '01 Conf., ACM, pp. 1161-172, 2001.
RIVEST, R.L.: "The MD5 Message-Digest Algorithm," RFC 1320, April 1992.
RIVEST, R.L., and SHAMIR, A.: "How to Expose an Eavesdropper," Commun. of the ACM, vol.
RIVEST, R.L., SHAMIR, A., and ADLEMAN, L.: "On a Method for Obtaining Digital Signatures
and Public Key Cryptosystems," Commun. of the ACM, vol. 21, pp. 120-126, Feb. 1978.
ROBERTS, L.G.: "Dynamic Allocation of Satellite Capacity through Packet Reservation," Proc.
NCC, AFIPS, pp. 711-716, 1973.
ROBERTS, L.G.: "Extensions of Packet Communication Technology to a Hand Held Personal
Terminal," Proc. Spring Joint Computer Conference, AFIPS, pp. 295-298, 1972.
ROBERTS, L.G.: "Multiple Computer Networks and Intercomputer Communication," Proc. First
Symp. on Operating Systems Prin., ACM, 1967.
ROSE, M.T.: The Simple Book, Englewood Cliffs, NJ: Prentice Hall, 1994.
ROSE, M.T.: The Internet Message, Englewood Cliffs, NJ: Prentice Hall, 1993.
ROSE, M.T., and MCCLOGHRIE, K.: How to Manage Your Network Using SNMP, Englewood
Cliffs, NJ: Prentice Hall, 1995.
ROWSTRON, A., and DRUSCHEL, P.: "Storage Management and Caching in PAST, a LargeScale, Persistent Peer-to-Peer Storage Utility," Proc. 18th Symp. on Operating Systems Prin.,
ACM, pp. 188-201, 2001a.
ROWSTRON, A., and DRUSCHEL, P.: "Pastry: Scalable, Distributed Object Location and Routing
Platforms, ACM/IFIP, 2001b.
ROYER, E.M., and TOH, C.-K.: "A Review of Current Routing Protocols for Ad-Hoc Mobile
Wireless Networks," IEEE Personal Commun. Magazine, vol. 6, pp. 46-55, April 1999.
RUIZ-SANCHEZ, M.A., BIERSACK, E.W., and DABBOUS, W.: "Survey and Taxonomy of IP
Address Lookup Algorithms," IEEE Network Magazine, vol. 15, pp. 8-23, March-April 2001.
SAIRAM, K.V.S.S.S.S., GUNASEKARAN, N., and REDDY, S.R.: "Bluetooth in Wireless
Communication," IEEE Commun. Mag., vol. 40, pp. 90-96, June 2002.
SALTZER, J.H., REED, D.P., and CLARK, D.D.: "End-to-End Arguments in System Design," ACM
SANDERSON, D.W., and DOUGHERTY, D.: Smileys, Sebastopol, CA: O'Reilly, 1993.
SARI, H., VANHAVERBEKE, F., and MOENECLAEY, M.: "Extending the Capacity of Multiple
Access Channels," IEEE Commun. Magazine, vol. 38, pp. 74-82, Jan. 2000.
SARIKAYA, B.: "Packet Mode in Wireless Networks: Overview of Transition to Third
Generation," IEEE Commun. Magazine, vol. 38, pp. 164-172, Sept. 2000.
SCHNEIER, B.: Secrets and Lies, New York: Wiley, 2000.
SCHNEIER, B.: Applied Cryptography, 2nd ed., New York: Wiley, 1996.
SCHNEIER, B.: E-Mail Security, New York: Wiley, 1995.
SCHNEIER, B.: "Description of a New Variable-Length Key, 64-Bit Block Cipher [Blowfish],"
Proc. of the Cambridge Security Workshop, Berlin: Springer-Verlag LNCS 809, pp. 191-204,
SCHNORR, C.P.: "Efficient Signature Generation for Smart Cards," Journal of Cryptology, vol.
SCHOLTZ, R.A.: "The Origins of Spread-Spectrum Communications," IEEE Trans. on Commun.,
vol. COM-30, pp. 822-854, May 1982.
SCOTT, R.: "Wide Open Encryption Design Offers Flexible Implementations," Cryptologia, vol.
SEIFERT, R.: The Switch Book, Boston: Addison-Wesley, 2000.
SEIFERT, R.: Gigabit Ethernet, Boston: Addison-Wesley, 1998.
SENN, J.A.: "The Emergence of M-Commerce," Computer, vol. 33, pp. 148-150, Dec. 2000.
SERJANTOV, A.: "Anonymizing Censorship Resistant Systems," Proc. First Int'l Workshop on
Peer-to-Peer Systems, Berlin: Springer-Verlag LNCS, 2002.
SEVERANCE, C.: "IEEE 802.11: Wireless Is Coming Home," Computer, vol. 32, pp. 126-127,
SHAHABI, C., ZIMMERMANN, R., FU, K., and YAO, S.-Y.D.: "YIMA: A Second-Generation
SHANNON, C.: "A Mathematical Theory of Communication," Bell System Tech. J., vol. 27, pp.
SHEPARD, S.: SONET/SDH Demystified, New York: McGraw-Hill, 2001.
SHREEDHAR, M., and VARGHESE, G.: "Efficient Fair Queueing Using Deficit Round Robin,"
Proc. SIGCOMM '95 Conf., ACM, pp. 231-243, 1995.
SKOUDIS, E.: Counter Hack, Upper Saddle River, NJ: Prentice Hall, 2002.
SMITH, D.K., and ALEXANDER, R.C.: Fumbling the Future, New York: William Morrow, 1988.
SMITH, R.W.: Broadband Internet Connections, Boston: Addison Wesley, 2002.
SNOEREN, A.C., and BALAKRISHNAN, H.: "An End-to-End Approach to Host Mobility," Int'l
Conf. on Mobile Computing and Networking , ACM, pp. 155-166, 2000.
SOBEL, D.L.: "Will Carnivore Devour Online Privacy," Computer, vol. 34, pp. 87-88, May 2001.
SOLOMON, J.D.: Mobile IP: The Internet Unplugged, Upper Saddle River, NJ: Prentice Hall,
SPOHN, M., and GARCIA-LUNA-ACEVES, J.J.: "Neighborhood Aware Source Routing," Proc.
ACM MobiHoc 2001, ACM, pp. 2001.
SPURGEON, C.E.: Ethernet: The Definitive Guide, Sebastopol, CA: O'Reilly, 2000.
STALLINGS, W.: Data and Computer Communications, 6th ed., Upper Saddle River, NJ:
STEINMETZ, R., and NAHRSTEDT, K.: Multimedia Fundamentals. Vol. 1: Media Coding and
Content Processing, Upper Saddle River, NJ: Prentice Hall, 2002.
STEINMETZ, R., and NAHRSTEDT, K.: Multimedia Fundamentals. Vol. 2: Media Processing and
Communications, Upper Saddle River, NJ: Prentice Hall, 2003a.
STEINMETZ, R., and NAHRSTEDT, K.: Multimedia Fundamentals. Vol. 3: Documents, Security,
and Applications, Upper Saddle River, NJ: Prentice Hall, 2003b.
STEINER, J.G., NEUMAN, B.C., and SCHILLER, J.I.: "Kerberos: An Authentication Service for
Open Network Systems," Proc. Winter USENIX Conf., USENIX, pp. 191-201, 1988.
STEVENS, W.R.: UNIX Network Programming, Volume 1: Networking APIs - Sockets and XTI,
Upper Saddle River, NJ: Prentice Hall, 1997.
STEVENS, W.R.: TCP/IP Illustrated, Vol. 1, Boston: Addison-Wesley, 1994.
STEWART, R., and METZ, C.: "SCTP: New Transport Protocol for TCP/IP," IEEE Internet
STINSON, D.R.: Cryptography Theory and Practice, 2nd ed., Boca Raton, FL: CRC Press, 2002.
STOICA, I., MORRIS, R., KARGER, D., KAASHOEK, M.F., and BALAKRISHNAN, H.: "Chord: A
Scalable Peer-to-Peer Lookup Service for Internet Applications," Proc. SIGCOMM '01 Conf.,
ACM, pp. 149-160, 2001.
STRIEGEL, A., and MANIMARAN, G.: "A Survey of QoS Multicasting Issues," IEEE Commun.
STUBBLEFIELD, A., IOANNIDIS, J., and RUBIN, A.D.: "Using the Fluhrer, Mantin, and Shamir
Attack to Break WEP," Proc Network and Distributed Systems Security Symp., ISOC, pp. 1-11,
SUMMERS, C.K.: ADSL: Standards, Implementation, and Architecture, Boca Raton, FL: CRC
SUNSHINE, C.A., and DALAL, Y.K.: "Connection Management in Transport Protocols,"
TANENBAUM, A.S.: Modern Operating Systems, Upper Saddle River, NJ: Prentice Hall, 2001.
TANENBAUM, A.S., and VAN STEEN, M.: Distributed Systems: Principles and Paradigms, Upper
Saddle River, NJ: Prentice Hall, 2002.
TEGER, S., and WAKS, D.J.: "End-User Perspectives on Home Networking," IEEE Commun.
THYAGARAJAN, A.S., and DEERING, S.E.: "Hierarchical Distance-Vector Multicast Routing for
the MBone," Proc. SIGCOMM '95 Conf., ACM, pp. 60-66, 1995.
TITTEL, E., VALENTINE, C., BURMEISTER, M., and DYKES, L.: Mastering XHTML, Alameda, CA:
TOKORO, M., and TAMARU, K.: "Acknowledging Ethernet," Compcon, IEEE, pp. 320-325, Fall
TOMLINSON, R.S.: "Selecting Sequence Numbers," Proc. SIGCOMM/SIGOPS Inter-process
Commun. Workshop, ACM, pp. 11-23, 1975.
TSENG, Y.-C., WU, S.-L., LIAO, W.-H., and CHAO, C.-M.: "Location Awareness in Ad Hoc
TUCHMAN, W.: "Hellman Presents No Shortcut Solutions to DES," IEEE Spectrum, vol. 16, pp.
TURNER, J.S.: "New Directions in Communications (or Which Way to the Information Age),"
IEEE Commun. Magazine, vol. 24, pp. 8-15, Oct. 1986.
VACCA, J.R.: I-Mode Crash Course, New York: McGraw-Hill, 2002.
VALADE, J.,: PHP & MySQL for Dummies, New York: Hungry Minds, 2002.
VARGHESE, G., and LAUCK, T.: "Hashed and Hierarchical Timing Wheels: Data Structures for
ACM, pp. 25-38, 1987.
VARSHNEY, U., SNOW, A., MCGIVERN, M., and HOWARD, C.: "Voice over IP," Commun. of the
ACM, vol. 45, pp. 89-96, 2002.
VARSHNEY, U., and VETTER, R.: "Emerging Mobile and Wireless Networks," Commun. of the
ACM, vol. 43, pp. 73-81, June 2000.
VETTER, P., GODERIS, D., VERPOOTEN, L., and GRANGER, A.: "Systems Aspects of
APON/VDSL Deployment," IEEE Commun. Magazine, vol. 38, pp. 66-72, May 2000.
WADDINGTON, D.G., and CHANG, F.: "Realizing the Transition to IPv6," IEEE Commun. Mag.,
WALDMAN, M., RUBIN, A.D., and CRANOR, L.F.: "Publius: A Robust, Tamper-Evident,
Censorship-Resistant, Web Publishing System," Proc. Ninth USENIX Security Symp., USENIX,
WANG, Y., and CHEN, W.: "Supporting IP Multicast for Mobile Hosts," Mobile Networks and
WANG, Z.: Internet QoS, San Francisco: Morgan Kaufmann, 2001.
WARNEKE, B., LAST, M., LIEBOWITZ, B., and PISTER, K.S.J.: "Smart Dust: Communicating
WAYNER, P.: Disappearing Cryptography: Information Hiding, Steganography, and
WEBB, W.: "Broadband Fixed Wireless Access as a Key Component of the Future Integrated
Communications Environment," IEEE Commun. Magazine, vol. 39, pp. 115-121, Sept. 2001.
WEISER, M.: "Whatever Happened to the Next Generation Internet?," Commun. of the ACM,
WELTMAN, R., and DAHBURA, T.: LDAP Programming with Java, Boston: AddisonWesley, 2000.
WESSELS, D.: Web Caching, Sebastopol, CA: O'Reilly, 2001.
WETTEROTH, D.: OSI Reference Model for Telecommunications, New York: McGraw-Hill, 2001.
WILJAKKA, J.: "Transition to Ipv6 in GPRS and WCDMA Mobile Networks," IEEE Commun.
WILLIAMSON, H.: XML: The Complete Reference, New York: McGraw-Hill, 2001.
WILLINGER, W., TAQQU, M.S., SHERMAN, R., and WILSON, D.V.: "Self-Similarity through High
Variability: Statistical Analysis of Ethernet LAN Traffic at the Source Level," Proc. SIGCOMM '95
Conf., ACM, pp. 100-113, 1995.
WRIGHT, D.J.: Voice over Packet Networks, New York: Wiley, 2001.
WYLIE, J., BIGRIGG, M.W., STRUNK, J.D., GANGER, G.R., KILICCOTE, H., and KHOSLA, P.K.:
XYLOMENOS, G., POLYZOS, G.C., MAHONEN, P., and SAARANEN, M.: "TCP Performance Issues
over Wireless Links" , IEEE Commun. Magazine, vol. 39, pp. 52-58, April 2001.
YANG, C.-Q., and REDDY, A.V.S.: "A Taxonomy for Congestion Control Algorithms in Packet
Switching Networks," IEEE Network Magazine, vol. 9, pp. 34-45, July/Aug. 1995.
YUVAL, G.: "How to Swindle Rabin," Cryptologia, vol. 3, pp. 187-190, July 1979.
ZACKS, M.: "Antiterrorist Legislation Expands Electronic Snooping," IEEE Internet Computing,
ZADEH, A.N., JABBARI, B., PICKHOLTZ, R., and VOJCIC, B.: "Self-Organizing Packet Radio Ad
Hoc Networks with Overlay (SOPRANO)," IEEE Commun. Mag., vol. 40, pp. 149-157, June
ZHANG, L.: "Comparison of Two Bridge Routing Approaches," IEEE Network Magazine, vol. 2,
ZHANG, L.: "RSVP: A New Resource ReSerVation Protocol," IEEE Network Magazine, vol. 7, pp.
ZHANG, Y., and RYU, B.: "Mobile and Multicast IP Services in PACS: System Architecture,
ZIMMERMANN, P.R.: The Official PGP User's Guide, Cambridge, MA: M.I.T. Press, 1995a.
ZIMMERMANN, P.R.: PGP: Source Code and Internals, Cambridge, MA: M.I.T. Press, 1995b.
ZIPF, G.K.: Human Behavior and the Principle of Least Effort: An Introduction to Human
ZIV, J., and LEMPEL, Z.: "A Universal Algorithm for Sequential Data Compression," IEEE Trans.
on Information Theory, vol. IT-23, pp. 337-343, May 1977.
